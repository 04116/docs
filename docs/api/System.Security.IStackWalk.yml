items:
- uid: System.Security.IStackWalk
  id: IStackWalk
  parent: System.Security
  children:
  - System.Security.IStackWalk.Assert
  - System.Security.IStackWalk.Demand
  - System.Security.IStackWalk.Deny
  - System.Security.IStackWalk.PermitOnly
  href: System.Security.IStackWalk.yml
  name: IStackWalk
  fullName: System.Security.IStackWalk
  type: Interface
  source:
    remote: &o0
      path: src/mscorlib/src/System/Security/IStackWalk.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Security/IStackWalk.cs
    startLine: 6
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Manages the stack walk that determines whether all callers in the call stack have the required permissions to access a protected resource.
  syntax:
    content: public interface IStackWalk
    content.vb: Public Interface IStackWalk
- uid: System.Security.IStackWalk.Assert
  id: Assert
  parent: System.Security.IStackWalk
  href: System.Security.IStackWalk.yml
  name: Assert()
  fullName: System.Security.IStackWalk.Assert()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/IStackWalk.cs
    startLine: 9
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Asserts that the calling code can access the resource identified by the current permission object, even if callers higher in the stack have not been granted permission to access the resource.
  syntax:
    content: void Assert()
    content.vb: Sub Assert
  exceptions:
  - type: System.Security.SecurityException
    description: The calling code does not have @'System.Security.Permissions.SecurityPermissionFlag.Assertion'.
- uid: System.Security.IStackWalk.Demand
  id: Demand
  parent: System.Security.IStackWalk
  href: System.Security.IStackWalk.yml
  name: Demand()
  fullName: System.Security.IStackWalk.Demand()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/IStackWalk.cs
    startLine: 12
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Determines at run time whether all callers in the call stack have been granted the permission specified by the current permission object.
  syntax:
    content: void Demand()
    content.vb: Sub Demand
  exceptions:
  - type: System.Security.SecurityException
    description: A caller higher in the call stack does not have the permission specified by the current permission object.-or- A caller in the call stack has called @'System.Security.IStackWalk.Deny' on the current permission object.
- uid: System.Security.IStackWalk.Deny
  id: Deny
  parent: System.Security.IStackWalk
  href: System.Security.IStackWalk.yml
  name: Deny()
  fullName: System.Security.IStackWalk.Deny()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/IStackWalk.cs
    startLine: 15
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Causes every @'System.Security.IStackWalk.Demand' for the current object that passes through the calling code to fail.
  syntax:
    content: void Deny()
    content.vb: Sub Deny
- uid: System.Security.IStackWalk.PermitOnly
  id: PermitOnly
  parent: System.Security.IStackWalk
  href: System.Security.IStackWalk.yml
  name: PermitOnly()
  fullName: System.Security.IStackWalk.PermitOnly()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/IStackWalk.cs
    startLine: 18
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Causes every @'System.Security.IStackWalk.Demand' for all objects except the current one that passes through the calling code to fail, even if code higher in the call stack has been granted permission to access other resources.
  syntax:
    content: void PermitOnly()
    content.vb: Sub PermitOnly
references:
- uid: System.Security
  isExternal: false
  name: System.Security
  fullName: System.Security
  type: Namespace
