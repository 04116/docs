items:
- uid: System.Xml.XmlNameTable
  id: XmlNameTable
  parent: System.Xml
  children:
  - System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlNameTable.Add(System.String)
  - System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlNameTable.Get(System.String)
  href: System.Xml.XmlNameTable.yml
  name: XmlNameTable
  fullName: System.Xml.XmlNameTable
  type: Class
  source:
    remote: &o0
      path: src/System.Xml.ReaderWriter/src/System/Xml/XmlNameTable.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
    path: src/System.Xml.ReaderWriter/src/System/Xml/XmlNameTable.cs
    startLine: 13
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Table of atomized string objects.
  syntax:
    content: public abstract class XmlNameTable
    content.vb: Public MustInherit Class XmlNameTable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)
  id: Get(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlNameTable
  href: System.Xml.XmlNameTable.yml
  name: Get(Char[], Int32, Int32)
  name.vb: Get(Char(), Int32, Int32)
  fullName: System.Xml.XmlNameTable.Get(System.Char[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlNameTable.Get(System.Char(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.ReaderWriter/src/System/Xml/XmlNameTable.cs
    startLine: 20
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array.
  syntax:
    content: public abstract string Get(char[] array, int offset, int length)
    content.vb: Public MustOverride Function Get(array As Char(), offset As Integer, length As Integer) As String
    parameters:
    - id: array
      type: System.Char[]
      description: The character array containing the name to look up.
    - id: offset
      type: System.Int32
      description: The zero-based index into the array specifying the first character of the name.
    - id: length
      type: System.Int32
      description: The number of characters in the name.
    return:
      type: System.String
  exceptions:
  - type: System.IndexOutOfRangeException
    description: 0 > *offset*-or- *offset* >= *array*.Length -or- *length* > *array*.Length The above conditions do not cause an exception to be thrown if *length* =0.
  - type: System.ArgumentOutOfRangeException
    description: '*length* < 0.'
- uid: System.Xml.XmlNameTable.Get(System.String)
  id: Get(System.String)
  parent: System.Xml.XmlNameTable
  href: System.Xml.XmlNameTable.yml
  name: Get(String)
  fullName: System.Xml.XmlNameTable.Get(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.ReaderWriter/src/System/Xml/XmlNameTable.cs
    startLine: 29
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the atomized string containing the same value as the specified string.
  syntax:
    content: public abstract string Get(string array)
    content.vb: Public MustOverride Function Get(array As String) As String
    parameters:
    - id: array
      type: System.String
      description: The name to look up.
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    description: '*array* is null.'
- uid: System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)
  id: Add(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlNameTable
  href: System.Xml.XmlNameTable.yml
  name: Add(Char[], Int32, Int32)
  name.vb: Add(Char(), Int32, Int32)
  fullName: System.Xml.XmlNameTable.Add(System.Char[], System.Int32, System.Int32)
  fullName.vb: System.Xml.XmlNameTable.Add(System.Char(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.ReaderWriter/src/System/Xml/XmlNameTable.cs
    startLine: 36
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, atomizes the specified string and adds it to the XmlNameTable.
  syntax:
    content: public abstract string Add(char[] array, int offset, int length)
    content.vb: Public MustOverride Function Add(array As Char(), offset As Integer, length As Integer) As String
    parameters:
    - id: array
      type: System.Char[]
      description: The character array containing the name to add.
    - id: offset
      type: System.Int32
      description: Zero-based index into the array specifying the first character of the name.
    - id: length
      type: System.Int32
      description: The number of characters in the name.
    return:
      type: System.String
  exceptions:
  - type: System.IndexOutOfRangeException
    description: 0 > *offset*-or- *offset* >= *array*.Length -or- *length* > *array*.Length The above conditions do not cause an exception to be thrown if *length* =0.
  - type: System.ArgumentOutOfRangeException
    description: '*length* < 0.'
- uid: System.Xml.XmlNameTable.Add(System.String)
  id: Add(System.String)
  parent: System.Xml.XmlNameTable
  href: System.Xml.XmlNameTable.yml
  name: Add(String)
  fullName: System.Xml.XmlNameTable.Add(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.ReaderWriter/src/System/Xml/XmlNameTable.cs
    startLine: 44
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, atomizes the specified string and adds it to the XmlNameTable.
  syntax:
    content: public abstract string Add(string array)
    content.vb: Public MustOverride Function Add(array As String) As String
    parameters:
    - id: array
      type: System.String
      description: The name to add.
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    description: '*array* is null.'
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Char[]
  isExternal: true
  name: Char[]
  name.vb: Char()
  fullName: System.Char[]
  fullName.vb: System.Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
