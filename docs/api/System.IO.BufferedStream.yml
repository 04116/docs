items:
- uid: System.IO.BufferedStream
  id: BufferedStream
  parent: System.IO
  children:
  - System.IO.BufferedStream.#ctor(System.IO.Stream)
  - System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)
  - System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.BufferedStream.CanRead
  - System.IO.BufferedStream.CanSeek
  - System.IO.BufferedStream.CanWrite
  - System.IO.BufferedStream.Dispose(System.Boolean)
  - System.IO.BufferedStream.EndRead(System.IAsyncResult)
  - System.IO.BufferedStream.EndWrite(System.IAsyncResult)
  - System.IO.BufferedStream.Flush
  - System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.BufferedStream.Length
  - System.IO.BufferedStream.Position
  - System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.BufferedStream.ReadByte
  - System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.BufferedStream.SetLength(System.Int64)
  - System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.BufferedStream.WriteByte(System.Byte)
  href: System.IO.BufferedStream.yml
  name: BufferedStream
  fullName: System.IO.BufferedStream
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/IO/BufferedStream.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 57
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Adds a buffering layer to read and write operations on another stream. This class cannot be inherited.
  syntax:
    content: 'public sealed class BufferedStream : Stream, IDisposable'
    content.vb: Public NotInheritable Class BufferedStream Inherits Stream Implements IDisposable
  inheritance:
  - System.Object
  - System.IO.Stream
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.Stream.Null
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.WriteTimeout
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.Close
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.ObjectInvariant
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.IO.BufferedStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: BufferedStream(Stream)
  fullName: System.IO.BufferedStream.BufferedStream(System.IO.Stream)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 86
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the @'System.IO.BufferedStream' class with a default buffer size of 4096 bytes.
  syntax:
    content: public BufferedStream(Stream stream)
    content.vb: Public Sub New(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The current stream.
  exceptions:
  - type: System.ArgumentNullException
    description: '*stream* is null.'
- uid: System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)
  id: '#ctor(System.IO.Stream,System.Int32)'
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: BufferedStream(Stream, Int32)
  fullName: System.IO.BufferedStream.BufferedStream(System.IO.Stream, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 92
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the @'System.IO.BufferedStream' class with the specified buffer size.
  syntax:
    content: public BufferedStream(Stream stream, int bufferSize)
    content.vb: Public Sub New(stream As Stream, bufferSize As Integer)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The current stream.
    - id: bufferSize
      type: System.Int32
      description: The buffer size in bytes.
  exceptions:
  - type: System.ArgumentNullException
    description: '*stream* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*bufferSize* is negative.'
- uid: System.IO.BufferedStream.CanRead
  id: CanRead
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: CanRead
  fullName: System.IO.BufferedStream.CanRead
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 202
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Gets a value indicating whether the current stream supports reading.
  syntax:
    content: public override bool CanRead { get; }
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.IO.Stream.CanRead
- uid: System.IO.BufferedStream.CanWrite
  id: CanWrite
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: CanWrite
  fullName: System.IO.BufferedStream.CanWrite
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 208
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Gets a value indicating whether the current stream supports writing.
  syntax:
    content: public override bool CanWrite { get; }
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.IO.Stream.CanWrite
- uid: System.IO.BufferedStream.CanSeek
  id: CanSeek
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: CanSeek
  fullName: System.IO.BufferedStream.CanSeek
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 214
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Gets a value indicating whether the current stream supports seeking.
  syntax:
    content: public override bool CanSeek { get; }
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.IO.Stream.CanSeek
- uid: System.IO.BufferedStream.Length
  id: Length
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: Length
  fullName: System.IO.BufferedStream.Length
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 220
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Gets the stream length in bytes.
  syntax:
    content: public override long Length { get; }
    content.vb: Public Overrides ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
  overridden: System.IO.Stream.Length
  exceptions:
  - type: System.IO.IOException
    description: The underlying stream is null or closed.
  - type: System.NotSupportedException
    description: The stream does not support seeking.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.BufferedStream.Position
  id: Position
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: Position
  fullName: System.IO.BufferedStream.Position
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 232
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Gets the position within the current stream.
  syntax:
    content: public override long Position { get; set; }
    content.vb: Public Overrides Property Position As Long
    parameters: []
    return:
      type: System.Int64
  overridden: System.IO.Stream.Position
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The value passed to @'System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)' is negative.
  - type: System.IO.IOException
    description: An I/O error occurs, such as the stream being closed.
  - type: System.NotSupportedException
    description: The stream does not support seeking.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.BufferedStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: Dispose(Boolean)
  fullName: System.IO.BufferedStream.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 258
  assemblies:
  - mscorlib
  namespace: System.IO
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overridden: System.IO.Stream.Dispose(System.Boolean)
- uid: System.IO.BufferedStream.Flush
  id: Flush
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: Flush()
  fullName: System.IO.BufferedStream.Flush()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 279
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  overridden: System.IO.Stream.Flush
  exceptions:
  - type: System.ObjectDisposedException
    description: The stream has been disposed.
  - type: System.IO.IOException
    description: The data source or repository is not open.
- uid: System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: FlushAsync(CancellationToken)
  fullName: System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 319
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.
  syntax:
    content: public override Task FlushAsync(CancellationToken cancellationToken)
    content.vb: Public Overrides Function FlushAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
  overridden: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  exceptions:
  - type: System.ObjectDisposedException
    description: The stream has been disposed.
- uid: System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: Read(Byte[], Int32, Int32)
  name.vb: Read(Byte(), Int32, Int32)
  fullName: System.IO.BufferedStream.Read(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.BufferedStream.Read(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 484
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Copies bytes from the current buffered stream to an array.
  syntax:
    content: public override int Read(byte[] array, int offset, int count)
    content.vb: Public Overrides Function Read(array As Byte(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: array
      type: System.Byte[]
      description: The buffer to which bytes are to be copied.
    - id: offset
      type: System.Int32
      description: The byte offset in the buffer at which to begin reading bytes.
    - id: count
      type: System.Int32
      description: The number of bytes to be read.
    return:
      type: System.Int32
  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentException
    description: Length of *array* minus *offset* is less than *count*.
  - type: System.ArgumentNullException
    description: '*array* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* or *count* is negative.'
  - type: System.IO.IOException
    description: The stream is not open or is null.
  - type: System.NotSupportedException
    description: The stream does not support reading.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.BufferedStream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  fullName.vb: System.IO.BufferedStream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 549
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Begins an asynchronous read operation. (Consider using @'System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)' instead; see the Remarks section.)
  syntax:
    content: public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
    content.vb: Public Overrides Function BeginRead(buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to read the data into.
    - id: offset
      type: System.Int32
      description: The byte offset in *buffer* at which to begin writing data read from the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    - id: callback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the read is complete.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous read request from other requests.
    return:
      type: System.IAsyncResult
  overridden: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  exceptions:
  - type: System.ArgumentNullException
    description: '*buffer* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* or *count* is negative.'
  - type: System.IO.IOException
    description: Attempted an asynchronous read past the end of the stream.
  - type: System.ArgumentException
    description: The buffer length minus *offset* is less than *count*.
  - type: System.NotSupportedException
    description: The current stream does not support the read operation.
- uid: System.IO.BufferedStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: EndRead(IAsyncResult)
  fullName: System.IO.BufferedStream.EndRead(System.IAsyncResult)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 620
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Waits for the pending asynchronous read operation to complete. (Consider using @'System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)' instead; see the Remarks section.)
  syntax:
    content: public override int EndRead(IAsyncResult asyncResult)
    content.vb: Public Overrides Function EndRead(asyncResult As IAsyncResult) As Integer
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to wait for.
    return:
      type: System.Int32
  overridden: System.IO.Stream.EndRead(System.IAsyncResult)
  exceptions:
  - type: System.ArgumentNullException
    description: '*asyncResult* is null.'
  - type: System.ArgumentException
    description: This @'System.IAsyncResult' object was not created by calling @'System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)' on this class.
- uid: System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  fullName: System.IO.BufferedStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: System.IO.BufferedStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 648
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.
  syntax:
    content: public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write the data into.
    - id: offset
      type: System.Int32
      description: The byte offset in *buffer* at which to begin writing data from the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  overridden: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  exceptions:
  - type: System.ArgumentNullException
    description: '*buffer* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* or *count* is negative.'
  - type: System.ArgumentException
    description: The sum of *offset* and *count* is larger than the buffer length.
  - type: System.NotSupportedException
    description: The stream does not support reading.
  - type: System.ObjectDisposedException
    description: The stream has been disposed.
  - type: System.InvalidOperationException
    description: The stream is currently in use by a previous read operation.
- uid: System.IO.BufferedStream.ReadByte
  id: ReadByte
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: ReadByte()
  fullName: System.IO.BufferedStream.ReadByte()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 785
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Reads a byte from the underlying stream and returns the byte cast to an int, or returns -1 if reading from the end of the stream.
  syntax:
    content: public override int ReadByte()
    content.vb: Public Overrides Function ReadByte As Integer
    return:
      type: System.Int32
  overridden: System.IO.Stream.ReadByte
  exceptions:
  - type: System.IO.IOException
    description: An I/O error occurs, such as the stream being closed.
  - type: System.NotSupportedException
    description: The stream does not support reading.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: Write(Byte[], Int32, Int32)
  name.vb: Write(Byte(), Int32, Int32)
  fullName: System.IO.BufferedStream.Write(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.BufferedStream.Write(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 837
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Copies bytes to the buffered stream and advances the current position within the buffered stream by the number of bytes written.
  syntax:
    content: public override void Write(byte[] array, int offset, int count)
    content.vb: Public Overrides Sub Write(array As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: array
      type: System.Byte[]
      description: The byte array from which to copy *count* bytes to the current buffered stream.
    - id: offset
      type: System.Int32
      description: The offset in the buffer at which to begin copying bytes to the current buffered stream.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the current buffered stream.
  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentException
    description: Length of *array* minus *offset* is less than *count*.
  - type: System.ArgumentNullException
    description: '*array* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* or *count* is negative.'
  - type: System.IO.IOException
    description: The stream is closed or null.
  - type: System.NotSupportedException
    description: The stream does not support writing.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.BufferedStream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  fullName.vb: System.IO.BufferedStream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 976
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Begins an asynchronous write operation. (Consider using @'System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)' instead; see the Remarks section.)
  syntax:
    content: public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
    content.vb: Public Overrides Function BeginWrite(buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer containing data to write to the current stream.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in *buffer* at which to begin copying bytes to the current stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
    - id: callback
      type: System.AsyncCallback
      description: The method to be called when the asynchronous write operation is completed.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous write request from other requests.
    return:
      type: System.IAsyncResult
  overridden: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  exceptions:
  - type: System.ArgumentException
    description: '*buffer* length minus *offset* is less than *count*.'
  - type: System.ArgumentNullException
    description: '*buffer* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* or *count* is negative.'
  - type: System.NotSupportedException
    description: The stream does not support writing.
- uid: System.IO.BufferedStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: EndWrite(IAsyncResult)
  fullName: System.IO.BufferedStream.EndWrite(System.IAsyncResult)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 1042
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Ends an asynchronous write operation and blocks until the I/O operation is complete. (Consider using @'System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)' instead; see the Remarks section.)
  syntax:
    content: public override void EndWrite(IAsyncResult asyncResult)
    content.vb: Public Overrides Sub EndWrite(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The pending asynchronous request.
  overridden: System.IO.Stream.EndWrite(System.IAsyncResult)
  exceptions:
  - type: System.ArgumentNullException
    description: '*asyncResult* is null.'
  - type: System.ArgumentException
    description: This @'System.IAsyncResult' object was not created by calling @'System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)' on this class.
- uid: System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  fullName: System.IO.BufferedStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: System.IO.BufferedStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 1058
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.
  syntax:
    content: public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)
    content.vb: Public Overrides Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write data from.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in *buffer* from which to begin copying bytes to the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
  overridden: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  exceptions:
  - type: System.ArgumentNullException
    description: '*buffer* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*offset* or *count* is negative.'
  - type: System.ArgumentException
    description: The sum of *offset* and *count* is larger than the buffer length.
  - type: System.NotSupportedException
    description: The stream does not support writing.
  - type: System.ObjectDisposedException
    description: The stream has been disposed.
  - type: System.InvalidOperationException
    description: The stream is currently in use by a previous write operation.
- uid: System.IO.BufferedStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: WriteByte(Byte)
  fullName: System.IO.BufferedStream.WriteByte(System.Byte)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 1232
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Writes a byte to the current position in the buffered stream.
  syntax:
    content: public override void WriteByte(byte value)
    content.vb: Public Overrides Sub WriteByte(value As Byte)
    parameters:
    - id: value
      type: System.Byte
      description: A byte to write to the stream.
  overridden: System.IO.Stream.WriteByte(System.Byte)
  exceptions:
  - type: System.NotSupportedException
    description: The stream does not support writing.
  - type: System.ArgumentNullException
    description: '*value* is null.'
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: Seek(Int64, SeekOrigin)
  fullName: System.IO.BufferedStream.Seek(System.Int64, System.IO.SeekOrigin)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 1253
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Sets the position within the current buffered stream.
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
    parameters:
    - id: offset
      type: System.Int64
      description: A byte offset relative to *origin*.
    - id: origin
      type: System.IO.SeekOrigin
      description: A value of type @'System.IO.SeekOrigin' indicating the reference point from which to obtain the new position.
    return:
      type: System.Int64
  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  exceptions:
  - type: System.IO.IOException
    description: The stream is not open or is null.
  - type: System.NotSupportedException
    description: The stream does not support seeking.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: System.IO.BufferedStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.BufferedStream
  href: System.IO.BufferedStream.yml
  name: SetLength(Int64)
  fullName: System.IO.BufferedStream.SetLength(System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/IO/BufferedStream.cs
    startLine: 1303
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Sets the length of the buffered stream.
  syntax:
    content: public override void SetLength(long value)
    content.vb: Public Overrides Sub SetLength(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: An integer indicating the desired length of the current buffered stream in bytes.
  overridden: System.IO.Stream.SetLength(System.Int64)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*value* is negative.'
  - type: System.IO.IOException
    description: The stream is not open or is null.
  - type: System.NotSupportedException
    description: The stream does not support both writing and seeking.
  - type: System.ObjectDisposedException
    description: Methods were called after the stream was closed.
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: true
  fullName: System.IO.Stream.Null
- uid: System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: true
  name: CanTimeout
  fullName: System.IO.Stream.CanTimeout
- uid: System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: true
  name: ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
- uid: System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: true
  name: WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32, CancellationToken)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream, Int32)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: true
  name: Close()
  fullName: System.IO.Stream.Close()
  spec.csharp:
  - uid: System.IO.Stream.Close
    name: Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Close
    name: Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: true
  name: Dispose()
  fullName: System.IO.Stream.Dispose()
  spec.csharp:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: true
  name: FlushAsync()
  fullName: System.IO.Stream.FlushAsync()
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: true
  name: CreateWaitHandle()
  fullName: System.IO.Stream.CreateWaitHandle()
  spec.csharp:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32)
  name.vb: ReadAsync(Byte(), Int32, Int32)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32)
  name.vb: WriteAsync(Byte(), Int32, Int32)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: Synchronized(Stream)
  fullName: System.IO.Stream.Synchronized(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: true
  name: ObjectInvariant()
  fullName: System.IO.Stream.ObjectInvariant()
  spec.csharp:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.IO.Stream.CanRead
  parent: System.IO.Stream
  isExternal: true
  name: CanRead
  fullName: System.IO.Stream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.IO.Stream.CanWrite
  parent: System.IO.Stream
  isExternal: true
  name: CanWrite
  fullName: System.IO.Stream.CanWrite
- uid: System.IO.Stream.CanSeek
  parent: System.IO.Stream
  isExternal: true
  name: CanSeek
  fullName: System.IO.Stream.CanSeek
- uid: System.IO.Stream.Length
  parent: System.IO.Stream
  isExternal: true
  name: Length
  fullName: System.IO.Stream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.IO.Stream.Position
  parent: System.IO.Stream
  isExternal: true
  name: Position
  fullName: System.IO.Stream.Position
- uid: System.IO.Stream.Dispose(System.Boolean)
  parent: System.IO.Stream
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.IO.Stream.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.Flush
  parent: System.IO.Stream
  isExternal: true
  name: Flush()
  fullName: System.IO.Stream.Flush()
  spec.csharp:
  - uid: System.IO.Stream.Flush
    name: Flush
    fullName: System.IO.Stream.Flush
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Flush
    name: Flush
    fullName: System.IO.Stream.Flush
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: FlushAsync(CancellationToken)
  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
  type: Namespace
- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  name.vb: Read(Byte(), Int32, Int32)
  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.Stream.Read
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.Stream.Read
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  fullName.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.AsyncCallback
  isExternal: false
  href: System.AsyncCallback.yml
  name: AsyncCallback
  fullName: System.AsyncCallback
  type: Delegate
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  href: System.IAsyncResult.yml
  name: IAsyncResult
  fullName: System.IAsyncResult
  type: Interface
- uid: System.IO.Stream.EndRead(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndRead(IAsyncResult)
  fullName: System.IO.Stream.EndRead(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  name.vb: Task(Of Int32)
  fullName: System.Threading.Tasks.Task<System.Int32>
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  name.vb: Task(Of TResult)
  fullName: System.Threading.Tasks.Task<TResult>
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.IO.Stream.ReadByte
  parent: System.IO.Stream
  isExternal: true
  name: ReadByte()
  fullName: System.IO.Stream.ReadByte()
  spec.csharp:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    fullName: System.IO.Stream.ReadByte
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    fullName: System.IO.Stream.ReadByte
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  name.vb: Write(Byte(), Int32, Int32)
  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.Stream.Write
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.Stream.Write
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  fullName.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.EndWrite(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndWrite(IAsyncResult)
  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.WriteByte(System.Byte)
  parent: System.IO.Stream
  isExternal: true
  name: WriteByte(Byte)
  fullName: System.IO.Stream.WriteByte(System.Byte)
  spec.csharp:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.Stream.WriteByte
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.Stream.WriteByte
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  fullName: System.Byte
- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Stream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.Stream.Seek
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.Stream.Seek
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Stream.SetLength(System.Int64)
  parent: System.IO.Stream
  isExternal: true
  name: SetLength(Int64)
  fullName: System.IO.Stream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.Stream.SetLength
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.Stream.SetLength
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
