items:
- uid: System.Resources.ResourceReader
  id: ResourceReader
  parent: System.Resources
  children:
  - System.Resources.ResourceReader.#ctor(System.IO.Stream)
  - System.Resources.ResourceReader.#ctor(System.String)
  - System.Resources.ResourceReader.Close
  - System.Resources.ResourceReader.Dispose
  - System.Resources.ResourceReader.GetEnumerator
  - System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)
  - System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator
  href: System.Resources.ResourceReader.yml
  name: ResourceReader
  fullName: System.Resources.ResourceReader
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Resources/ResourceReader.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Resources/ResourceReader.cs
    startLine: 73
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.Security Note: Calling methods in this class with untrusted data is a security risk. Call the methods in the class only with trusted data. For more information, see Untrusted Data Security Risks."
  syntax:
    content: 'public sealed class ResourceReader : IResourceReader, IEnumerable, IDisposable'
    content.vb: Public NotInheritable Class ResourceReader Implements IResourceReader, IEnumerable, IDisposable
  inheritance:
  - System.Object
  implements:
  - System.Resources.IResourceReader
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Resources.ResourceReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResourceReader
  href: System.Resources.ResourceReader.yml
  name: ResourceReader(String)
  fullName: System.Resources.ResourceReader.ResourceReader(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Resources/ResourceReader.cs
    startLine: 154
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: Initializes a new instance of the @'System.Resources.ResourceReader' class for the specified named resource file.
  syntax:
    content: public ResourceReader(string fileName)
    content.vb: Public Sub New(fileName As String)
    parameters:
    - id: fileName
      type: System.String
      description: The path and name of the resource file to read. *filename* is not case-sensitive.
  exceptions:
  - type: System.ArgumentNullException
    description: The *fileName* parameter is null.
  - type: System.IO.FileNotFoundException
    description: The file cannot be found.
  - type: System.IO.IOException
    description: An I/O error has occurred.
  - type: System.BadImageFormatException
    description: The resource file has an invalid format. For example, the length of the file may be zero.
- uid: System.Resources.ResourceReader.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResourceReader
  href: System.Resources.ResourceReader.yml
  name: ResourceReader(Stream)
  fullName: System.Resources.ResourceReader.ResourceReader(System.IO.Stream)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Resources/ResourceReader.cs
    startLine: 173
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: Initializes a new instance of the @'System.Resources.ResourceReader' class for the specified stream.
  syntax:
    content: public ResourceReader(Stream stream)
    content.vb: Public Sub New(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The input stream for reading resources.
  exceptions:
  - type: System.ArgumentException
    description: The *stream* parameter is not readable.
  - type: System.ArgumentNullException
    description: The *stream* parameter is null.
  - type: System.IO.IOException
    description: An I/O error has occurred while accessing *stream*.
- uid: System.Resources.ResourceReader.Close
  id: Close
  parent: System.Resources.ResourceReader
  href: System.Resources.ResourceReader.yml
  name: Close()
  fullName: System.Resources.ResourceReader.Close()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Resources/ResourceReader.cs
    startLine: 212
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: Releases all operating system resources associated with this @'System.Resources.ResourceReader' object.
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
- uid: System.Resources.ResourceReader.Dispose
  id: Dispose
  parent: System.Resources.ResourceReader
  href: System.Resources.ResourceReader.yml
  name: Dispose()
  fullName: System.Resources.ResourceReader.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Resources/ResourceReader.cs
    startLine: 217
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: Releases all resources used by the current instance of the @'System.Resources.ResourceReader' class.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: System.Resources.ResourceReader
  href: System.Resources.ResourceReader.yml
  name: IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResourceReader.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Resources/ResourceReader.cs
    startLine: 294
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: Returns an enumerator for this @'System.Resources.ResourceReader' object.
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  exceptions:
  - type: System.InvalidOperationException
    description: The reader has already been closed and cannot be accessed.
- uid: System.Resources.ResourceReader.GetEnumerator
  id: GetEnumerator
  parent: System.Resources.ResourceReader
  href: System.Resources.ResourceReader.yml
  name: GetEnumerator()
  fullName: System.Resources.ResourceReader.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Resources/ResourceReader.cs
    startLine: 299
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: Returns an enumerator for this @'System.Resources.ResourceReader' object.
  syntax:
    content: public IDictionaryEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As IDictionaryEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
  exceptions:
  - type: System.InvalidOperationException
    description: The reader has been closed or disposed, and cannot be accessed.
- uid: System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)
  id: GetResourceData(System.String,System.String@,System.Byte[]@)
  parent: System.Resources.ResourceReader
  href: System.Resources.ResourceReader.yml
  name: GetResourceData(String, out String, out Byte[])
  name.vb: GetResourceData(String, ByRef String, ByRef Byte())
  fullName: System.Resources.ResourceReader.GetResourceData(System.String, out System.String, out System.Byte[])
  fullName.vb: System.Resources.ResourceReader.GetResourceData(System.String, ByRef System.String, ByRef System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Resources/ResourceReader.cs
    startLine: 1162
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: Retrieves the type name and data of a named resource from an open resource file or stream.
  syntax:
    content: public void GetResourceData(string resourceName, out string resourceType, out byte[] resourceData)
    content.vb: Public Sub GetResourceData(resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())
    parameters:
    - id: resourceName
      type: System.String
      description: The name of a resource.
    - id: resourceType
      type: System.String
      description: When this method returns, contains a string that represents the type name of the retrieved resource (see the Remarks section for details). This parameter is passed uninitialized.
    - id: resourceData
      type: System.Byte[]
      description: When this method returns, contains a byte array that is the binary representation of the retrieved type. This parameter is passed uninitialized.
  exceptions:
  - type: System.ArgumentNullException
    description: '*resourceName* is null.'
  - type: System.ArgumentException
    description: '*resourceName* does not exist.'
  - type: System.BadImageFormatException
    description: '*resourceName* has an invalid type.'
  - type: System.FormatException
    description: The retrieved resource data is corrupt.
  - type: System.InvalidOperationException
    description: The current @'System.Resources.ResourceReader' object is not initialized, probably because it is closed.
references:
- uid: System.Resources
  isExternal: false
  name: System.Resources
  fullName: System.Resources
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
