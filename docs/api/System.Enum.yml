items:
- uid: System.Enum
  id: Enum
  parent: System
  children:
  - System.Enum.CompareTo(System.Object)
  - System.Enum.Equals(System.Object)
  - System.Enum.Format(System.Type,System.Object,System.String)
  - System.Enum.GetHashCode
  - System.Enum.GetName(System.Type,System.Object)
  - System.Enum.GetNames(System.Type)
  - System.Enum.GetTypeCode
  - System.Enum.GetUnderlyingType(System.Type)
  - System.Enum.GetValues(System.Type)
  - System.Enum.HasFlag(System.Enum)
  - System.Enum.IsDefined(System.Type,System.Object)
  - System.Enum.Parse(System.Type,System.String)
  - System.Enum.Parse(System.Type,System.String,System.Boolean)
  - System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToByte(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToChar(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.Enum.ToObject(System.Type,System.Byte)
  - System.Enum.ToObject(System.Type,System.Int16)
  - System.Enum.ToObject(System.Type,System.Int32)
  - System.Enum.ToObject(System.Type,System.Int64)
  - System.Enum.ToObject(System.Type,System.Object)
  - System.Enum.ToObject(System.Type,System.SByte)
  - System.Enum.ToObject(System.Type,System.UInt16)
  - System.Enum.ToObject(System.Type,System.UInt32)
  - System.Enum.ToObject(System.Type,System.UInt64)
  - System.Enum.ToString
  - System.Enum.ToString(System.IFormatProvider)
  - System.Enum.ToString(System.String)
  - System.Enum.ToString(System.String,System.IFormatProvider)
  - System.Enum.TryParse``1(System.String,``0@)
  - System.Enum.TryParse``1(System.String,System.Boolean,``0@)
  href: System.Enum.yml
  name: Enum
  fullName: System.Enum
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Enum.cs
    startLine: 14
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides the base class for enumerations.
  syntax:
    content: 'public abstract class Enum : ValueType, IComparable, IFormattable, IConvertible'
    content.vb: Public MustInherit Class Enum Inherits ValueType Implements IComparable, IFormattable, IConvertible
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IComparable
  - System.IFormattable
  - System.IConvertible
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Enum.TryParse``1(System.String,``0@)
  id: TryParse``1(System.String,``0@)
  parent: System.Enum
  href: System.Enum.yml
  name: TryParse<TEnum>(String, out TEnum)
  name.vb: TryParse(Of TEnum)(String, ByRef TEnum)
  fullName: System.Enum.TryParse<TEnum>(System.String, out TEnum)
  fullName.vb: System.Enum.TryParse(Of TEnum)(System.String, ByRef TEnum)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 326
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. The return value indicates whether the conversion succeeded.
  syntax:
    content: 'public static bool TryParse<TEnum>(string value, out TEnum result)where TEnum : struct'
    content.vb: Public Shared Function TryParse(Of TEnum As Structure)(value As String, ByRef result As TEnum) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string representation of the enumeration name or underlying value to convert.
    - id: result
      type: '{TEnum}'
      description: When this method returns, *result* contains an object of type *TEnum* whose value is represented by *value* if the parse operation succeeds. If the parse operation fails, *result* contains the default value of the underlying type of *TEnum*. Note that this value need not be a member of the *TEnum* enumeration. This parameter is passed uninitialized.
    typeParameters:
    - id: TEnum
    return:
      type: System.Boolean
  exceptions:
  - type: System.ArgumentException
    description: '*TEnum* is not an enumeration type.'
- uid: System.Enum.TryParse``1(System.String,System.Boolean,``0@)
  id: TryParse``1(System.String,System.Boolean,``0@)
  parent: System.Enum
  href: System.Enum.yml
  name: TryParse<TEnum>(String, Boolean, out TEnum)
  name.vb: TryParse(Of TEnum)(String, Boolean, ByRef TEnum)
  fullName: System.Enum.TryParse<TEnum>(System.String, System.Boolean, out TEnum)
  fullName.vb: System.Enum.TryParse(Of TEnum)(System.String, System.Boolean, ByRef TEnum)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 331
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-sensitive. The return value indicates whether the conversion succeeded.
  syntax:
    content: 'public static bool TryParse<TEnum>(string value, bool ignoreCase, out TEnum result)where TEnum : struct'
    content.vb: Public Shared Function TryParse(Of TEnum As Structure)(value As String, ignoreCase As Boolean, ByRef result As TEnum) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string representation of the enumeration name or underlying value to convert.
    - id: ignoreCase
      type: System.Boolean
      description: true to ignore case; false to consider case.
    - id: result
      type: '{TEnum}'
      description: When this method returns, *result* contains an object of type *TEnum* whose value is represented by *value* if the parse operation succeeds. If the parse operation fails, *result* contains the default value of the underlying type of *TEnum*. Note that this value need not be a member of the *TEnum* enumeration. This parameter is passed uninitialized.
    typeParameters:
    - id: TEnum
    return:
      type: System.Boolean
  exceptions:
  - type: System.ArgumentException
    description: '*TEnum* is not an enumeration type.'
- uid: System.Enum.Parse(System.Type,System.String)
  id: Parse(System.Type,System.String)
  parent: System.Enum
  href: System.Enum.yml
  name: Parse(Type, String)
  fullName: System.Enum.Parse(System.Type, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 343
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.
  syntax:
    content: public static object Parse(Type enumType, string value)
    content.vb: Public Shared Function Parse(enumType As Type, value As String) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: An enumeration type.
    - id: value
      type: System.String
      description: A string containing the name or value to convert.
    return:
      type: System.Object
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* or *value* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.-or- *value* is either an empty string or only contains white space.-or- *value* is a name, but not one of the named constants defined for the enumeration.'
  - type: System.OverflowException
    description: '*value* is outside the range of the underlying type of *enumType*.'
- uid: System.Enum.Parse(System.Type,System.String,System.Boolean)
  id: Parse(System.Type,System.String,System.Boolean)
  parent: System.Enum
  href: System.Enum.yml
  name: Parse(Type, String, Boolean)
  fullName: System.Enum.Parse(System.Type, System.String, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 349
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-insensitive.
  syntax:
    content: public static object Parse(Type enumType, string value, bool ignoreCase)
    content.vb: Public Shared Function Parse(enumType As Type, value As String, ignoreCase As Boolean) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: An enumeration type.
    - id: value
      type: System.String
      description: A string containing the name or value to convert.
    - id: ignoreCase
      type: System.Boolean
      description: true to ignore case; false to regard case.
    return:
      type: System.Object
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* or *value* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.-or- *value* is either an empty string ("") or only contains white space.-or- *value* is a name, but not one of the named constants defined for the enumeration.'
  - type: System.OverflowException
    description: '*value* is outside the range of the underlying type of *enumType*.'
- uid: System.Enum.GetUnderlyingType(System.Type)
  id: GetUnderlyingType(System.Type)
  parent: System.Enum
  href: System.Enum.yml
  name: GetUnderlyingType(Type)
  fullName: System.Enum.GetUnderlyingType(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 476
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the underlying type of the specified enumeration.
  syntax:
    content: public static Type GetUnderlyingType(Type enumType)
    content.vb: Public Shared Function GetUnderlyingType(enumType As Type) As Type
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration whose underlying type will be retrieved.
    return:
      type: System.Type
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.'
- uid: System.Enum.GetValues(System.Type)
  id: GetValues(System.Type)
  parent: System.Enum
  href: System.Enum.yml
  name: GetValues(Type)
  fullName: System.Enum.GetValues(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 487
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves an array of the values of the constants in a specified enumeration.
  syntax:
    content: public static Array GetValues(Type enumType)
    content.vb: Public Shared Function GetValues(enumType As Type) As Array
    parameters:
    - id: enumType
      type: System.Type
      description: An enumeration type.
    return:
      type: System.Array
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.'
  - type: System.InvalidOperationException
    description: The method is invoked by reflection in a reflection-only context, -or-*enumType* is a type from an assembly loaded in a reflection-only context.
- uid: System.Enum.GetName(System.Type,System.Object)
  id: GetName(System.Type,System.Object)
  parent: System.Enum
  href: System.Enum.yml
  name: GetName(Type, Object)
  fullName: System.Enum.GetName(System.Type, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 504
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves the name of the constant in the specified enumeration that has the specified value.
  syntax:
    content: public static string GetName(Type enumType, object value)
    content.vb: Public Shared Function GetName(enumType As Type, value As Object) As String
    parameters:
    - id: enumType
      type: System.Type
      description: An enumeration type.
    - id: value
      type: System.Object
      description: The value of a particular enumerated constant in terms of its underlying type.
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* or *value* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.-or- *value* is neither of type *enumType* nor does it have the same underlying type as *enumType*.'
- uid: System.Enum.GetNames(System.Type)
  id: GetNames(System.Type)
  parent: System.Enum
  href: System.Enum.yml
  name: GetNames(Type)
  fullName: System.Enum.GetNames(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 514
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves an array of the names of the constants in a specified enumeration.
  syntax:
    content: public static string[] GetNames(Type enumType)
    content.vb: Public Shared Function GetNames(enumType As Type) As String()
    parameters:
    - id: enumType
      type: System.Type
      description: An enumeration type.
    return:
      type: System.String[]
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* is null.'
  - type: System.ArgumentException
    description: '*enumType* parameter is not an @''System.Enum''.'
- uid: System.Enum.ToObject(System.Type,System.Object)
  id: ToObject(System.Type,System.Object)
  parent: System.Enum
  href: System.Enum.yml
  name: ToObject(Type, Object)
  fullName: System.Enum.ToObject(System.Type, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 531
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified object with an integer value to an enumeration member.
  syntax:
    content: public static object ToObject(Type enumType, object value)
    content.vb: Public Shared Function ToObject(enumType As Type, value As Object) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration type to return.
    - id: value
      type: System.Object
      description: The value convert to an enumeration member.
    return:
      type: System.Object
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* or *value* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.-or- *value* is not type @''System.SByte'', @''System.Int16'', @''System.Int32'', @''System.Int64'', @''System.Byte'', @''System.UInt16'', @''System.UInt32'', or @''System.UInt64''.'
- uid: System.Enum.IsDefined(System.Type,System.Object)
  id: IsDefined(System.Type,System.Object)
  parent: System.Enum
  href: System.Enum.yml
  name: IsDefined(Type, Object)
  fullName: System.Enum.IsDefined(System.Type, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 587
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns an indication whether a constant with a specified value exists in a specified enumeration.
  syntax:
    content: public static bool IsDefined(Type enumType, object value)
    content.vb: Public Shared Function IsDefined(enumType As Type, value As Object) As Boolean
    parameters:
    - id: enumType
      type: System.Type
      description: An enumeration type.
    - id: value
      type: System.Object
      description: The value or name of a constant in *enumType*.
    return:
      type: System.Boolean
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* or *value* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an Enum.-or- The type of *value* is an enumeration, but it is not an enumeration of type *enumType*.-or- The type of *value* is not an underlying type of *enumType*.'
  - type: System.InvalidOperationException
    description: '*value* is not type @''System.SByte'', @''System.Int16'', @''System.Int32'', @''System.Int64'', @''System.Byte'', @''System.UInt16'', @''System.UInt32'', or @''System.UInt64'', or @''System.String''.'
- uid: System.Enum.Format(System.Type,System.Object,System.String)
  id: Format(System.Type,System.Object,System.String)
  parent: System.Enum
  href: System.Enum.yml
  name: Format(Type, Object, String)
  fullName: System.Enum.Format(System.Type, System.Object, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 598
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.
  syntax:
    content: public static string Format(Type enumType, object value, string format)
    content.vb: Public Shared Function Format(enumType As Type, value As Object, format As String) As String
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration type of the value to convert.
    - id: value
      type: System.Object
      description: The value to convert.
    - id: format
      type: System.String
      description: The output format to use.
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    description: The *enumType*, *value*, or *format* parameter is null.
  - type: System.ArgumentException
    description: The *enumType* parameter is not an @'System.Enum' type.-or- The *value* is from an enumeration that differs in type from *enumType*.-or- The type of *value* is not an underlying type of *enumType*.
  - type: System.FormatException
    description: The *format* parameter contains an invalid value.
  - type: System.InvalidOperationException
    description: '*format* equals "X", but the enumeration type is unknown.'
- uid: System.Enum.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Enum
  href: System.Enum.yml
  name: Equals(Object)
  fullName: System.Enum.Equals(System.Object)
  type: Method
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a value indicating whether this instance is equal to a specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance, or null.
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
- uid: System.Enum.GetHashCode
  id: GetHashCode
  parent: System.Enum
  href: System.Enum.yml
  name: GetHashCode()
  fullName: System.Enum.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 740
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the hash code for the value of this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
- uid: System.Enum.ToString
  id: ToString
  parent: System.Enum
  href: System.Enum.yml
  name: ToString()
  fullName: System.Enum.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 785
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of this instance to its equivalent string representation.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
- uid: System.Enum.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: ToString(String, IFormatProvider)
  fullName: System.Enum.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 797
  assemblies:
  - mscorlib
  namespace: System
  summary: This method overload is obsolete; use @'System.Enum.ToString(System.String)'.
  syntax:
    content: public string ToString(string format, IFormatProvider provider)
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: A format specification.
    - id: provider
      type: System.IFormatProvider
      description: (Obsolete.)
    return:
      type: System.String
  exceptions:
  - type: System.FormatException
    description: '*format* does not contain a valid format specification.'
  - type: System.InvalidOperationException
    description: '*format* equals "X", but the enumeration type is unknown.'
- uid: System.Enum.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Enum
  href: System.Enum.yml
  name: CompareTo(Object)
  fullName: System.Enum.CompareTo(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 805
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares this instance to a specified object and returns an indication of their relative values.
  syntax:
    content: public int CompareTo(object target)
    content.vb: Public Function CompareTo(target As Object) As Integer
    parameters:
    - id: target
      type: System.Object
      description: An object to compare, or null.
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentException
    description: '*target* and this instance are not the same type.'
  - type: System.InvalidOperationException
    description: This instance is not type @'System.SByte', @'System.Int16', @'System.Int32', @'System.Int64', @'System.Byte', @'System.UInt16', @'System.UInt32', or @'System.UInt64'.
- uid: System.Enum.ToString(System.String)
  id: ToString(System.String)
  parent: System.Enum
  href: System.Enum.yml
  name: ToString(String)
  fullName: System.Enum.ToString(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 841
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of this instance to its equivalent string representation using the specified format.
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: A format string.
    return:
      type: System.String
  exceptions:
  - type: System.FormatException
    description: '*format* contains an invalid specification.'
  - type: System.InvalidOperationException
    description: '*format* equals "X", but the enumeration type is unknown.'
- uid: System.Enum.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: ToString(IFormatProvider)
  fullName: System.Enum.ToString(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 860
  assemblies:
  - mscorlib
  namespace: System
  summary: This method overload is obsolete; use @'System.Enum.ToString'.
  syntax:
    content: public string ToString(IFormatProvider provider)
    content.vb: Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: (obsolete)
    return:
      type: System.String
- uid: System.Enum.HasFlag(System.Enum)
  id: HasFlag(System.Enum)
  parent: System.Enum
  href: System.Enum.yml
  name: HasFlag(Enum)
  fullName: System.Enum.HasFlag(System.Enum)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 866
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether one or more bit fields are set in the current instance.
  syntax:
    content: public bool HasFlag(Enum flag)
    content.vb: Public Function HasFlag(flag As Enum) As Boolean
    parameters:
    - id: flag
      type: System.Enum
      description: An enumeration value.
    return:
      type: System.Boolean
  exceptions:
  - type: System.ArgumentException
    description: '*flag* is a different type than the current instance.'
- uid: System.Enum.GetTypeCode
  id: GetTypeCode
  parent: System.Enum
  href: System.Enum.yml
  name: GetTypeCode()
  fullName: System.Enum.GetTypeCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 882
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the type code of the underlying type of this enumeration member.
  syntax:
    content: public TypeCode GetTypeCode()
    content.vb: Public Function GetTypeCode As TypeCode
    return:
      type: System.TypeCode
  exceptions:
  - type: System.InvalidOperationException
    description: The enumeration type is unknown.
- uid: System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToBoolean(IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 942
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a Boolean value based on the underlying type.
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Boolean
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.Enum.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToChar(IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 948
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a Unicode character based on the underlying type.
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Char
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToSByte(IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 954
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to an 8-bit signed integer based on the underlying type.
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.SByte
- uid: System.Enum.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToByte(IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 960
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to an 8-bit unsigned integer based on the underlying type.
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Byte
- uid: System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToInt16(IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 966
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a 16-bit signed integer based on the underlying type.
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Int16
- uid: System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToUInt16(IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 972
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a 16-bit unsigned integer based on the underlying type.
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.UInt16
- uid: System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToInt32(IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 978
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a 32-bit signed integer based on the underlying type.
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Int32
- uid: System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToUInt32(IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 984
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a 32-bit unsigned integer based on the underlying type.
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.UInt32
- uid: System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToInt64(IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 990
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a 64-bit signed integer based on the underlying type.
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Int64
- uid: System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToUInt64(IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 996
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a 64-bit unsigned integer based on the underlying type.
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.UInt64
- uid: System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToSingle(IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1002
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a single-precision floating-point number based on the underlying type.
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Single
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToDouble(IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1008
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a double-precision floating point number based on the underlying type.
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Double
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToDecimal(IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1014
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a @'System.Decimal' based on the underlying type.
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Decimal
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToDateTime(IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1020
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a @'System.DateTime' based on the underlying type.
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.DateTime
  exceptions:
  - type: System.InvalidCastException
    description: In all cases.
- uid: System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  parent: System.Enum
  href: System.Enum.yml
  name: IConvertible.ToType(Type, IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1026
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current value to a specified type based on the underlying type.
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
      description: The type to convert to.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Object
- uid: System.Enum.ToObject(System.Type,System.SByte)
  id: ToObject(System.Type,System.SByte)
  parent: System.Enum
  href: System.Enum.yml
  name: ToObject(Type, SByte)
  fullName: System.Enum.ToObject(System.Type, System.SByte)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1033
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified 8-bit signed integer value to an enumeration member.
  syntax:
    content: public static object ToObject(Type enumType, sbyte value)
    content.vb: Public Shared Function ToObject(enumType As Type, value As SByte) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration type to return.
    - id: value
      type: System.SByte
      description: The value to convert to an enumeration member.
    return:
      type: System.Object
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.'
- uid: System.Enum.ToObject(System.Type,System.Int16)
  id: ToObject(System.Type,System.Int16)
  parent: System.Enum
  href: System.Enum.yml
  name: ToObject(Type, Int16)
  fullName: System.Enum.ToObject(System.Type, System.Int16)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1049
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified 16-bit signed integer to an enumeration member.
  syntax:
    content: public static object ToObject(Type enumType, short value)
    content.vb: Public Shared Function ToObject(enumType As Type, value As Short) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration type to return.
    - id: value
      type: System.Int16
      description: The value to convert to an enumeration member.
    return:
      type: System.Object
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.'
- uid: System.Enum.ToObject(System.Type,System.Int32)
  id: ToObject(System.Type,System.Int32)
  parent: System.Enum
  href: System.Enum.yml
  name: ToObject(Type, Int32)
  fullName: System.Enum.ToObject(System.Type, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1064
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified 32-bit signed integer to an enumeration member.
  syntax:
    content: public static object ToObject(Type enumType, int value)
    content.vb: Public Shared Function ToObject(enumType As Type, value As Integer) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration type to return.
    - id: value
      type: System.Int32
      description: The value to convert to an enumeration member.
    return:
      type: System.Object
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.'
- uid: System.Enum.ToObject(System.Type,System.Byte)
  id: ToObject(System.Type,System.Byte)
  parent: System.Enum
  href: System.Enum.yml
  name: ToObject(Type, Byte)
  fullName: System.Enum.ToObject(System.Type, System.Byte)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1079
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified 8-bit unsigned integer to an enumeration member.
  syntax:
    content: public static object ToObject(Type enumType, byte value)
    content.vb: Public Shared Function ToObject(enumType As Type, value As Byte) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration type to return.
    - id: value
      type: System.Byte
      description: The value to convert to an enumeration member.
    return:
      type: System.Object
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.'
- uid: System.Enum.ToObject(System.Type,System.UInt16)
  id: ToObject(System.Type,System.UInt16)
  parent: System.Enum
  href: System.Enum.yml
  name: ToObject(Type, UInt16)
  fullName: System.Enum.ToObject(System.Type, System.UInt16)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1094
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified 16-bit unsigned integer value to an enumeration member.
  syntax:
    content: public static object ToObject(Type enumType, ushort value)
    content.vb: Public Shared Function ToObject(enumType As Type, value As UShort) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration type to return.
    - id: value
      type: System.UInt16
      description: The value to convert to an enumeration member.
    return:
      type: System.Object
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.'
- uid: System.Enum.ToObject(System.Type,System.UInt32)
  id: ToObject(System.Type,System.UInt32)
  parent: System.Enum
  href: System.Enum.yml
  name: ToObject(Type, UInt32)
  fullName: System.Enum.ToObject(System.Type, System.UInt32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1110
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified 32-bit unsigned integer value to an enumeration member.
  syntax:
    content: public static object ToObject(Type enumType, uint value)
    content.vb: Public Shared Function ToObject(enumType As Type, value As UInteger) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration type to return.
    - id: value
      type: System.UInt32
      description: The value to convert to an enumeration member.
    return:
      type: System.Object
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.'
- uid: System.Enum.ToObject(System.Type,System.Int64)
  id: ToObject(System.Type,System.Int64)
  parent: System.Enum
  href: System.Enum.yml
  name: ToObject(Type, Int64)
  fullName: System.Enum.ToObject(System.Type, System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1126
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified 64-bit signed integer to an enumeration member.
  syntax:
    content: public static object ToObject(Type enumType, long value)
    content.vb: Public Shared Function ToObject(enumType As Type, value As Long) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration type to return.
    - id: value
      type: System.Int64
      description: The value to convert to an enumeration member.
    return:
      type: System.Object
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.'
- uid: System.Enum.ToObject(System.Type,System.UInt64)
  id: ToObject(System.Type,System.UInt64)
  parent: System.Enum
  href: System.Enum.yml
  name: ToObject(Type, UInt64)
  fullName: System.Enum.ToObject(System.Type, System.UInt64)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1141
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified 64-bit unsigned integer value to an enumeration member.
  syntax:
    content: public static object ToObject(Type enumType, ulong value)
    content.vb: Public Shared Function ToObject(enumType As Type, value As ULong) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration type to return.
    - id: value
      type: System.UInt64
      description: The value to convert to an enumeration member.
    return:
      type: System.Object
  exceptions:
  - type: System.ArgumentNullException
    description: '*enumType* is null.'
  - type: System.ArgumentException
    description: '*enumType* is not an @''System.Enum''.'
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: '{TEnum}'
  isExternal: false
  name: TEnum
  fullName: TEnum
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  fullName: System.Array
- uid: System.String[]
  isExternal: true
  name: String[]
  name.vb: String()
  fullName: System.String[]
  fullName.vb: System.String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Enum
  parent: System
  isExternal: false
  href: System.Enum.yml
  name: Enum
  fullName: System.Enum
  type: Class
- uid: System.TypeCode
  parent: System
  isExternal: false
  href: System.TypeCode.yml
  name: TypeCode
  fullName: System.TypeCode
  type: Enum
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  fullName: System.Char
- uid: System.SByte
  parent: System
  isExternal: true
  name: SByte
  fullName: System.SByte
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  fullName: System.Byte
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  fullName: System.Int16
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  fullName: System.UInt32
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  fullName: System.UInt64
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  fullName: System.Single
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  fullName: System.Double
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  fullName: System.Decimal
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
