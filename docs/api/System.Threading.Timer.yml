items:
- uid: System.Threading.Timer
  id: Timer
  parent: System.Threading
  children:
  - System.Threading.Timer.#ctor(System.Threading.TimerCallback)
  - System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)
  - System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)
  - System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)
  - System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)
  - System.Threading.Timer.Change(System.Int32,System.Int32)
  - System.Threading.Timer.Change(System.Int64,System.Int64)
  - System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)
  - System.Threading.Timer.Change(System.UInt32,System.UInt32)
  - System.Threading.Timer.Dispose
  - System.Threading.Timer.Dispose(System.Threading.WaitHandle)
  href: System.Threading.Timer.yml
  name: Timer
  fullName: System.Threading.Timer
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Threading/Timer.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 773
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Provides a mechanism for executing a method at specified intervals. This class cannot be inherited.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public sealed class Timer : IDisposable'
    content.vb: Public NotInheritable Class Timer Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)'
  parent: System.Threading.Timer
  href: System.Threading.Timer.yml
  name: Timer(TimerCallback, Object, Int32, Int32)
  fullName: System.Threading.Timer.Timer(System.Threading.TimerCallback, System.Object, System.Int32, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 785
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Initializes a new instance of the Timer class, using a 32-bit signed integer to specify the time interval.
  syntax:
    content: public Timer(TimerCallback callback, object state, int dueTime, int period)
    content.vb: Public Sub New(callback As TimerCallback, state As Object, dueTime As Integer, period As Integer)
    parameters:
    - id: callback
      type: System.Threading.TimerCallback
      description: A @'System.Threading.TimerCallback' delegate representing a method to be executed.
    - id: state
      type: System.Object
      description: An object containing information to be used by the callback method, or null.
    - id: dueTime
      type: System.Int32
      description: The amount of time to delay before *callback* is invoked, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to prevent the timer from starting. Specify zero (0) to start the timer immediately.
    - id: period
      type: System.Int32
      description: The time interval between invocations of *callback*, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to disable periodic signaling.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The *dueTime* or *period* parameter is negative and is not equal to @'System.Threading.Timeout.Infinite'.
  - type: System.ArgumentNullException
    description: The *callback* parameter is null.
- uid: System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)
  id: '#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)'
  parent: System.Threading.Timer
  href: System.Threading.Timer.yml
  name: Timer(TimerCallback, Object, TimeSpan, TimeSpan)
  fullName: System.Threading.Timer.Timer(System.Threading.TimerCallback, System.Object, System.TimeSpan, System.TimeSpan)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 802
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Initializes a new instance of the Timer class, using @'System.TimeSpan' values to measure time intervals.
  syntax:
    content: public Timer(TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period)
    content.vb: Public Sub New(callback As TimerCallback, state As Object, dueTime As TimeSpan, period As TimeSpan)
    parameters:
    - id: callback
      type: System.Threading.TimerCallback
      description: A delegate representing a method to be executed.
    - id: state
      type: System.Object
      description: An object containing information to be used by the callback method, or null.
    - id: dueTime
      type: System.TimeSpan
      description: The amount of time to delay before the *callback* parameter invokes its methods. Specify negative one (-1) milliseconds to prevent the timer from starting. Specify zero (0) to start the timer immediately.
    - id: period
      type: System.TimeSpan
      description: The time interval between invocations of the methods referenced by *callback*. Specify negative one (-1) milliseconds to disable periodic signaling.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The number of milliseconds in the value of *dueTime* or *period* is negative and not equal to @'System.Threading.Timeout.Infinite', or is greater than @'System.Int32.MaxValue'.
  - type: System.ArgumentNullException
    description: The *callback* parameter is null.
- uid: System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)
  id: '#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)'
  parent: System.Threading.Timer
  href: System.Threading.Timer.yml
  name: Timer(TimerCallback, Object, UInt32, UInt32)
  fullName: System.Threading.Timer.Timer(System.Threading.TimerCallback, System.Object, System.UInt32, System.UInt32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 825
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Initializes a new instance of the Timer class, using 32-bit unsigned integers to measure time intervals.
  syntax:
    content: public Timer(TimerCallback callback, object state, uint dueTime, uint period)
    content.vb: Public Sub New(callback As TimerCallback, state As Object, dueTime As UInteger, period As UInteger)
    parameters:
    - id: callback
      type: System.Threading.TimerCallback
      description: A delegate representing a method to be executed.
    - id: state
      type: System.Object
      description: An object containing information to be used by the callback method, or null.
    - id: dueTime
      type: System.UInt32
      description: The amount of time to delay before *callback* is invoked, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to prevent the timer from starting. Specify zero (0) to start the timer immediately.
    - id: period
      type: System.UInt32
      description: The time interval between invocations of *callback*, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to disable periodic signaling.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The *dueTime* or *period* parameter is negative and is not equal to @'System.Threading.Timeout.Infinite'.
  - type: System.ArgumentNullException
    description: The *callback* parameter is null.
- uid: System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)
  id: '#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)'
  parent: System.Threading.Timer
  href: System.Threading.Timer.yml
  name: Timer(TimerCallback, Object, Int64, Int64)
  fullName: System.Threading.Timer.Timer(System.Threading.TimerCallback, System.Object, System.Int64, System.Int64)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 837
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Initializes a new instance of the Timer class, using 64-bit signed integers to measure time intervals.
  syntax:
    content: public Timer(TimerCallback callback, object state, long dueTime, long period)
    content.vb: Public Sub New(callback As TimerCallback, state As Object, dueTime As Long, period As Long)
    parameters:
    - id: callback
      type: System.Threading.TimerCallback
      description: A @'System.Threading.TimerCallback' delegate representing a method to be executed.
    - id: state
      type: System.Object
      description: An object containing information to be used by the callback method, or null.
    - id: dueTime
      type: System.Int64
      description: The amount of time to delay before *callback* is invoked, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to prevent the timer from starting. Specify zero (0) to start the timer immediately.
    - id: period
      type: System.Int64
      description: The time interval between invocations of *callback*, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to disable periodic signaling.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The *dueTime* or *period* parameter is negative and is not equal to @'System.Threading.Timeout.Infinite'.
  - type: System.NotSupportedException
    description: The *dueTime* or *period* parameter is greater than 4294967294.
- uid: System.Threading.Timer.#ctor(System.Threading.TimerCallback)
  id: '#ctor(System.Threading.TimerCallback)'
  parent: System.Threading.Timer
  href: System.Threading.Timer.yml
  name: Timer(TimerCallback)
  fullName: System.Threading.Timer.Timer(System.Threading.TimerCallback)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 857
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Initializes a new instance of the @'System.Threading.Timer' class with an infinite period and an infinite due time, using the newly created @'System.Threading.Timer' object as the state object.
  syntax:
    content: public Timer(TimerCallback callback)
    content.vb: Public Sub New(callback As TimerCallback)
    parameters:
    - id: callback
      type: System.Threading.TimerCallback
      description: A @'System.Threading.TimerCallback' delegate representing a method to be executed.
- uid: System.Threading.Timer.Change(System.Int32,System.Int32)
  id: Change(System.Int32,System.Int32)
  parent: System.Threading.Timer
  href: System.Threading.Timer.yml
  name: Change(Int32, Int32)
  fullName: System.Threading.Timer.Change(System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 896
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Changes the start time and the interval between method invocations for a timer, using 32-bit signed integers to measure time intervals.
  syntax:
    content: public bool Change(int dueTime, int period)
    content.vb: Public Function Change(dueTime As Integer, period As Integer) As Boolean
    parameters:
    - id: dueTime
      type: System.Int32
      description: The amount of time to delay before the invoking the callback method specified when the @'System.Threading.Timer' was constructed, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to prevent the timer from restarting. Specify zero (0) to restart the timer immediately.
    - id: period
      type: System.Int32
      description: The time interval between invocations of the callback method specified when the @'System.Threading.Timer' was constructed, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to disable periodic signaling.
    return:
      type: System.Boolean
  exceptions:
  - type: System.ObjectDisposedException
    description: The @'System.Threading.Timer' has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: The *dueTime* or *period* parameter is negative and is not equal to @'System.Threading.Timeout.Infinite'.
- uid: System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)
  id: Change(System.TimeSpan,System.TimeSpan)
  parent: System.Threading.Timer
  href: System.Threading.Timer.yml
  name: Change(TimeSpan, TimeSpan)
  fullName: System.Threading.Timer.Change(System.TimeSpan, System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 907
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Changes the start time and the interval between method invocations for a timer, using @'System.TimeSpan' values to measure time intervals.
  syntax:
    content: public bool Change(TimeSpan dueTime, TimeSpan period)
    content.vb: Public Function Change(dueTime As TimeSpan, period As TimeSpan) As Boolean
    parameters:
    - id: dueTime
      type: System.TimeSpan
      description: A @'System.TimeSpan' representing the amount of time to delay before invoking the callback method specified when the @'System.Threading.Timer' was constructed. Specify negative one (-1) milliseconds to prevent the timer from restarting. Specify zero (0) to restart the timer immediately.
    - id: period
      type: System.TimeSpan
      description: The time interval between invocations of the callback method specified when the @'System.Threading.Timer' was constructed. Specify negative one (-1) milliseconds to disable periodic signaling.
    return:
      type: System.Boolean
  exceptions:
  - type: System.ObjectDisposedException
    description: The @'System.Threading.Timer' has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: The *dueTime* or *period* parameter, in milliseconds, is less than -1.
  - type: System.NotSupportedException
    description: The *dueTime* or *period* parameter, in milliseconds, is greater than 4294967294.
- uid: System.Threading.Timer.Change(System.UInt32,System.UInt32)
  id: Change(System.UInt32,System.UInt32)
  parent: System.Threading.Timer
  href: System.Threading.Timer.yml
  name: Change(UInt32, UInt32)
  fullName: System.Threading.Timer.Change(System.UInt32, System.UInt32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 912
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Changes the start time and the interval between method invocations for a timer, using 32-bit unsigned integers to measure time intervals.
  syntax:
    content: public bool Change(uint dueTime, uint period)
    content.vb: Public Function Change(dueTime As UInteger, period As UInteger) As Boolean
    parameters:
    - id: dueTime
      type: System.UInt32
      description: The amount of time to delay before the invoking the callback method specified when the @'System.Threading.Timer' was constructed, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to prevent the timer from restarting. Specify zero (0) to restart the timer immediately.
    - id: period
      type: System.UInt32
      description: The time interval between invocations of the callback method specified when the @'System.Threading.Timer' was constructed, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to disable periodic signaling.
    return:
      type: System.Boolean
  exceptions:
  - type: System.ObjectDisposedException
    description: The @'System.Threading.Timer' has already been disposed.
- uid: System.Threading.Timer.Change(System.Int64,System.Int64)
  id: Change(System.Int64,System.Int64)
  parent: System.Threading.Timer
  href: System.Threading.Timer.yml
  name: Change(Int64, Int64)
  fullName: System.Threading.Timer.Change(System.Int64, System.Int64)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 918
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Changes the start time and the interval between method invocations for a timer, using 64-bit signed integers to measure time intervals.
  syntax:
    content: public bool Change(long dueTime, long period)
    content.vb: Public Function Change(dueTime As Long, period As Long) As Boolean
    parameters:
    - id: dueTime
      type: System.Int64
      description: The amount of time to delay before the invoking the callback method specified when the @'System.Threading.Timer' was constructed, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to prevent the timer from restarting. Specify zero (0) to restart the timer immediately.
    - id: period
      type: System.Int64
      description: The time interval between invocations of the callback method specified when the @'System.Threading.Timer' was constructed, in milliseconds. Specify @'System.Threading.Timeout.Infinite' to disable periodic signaling.
    return:
      type: System.Boolean
  exceptions:
  - type: System.ObjectDisposedException
    description: The @'System.Threading.Timer' has already been disposed.
  - type: System.ArgumentOutOfRangeException
    description: The *dueTime* or *period* parameter is less than -1.
  - type: System.NotSupportedException
    description: The *dueTime* or *period* parameter is greater than 4294967294.
- uid: System.Threading.Timer.Dispose(System.Threading.WaitHandle)
  id: Dispose(System.Threading.WaitHandle)
  parent: System.Threading.Timer
  href: System.Threading.Timer.yml
  name: Dispose(WaitHandle)
  fullName: System.Threading.Timer.Dispose(System.Threading.WaitHandle)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 933
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Releases all resources used by the current instance of @'System.Threading.Timer' and signals when the timer has been disposed of.
  syntax:
    content: public bool Dispose(WaitHandle notifyObject)
    content.vb: Public Function Dispose(notifyObject As WaitHandle) As Boolean
    parameters:
    - id: notifyObject
      type: System.Threading.WaitHandle
      description: The @'System.Threading.WaitHandle' to be signaled when the Timer has been disposed of.
    return:
      type: System.Boolean
  exceptions:
  - type: System.ArgumentNullException
    description: The *notifyObject* parameter is null.
- uid: System.Threading.Timer.Dispose
  id: Dispose
  parent: System.Threading.Timer
  href: System.Threading.Timer.yml
  name: Dispose()
  fullName: System.Threading.Timer.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 942
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Releases all resources used by the current instance of @'System.Threading.Timer'.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Threading.TimerCallback
  isExternal: false
  href: System.Threading.TimerCallback.yml
  name: TimerCallback
  fullName: System.Threading.TimerCallback
  type: Delegate
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  fullName: System.UInt32
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: true
  name: WaitHandle
  fullName: System.Threading.WaitHandle
