items:
- uid: System.AppDomainManager
  id: AppDomainManager
  parent: System
  children:
  - System.AppDomainManager.#ctor
  - System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)
  - System.AppDomainManager.EntryAssembly
  - System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)
  href: System.AppDomainManager.yml
  name: AppDomainManager
  fullName: System.AppDomainManager
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/AppDomainManager.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/AppDomainManager.cs
    startLine: 35
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides a managed equivalent of an unmanaged host.
  syntax:
    content: public class AppDomainManager
    content.vb: Public Class AppDomainManager
  exceptions:
  - type: System.Security.SecurityException
    description: The caller does not have the correct permissions. See the Requirements section.
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.AppDomainManager.#ctor
  id: '#ctor'
  parent: System.AppDomainManager
  href: System.AppDomainManager.yml
  name: AppDomainManager()
  fullName: System.AppDomainManager.AppDomainManager()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/AppDomainManager.cs
    startLine: 45
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the @'System.AppDomainManager' class.
  syntax:
    content: public AppDomainManager()
    content.vb: Public Sub New
- uid: System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)
  id: InitializeNewDomain(System.AppDomainSetup)
  parent: System.AppDomainManager
  href: System.AppDomainManager.yml
  name: InitializeNewDomain(AppDomainSetup)
  fullName: System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/AppDomainManager.cs
    startLine: 104
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes the new application domain.
  syntax:
    content: public virtual void InitializeNewDomain(AppDomainSetup appDomainInfo)
    content.vb: Public Overridable Sub InitializeNewDomain(appDomainInfo As AppDomainSetup)
    parameters:
    - id: appDomainInfo
      type: System.AppDomainSetup
      description: An object that contains application domain initialization information.
- uid: System.AppDomainManager.EntryAssembly
  id: EntryAssembly
  parent: System.AppDomainManager
  href: System.AppDomainManager.yml
  name: EntryAssembly
  fullName: System.AppDomainManager.EntryAssembly
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/AppDomainManager.cs
    startLine: 152
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the entry assembly for an application.
  syntax:
    content: public virtual Assembly EntryAssembly { get; }
    content.vb: Public Overridable ReadOnly Property EntryAssembly As Assembly
    parameters: []
    return:
      type: System.Reflection.Assembly
- uid: System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)
  id: CheckSecuritySettings(System.Security.SecurityState)
  parent: System.AppDomainManager
  href: System.AppDomainManager.yml
  name: CheckSecuritySettings(SecurityState)
  fullName: System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/AppDomainManager.cs
    startLine: 186
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether the specified operation is allowed in the application domain.
  syntax:
    content: public virtual bool CheckSecuritySettings(SecurityState state)
    content.vb: Public Overridable Function CheckSecuritySettings(state As SecurityState) As Boolean
    parameters:
    - id: state
      type: System.Security.SecurityState
      description: A subclass of @'System.Security.SecurityState' that identifies the operation whose security status is requested.
    return:
      type: System.Boolean
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.AppDomainSetup
  parent: System
  isExternal: false
  href: System.AppDomainSetup.yml
  name: AppDomainSetup
  fullName: System.AppDomainSetup
  type: Class
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  type: Namespace
- uid: System.Security.SecurityState
  parent: System.Security
  isExternal: false
  href: System.Security.SecurityState.yml
  name: SecurityState
  fullName: System.Security.SecurityState
  type: Class
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Security
  isExternal: false
  name: System.Security
  fullName: System.Security
  type: Namespace
