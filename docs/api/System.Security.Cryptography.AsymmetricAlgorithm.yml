items:
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  id: AsymmetricAlgorithm
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.AsymmetricAlgorithm.#ctor
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Create
  - System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  - System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  - System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 4
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Represents the abstract base class from which all implementations of asymmetric algorithms must inherit.
  syntax:
    content: 'public abstract class AsymmetricAlgorithm : IDisposable'
    content.vb: Public MustInherit Class AsymmetricAlgorithm Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  id: KeySizeValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: KeySizeValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 6
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Represents the size, in bits, of the key modulus used by the asymmetric algorithm.
  syntax:
    content: protected int KeySizeValue
    content.vb: Protected KeySizeValue As Integer
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  id: LegalKeySizesValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: LegalKeySizesValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 7
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Specifies the key sizes that are supported by the asymmetric algorithm.
  syntax:
    content: protected KeySizes[] LegalKeySizesValue
    content.vb: Protected LegalKeySizesValue As KeySizes()
- uid: System.Security.Cryptography.AsymmetricAlgorithm.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: AsymmetricAlgorithm()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.AsymmetricAlgorithm()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 13
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the @'System.Security.Cryptography.AsymmetricAlgorithm' class.
  syntax:
    content: protected AsymmetricAlgorithm()
    content.vb: Protected Sub New
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The implementation of the derived class is not valid.
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  id: Dispose
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: Dispose()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 17
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Releases all resources used by the current instance of the @'System.Security.Cryptography.AsymmetricAlgorithm' class.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
  id: Clear
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: Clear()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 21
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Releases all resources used by the @'System.Security.Cryptography.AsymmetricAlgorithm' class.
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: Dispose(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 26
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Releases the unmanaged resources used by the @'System.Security.Cryptography.AsymmetricAlgorithm' class and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  id: KeySize
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: KeySize
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 35
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.
  syntax:
    content: public virtual int KeySize { get; set; }
    content.vb: Public Overridable Property KeySize As Integer
    parameters: []
    return:
      type: System.Int32
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    description: The key modulus size is invalid.
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  id: LegalKeySizes
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: LegalKeySizes
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 61
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Gets the key sizes that are supported by the asymmetric algorithm.
  syntax:
    content: public virtual KeySizes[] LegalKeySizes { get; }
    content.vb: Public Overridable ReadOnly Property LegalKeySizes As KeySizes()
    parameters: []
    return:
      type: System.Security.Cryptography.KeySizes[]
- uid: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: SignatureAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 66
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: When implemented in a derived class, gets the name of the signature algorithm. Otherwise, always throws an @'System.NotImplementedException'.
  syntax:
    content: public virtual string SignatureAlgorithm { get; }
    content.vb: Public Overridable ReadOnly Property SignatureAlgorithm As String
    parameters: []
    return:
      type: System.String
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 73
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, gets the name of the key exchange algorithm. Otherwise, throws an @'System.NotImplementedException'.
  syntax:
    content: public virtual string KeyExchangeAlgorithm { get; }
    content.vb: Public Overridable ReadOnly Property KeyExchangeAlgorithm As String
    parameters: []
    return:
      type: System.String
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create
  id: Create
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: Create()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 83
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Creates a default cryptographic object used to perform the asymmetric algorithm.
  syntax:
    content: public static AsymmetricAlgorithm Create()
    content.vb: Public Shared Function Create As AsymmetricAlgorithm
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: Create(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 89
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Creates an instance of the specified implementation of an asymmetric algorithm.
  syntax:
    content: public static AsymmetricAlgorithm Create(string algName)
    content.vb: Public Shared Function Create(algName As String) As AsymmetricAlgorithm
    parameters:
    - id: algName
      type: System.String
      description: The asymmetric algorithm implementation to use. The following table shows the valid values for the *algName* parameter and the algorithms they map to.Parameter valueImplements System.Security.Cryptography.AsymmetricAlgorithm@'System.Security.Cryptography.AsymmetricAlgorithm'RSA@'System.Security.Cryptography.RSA'System.Security.Cryptography.RSA@'System.Security.Cryptography.RSA'DSA@'System.Security.Cryptography.DSA'System.Security.Cryptography.DSA@'System.Security.Cryptography.DSA'ECDsa@'System.Security.Cryptography.ECDsa'ECDsaCng@'System.Security.Cryptography.ECDsaCng'System.Security.Cryptography.ECDsaCng@'System.Security.Cryptography.ECDsaCng'ECDH@'System.Security.Cryptography.ECDiffieHellman'ECDiffieHellman@'System.Security.Cryptography.ECDiffieHellman'ECDiffieHellmanCng@'System.Security.Cryptography.ECDiffieHellmanCng'System.Security.Cryptography.ECDiffieHellmanCng@'System.Security.Cryptography.ECDiffieHellmanCng'
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: FromXmlString(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 94
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, reconstructs an @'System.Security.Cryptography.AsymmetricAlgorithm' object from an XML string. Otherwise, throws a @'System.NotImplementedException'.
  syntax:
    content: public virtual void FromXmlString(string xmlString)
    content.vb: Public Overridable Sub FromXmlString(xmlString As String)
    parameters:
    - id: xmlString
      type: System.String
      description: The XML string to use to reconstruct the @'System.Security.Cryptography.AsymmetricAlgorithm' object.
- uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  href: System.Security.Cryptography.AsymmetricAlgorithm.yml
  name: ToXmlString(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/AsymmetricAlgorithm.cs
    startLine: 99
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, creates and returns an XML string representation of the current @'System.Security.Cryptography.AsymmetricAlgorithm' object. Otherwise, throws a @'System.NotImplementedException'.
  syntax:
    content: public virtual string ToXmlString(bool includePrivateParameters)
    content.vb: Public Overridable Function ToXmlString(includePrivateParameters As Boolean) As String
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: true to include private parameters; otherwise, false.
    return:
      type: System.String
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.KeySizes[]
  isExternal: true
  name: KeySizes[]
  name.vb: KeySizes()
  fullName: System.Security.Cryptography.KeySizes[]
  fullName.vb: System.Security.Cryptography.KeySizes()
  spec.csharp:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    fullName: System.Security.Cryptography.KeySizes
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    fullName: System.Security.Cryptography.KeySizes
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: true
  name: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
