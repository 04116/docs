items:
- uid: System.Runtime.InteropServices.TypeLibExporterFlags
  id: TypeLibExporterFlags
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences
  - System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit
  - System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit
  - System.Runtime.InteropServices.TypeLibExporterFlags.None
  - System.Runtime.InteropServices.TypeLibExporterFlags.OldNames
  - System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered
  href: System.Runtime.InteropServices.TypeLibExporterFlags.yml
  name: TypeLibExporterFlags
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags
  type: Enum
  source:
    remote: &o0
      path: src/mscorlib/src/System/Runtime/InteropServices/ITypeLibConverter.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Runtime/InteropServices/ITypeLibConverter.cs
    startLine: 44
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Indicates how a type library should be produced.
  syntax:
    content: public enum TypeLibExporterFlags
    content.vb: Public Enum TypeLibExporterFlags
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.None
  id: None
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  href: System.Runtime.InteropServices.TypeLibExporterFlags.yml
  name: None
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.None
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/ITypeLibConverter.cs
    startLine: 49
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Specifies no flags. This is the default.
  syntax:
    content: None = 0
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered
  id: OnlyReferenceRegistered
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  href: System.Runtime.InteropServices.TypeLibExporterFlags.yml
  name: OnlyReferenceRegistered
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/ITypeLibConverter.cs
    startLine: 50
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Exports references to types that were imported from COM as IUnknown if the type does not have a registered type library. Set this flag when you want the type library exporter to look for dependent types in the registry rather than in the same directory as the input assembly.
  syntax:
    content: OnlyReferenceRegistered = 1
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences
  id: CallerResolvedReferences
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  href: System.Runtime.InteropServices.TypeLibExporterFlags.yml
  name: CallerResolvedReferences
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/ITypeLibConverter.cs
    startLine: 51
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Allows the caller to explicitly resolve type library references without consulting the registry.
  syntax:
    content: CallerResolvedReferences = 2
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.OldNames
  id: OldNames
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  href: System.Runtime.InteropServices.TypeLibExporterFlags.yml
  name: OldNames
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.OldNames
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/ITypeLibConverter.cs
    startLine: 52
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: When exporting type libraries, the .NET Framework resolves type name conflicts by decorating the type with the name of the namespace; for example, System.Windows.Forms.HorizontalAlignment is exported as System_Windows_Forms_HorizontalAlignment. When there is a conflict with the name of a type that is not visible from COM, the .NET Framework exports the undecorated name. Set the @'System.Runtime.InteropServices.TypeLibExporterFlags.OldNames' flag or use the /oldnames option in the Type Library Exporter (Tlbexp.exe) to force the .NET Framework to export the decorated name. Note that exporting the decorated name was the default behavior in versions prior to the .NET Framework version 2.0.
  syntax:
    content: OldNames = 4
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit
  id: ExportAs32Bit
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  href: System.Runtime.InteropServices.TypeLibExporterFlags.yml
  name: ExportAs32Bit
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/ITypeLibConverter.cs
    startLine: 53
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: When compiling on a 64-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 32-bit type library. All data types are transformed appropriately.
  syntax:
    content: ExportAs32Bit = 16
- uid: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit
  id: ExportAs64Bit
  parent: System.Runtime.InteropServices.TypeLibExporterFlags
  href: System.Runtime.InteropServices.TypeLibExporterFlags.yml
  name: ExportAs64Bit
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/ITypeLibConverter.cs
    startLine: 54
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: When compiling on a 32-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 64-bit type library. All data types are transformed appropriately.
  syntax:
    content: ExportAs64Bit = 32
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
  type: Namespace
