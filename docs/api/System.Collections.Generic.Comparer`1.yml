items:
- uid: System.Collections.Generic.Comparer`1
  id: Comparer`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.Comparer`1.Compare(`0,`0)
  - System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})
  - System.Collections.Generic.Comparer`1.Default
  - System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)
  href: System.Collections.Generic.Comparer`1.yml
  name: Comparer<T>
  name.vb: Comparer(Of T)
  fullName: System.Collections.Generic.Comparer<T>
  fullName.vb: System.Collections.Generic.Comparer(Of T)
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
    startLine: 14
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: Provides a base class for implementations of the @'System.Collections.Generic.IComparer`1' generic interface.
  syntax:
    content: 'public abstract class Comparer<T> : IComparer, IComparer<T>'
    content.vb: Public MustInherit Class Comparer(Of T) Implements IComparer, IComparer(Of T)
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  implements:
  - System.Collections.IComparer
  - System.Collections.Generic.IComparer{{T}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Generic.Comparer`1.Default
  id: Default
  parent: System.Collections.Generic.Comparer`1
  href: System.Collections.Generic.Comparer`1.yml
  name: Default
  fullName: System.Collections.Generic.Comparer<T>.Default
  fullName.vb: System.Collections.Generic.Comparer(Of T).Default
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
    startLine: 20
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: Returns a default sort order comparer for the type specified by the generic argument.
  syntax:
    content: public static Comparer<T> Default { get; }
    content.vb: Public Shared ReadOnly Property Default As Comparer(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.Comparer`1
- uid: System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})
  id: Create(System.Comparison{`0})
  parent: System.Collections.Generic.Comparer`1
  href: System.Collections.Generic.Comparer`1.yml
  name: Create(Comparison<T>)
  name.vb: Create(Comparison(Of T))
  fullName: System.Collections.Generic.Comparer<T>.Create(System.Comparison<T>)
  fullName.vb: System.Collections.Generic.Comparer(Of T).Create(System.Comparison(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
    startLine: 33
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: Creates a comparer by using the specified comparison.
  syntax:
    content: public static Comparer<T> Create(Comparison<T> comparison)
    content.vb: Public Shared Function Create(comparison As Comparison(Of T)) As Comparer(Of T)
    parameters:
    - id: comparison
      type: System.Comparison{{T}}
      description: The comparison to use.
    return:
      type: System.Collections.Generic.Comparer`1
- uid: System.Collections.Generic.Comparer`1.Compare(`0,`0)
  id: Compare(`0,`0)
  parent: System.Collections.Generic.Comparer`1
  href: System.Collections.Generic.Comparer`1.yml
  name: Compare(T, T)
  fullName: System.Collections.Generic.Comparer<T>.Compare(T, T)
  fullName.vb: System.Collections.Generic.Comparer(Of T).Compare(T, T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
    startLine: 76
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.
  syntax:
    content: public abstract int Compare(T x, T y)
    content.vb: Public MustOverride Function Compare(x As T, y As T) As Integer
    parameters:
    - id: x
      type: '{T}'
      description: The first object to compare.
    - id: y
      type: '{T}'
      description: The second object to compare.
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentException
    description: Type *T* does not implement either the @'System.IComparable`1' generic interface or the @'System.IComparable' interface.
- uid: System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)
  id: System#Collections#IComparer#Compare(System.Object,System.Object)
  parent: System.Collections.Generic.Comparer`1
  href: System.Collections.Generic.Comparer`1.yml
  name: IComparer.Compare(Object, Object)
  name.vb: System.Collections.IComparer.Compare(Object, Object)
  fullName: System.Collections.Generic.Comparer<T>.System.Collections.IComparer.Compare(System.Object, System.Object)
  fullName.vb: System.Collections.Generic.Comparer(Of T).System.Collections.IComparer.Compare(System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
    startLine: 78
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
  syntax:
    content: int IComparer.Compare(object x, object y)
    content.vb: Function System.Collections.IComparer.Compare(x As Object, y As Object) As Integer Implements IComparer.Compare
    parameters:
    - id: x
      type: System.Object
      description: The first object to compare.
    - id: y
      type: System.Object
      description: The second object to compare.
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentException
    description: '*x* or *y* is of a type that cannot be cast to type *T*.-or-*x* and *y* do not implement either the @''System.IComparable`1'' generic interface or the @''System.IComparable'' interface.'
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.Comparer`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.Comparer`1.yml
  name: Comparer<T>
  name.vb: Comparer(Of T)
  fullName: System.Collections.Generic.Comparer<T>
  fullName.vb: System.Collections.Generic.Comparer(Of T)
  type: Class
  spec.csharp:
  - uid: System.Collections.Generic.Comparer`1
    name: Comparer
    fullName: System.Collections.Generic.Comparer
    href: System.Collections.Generic.Comparer`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Comparer`1
    name: Comparer
    fullName: System.Collections.Generic.Comparer
    href: System.Collections.Generic.Comparer`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Comparison{{T}}
  parent: System
  definition: System.Comparison`1
  href: System.Comparison`1.yml
  name: Comparison<T>
  name.vb: Comparison(Of T)
  fullName: System.Comparison<T>
  fullName.vb: System.Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
    href: System.Comparison`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
    href: System.Comparison`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Comparison`1
  isExternal: false
  href: System.Comparison`1.yml
  name: Comparison<T>
  name.vb: Comparison(Of T)
  fullName: System.Comparison<T>
  fullName.vb: System.Comparison(Of T)
  type: Delegate
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
    href: System.Comparison`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
    href: System.Comparison`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
