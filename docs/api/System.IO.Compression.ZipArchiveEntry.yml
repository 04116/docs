items:
- uid: System.IO.Compression.ZipArchiveEntry
  id: ZipArchiveEntry
  parent: System.IO.Compression
  children:
  - System.IO.Compression.ZipArchiveEntry.Archive
  - System.IO.Compression.ZipArchiveEntry.CompressedLength
  - System.IO.Compression.ZipArchiveEntry.Delete
  - System.IO.Compression.ZipArchiveEntry.FullName
  - System.IO.Compression.ZipArchiveEntry.LastWriteTime
  - System.IO.Compression.ZipArchiveEntry.Length
  - System.IO.Compression.ZipArchiveEntry.Name
  - System.IO.Compression.ZipArchiveEntry.Open
  - System.IO.Compression.ZipArchiveEntry.ToString
  href: System.IO.Compression.ZipArchiveEntry.yml
  name: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
  type: Class
  source:
    remote: &o0
      path: src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs
    startLine: 11
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Represents a compressed file within a zip archive.
  syntax:
    content: public class ZipArchiveEntry
    content.vb: Public Class ZipArchiveEntry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.IO.Compression.ZipArchiveEntry.Archive
  id: Archive
  parent: System.IO.Compression.ZipArchiveEntry
  href: System.IO.Compression.ZipArchiveEntry.yml
  name: Archive
  fullName: System.IO.Compression.ZipArchiveEntry.Archive
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs
    startLine: 152
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Gets the zip archive that the entry belongs to.
  syntax:
    content: public ZipArchive Archive { get; }
    content.vb: Public ReadOnly Property Archive As ZipArchive
    parameters: []
    return:
      type: System.IO.Compression.ZipArchive
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength
  id: CompressedLength
  parent: System.IO.Compression.ZipArchiveEntry
  href: System.IO.Compression.ZipArchiveEntry.yml
  name: CompressedLength
  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs
    startLine: 158
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Gets the compressed size of the entry in the zip archive.
  syntax:
    content: public long CompressedLength { get; }
    content.vb: Public ReadOnly Property CompressedLength As Long
    parameters: []
    return:
      type: System.Int64
  exceptions:
  - type: System.InvalidOperationException
    description: The value of the property is not available because the entry has been modified.
- uid: System.IO.Compression.ZipArchiveEntry.FullName
  id: FullName
  parent: System.IO.Compression.ZipArchiveEntry
  href: System.IO.Compression.ZipArchiveEntry.yml
  name: FullName
  fullName: System.IO.Compression.ZipArchiveEntry.FullName
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs
    startLine: 173
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Gets the relative path of the entry in the zip archive.
  syntax:
    content: public string FullName { get; }
    content.vb: Public ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  id: LastWriteTime
  parent: System.IO.Compression.ZipArchiveEntry
  href: System.IO.Compression.ZipArchiveEntry.yml
  name: LastWriteTime
  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs
    startLine: 210
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Gets or sets the last time the entry in the zip archive was changed.
  syntax:
    content: public DateTimeOffset LastWriteTime { get; set; }
    content.vb: Public Property LastWriteTime As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  exceptions:
  - type: System.NotSupportedException
    description: The attempt to set this property failed, because the zip archive for the entry is in @'System.IO.Compression.ZipArchiveMode.Read' mode.
  - type: System.IO.IOException
    description: The archive mode is set to @'System.IO.Compression.ZipArchiveMode.Create'.- or -The archive mode is set to @'System.IO.Compression.ZipArchiveMode.Update' and the entry has been opened.
  - type: System.ArgumentOutOfRangeException
    description: An attempt was made to set this property to a value that is either earlier than 1980 January 1 0:00:00 (midnight) or later than 2107 December 31 23:59:58 (one second before midnight).
- uid: System.IO.Compression.ZipArchiveEntry.Length
  id: Length
  parent: System.IO.Compression.ZipArchiveEntry
  href: System.IO.Compression.ZipArchiveEntry.yml
  name: Length
  fullName: System.IO.Compression.ZipArchiveEntry.Length
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs
    startLine: 234
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Gets the uncompressed size of the entry in the zip archive.
  syntax:
    content: public long Length { get; }
    content.vb: Public ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
  exceptions:
  - type: System.InvalidOperationException
    description: The value of the property is not available because the entry has been modified.
- uid: System.IO.Compression.ZipArchiveEntry.Name
  id: Name
  parent: System.IO.Compression.ZipArchiveEntry
  href: System.IO.Compression.ZipArchiveEntry.yml
  name: Name
  fullName: System.IO.Compression.ZipArchiveEntry.Name
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs
    startLine: 249
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Gets the file name of the entry in the zip archive.
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
- uid: System.IO.Compression.ZipArchiveEntry.Delete
  id: Delete
  parent: System.IO.Compression.ZipArchiveEntry
  href: System.IO.Compression.ZipArchiveEntry.yml
  name: Delete()
  fullName: System.IO.Compression.ZipArchiveEntry.Delete()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs
    startLine: 264
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Deletes the entry from the zip archive.
  syntax:
    content: public void Delete()
    content.vb: Public Sub Delete
  exceptions:
  - type: System.IO.IOException
    description: The entry is already open for reading or writing.
  - type: System.NotSupportedException
    description: The zip archive for this entry was opened in a mode other than @'System.IO.Compression.ZipArchiveMode.Update'.
  - type: System.ObjectDisposedException
    description: The zip archive for this entry has been disposed.
- uid: System.IO.Compression.ZipArchiveEntry.Open
  id: Open
  parent: System.IO.Compression.ZipArchiveEntry
  href: System.IO.Compression.ZipArchiveEntry.yml
  name: Open()
  fullName: System.IO.Compression.ZipArchiveEntry.Open()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs
    startLine: 289
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Opens the entry from the zip archive.
  syntax:
    content: public Stream Open()
    content.vb: Public Function Open As Stream
    return:
      type: System.IO.Stream
      description: A Stream that represents the contents of the entry.
  exceptions:
  - type: System.IO.IOException
    description: The entry is already currently open for writing.-or-The entry has been deleted from the archive.-or-The archive for this entry was opened with the @'System.IO.Compression.ZipArchiveMode.Create' mode, and this entry has already been written to.
  - type: System.IO.InvalidDataException
    description: The entry is either missing from the archive or is corrupt and cannot be read. -or-The entry has been compressed by using a compression method that is not supported.
  - type: System.ObjectDisposedException
    description: The zip archive for this entry has been disposed.
- uid: System.IO.Compression.ZipArchiveEntry.ToString
  id: ToString
  parent: System.IO.Compression.ZipArchiveEntry
  href: System.IO.Compression.ZipArchiveEntry.yml
  name: ToString()
  fullName: System.IO.Compression.ZipArchiveEntry.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs
    startLine: 312
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Retrieves the relative path of the entry in the zip archive.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: FullName of the entry
  overridden: System.Object.ToString
references:
- uid: System.IO.Compression
  isExternal: false
  name: System.IO.Compression
  fullName: System.IO.Compression
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.Compression.ZipArchive
  isExternal: false
  href: System.IO.Compression.ZipArchive.yml
  name: ZipArchive
  fullName: System.IO.Compression.ZipArchive
  type: Class
- uid: System.InvalidOperationException
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.IO.IOException
- uid: System.ObjectDisposedException
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
