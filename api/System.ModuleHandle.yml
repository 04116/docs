items:
- uid: System.ModuleHandle
  id: ModuleHandle
  parent: System
  children:
  - System.ModuleHandle.EmptyHandle
  - System.ModuleHandle.Equals(System.ModuleHandle)
  - System.ModuleHandle.Equals(System.Object)
  - System.ModuleHandle.GetHashCode
  - System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)
  - System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)
  - System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)
  - System.ModuleHandle.MDStreamVersion
  - System.ModuleHandle.op_Equality(System.ModuleHandle,System.ModuleHandle)
  - System.ModuleHandle.op_Inequality(System.ModuleHandle,System.ModuleHandle)
  - System.ModuleHandle.ResolveFieldHandle(System.Int32)
  - System.ModuleHandle.ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  - System.ModuleHandle.ResolveMethodHandle(System.Int32)
  - System.ModuleHandle.ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  - System.ModuleHandle.ResolveTypeHandle(System.Int32)
  - System.ModuleHandle.ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  href: System.ModuleHandle.yml
  name: ModuleHandle
  fullName: System.ModuleHandle
  type: Struct
  source:
    remote: &o0
      path: src/mscorlib/src/System/RuntimeHandles.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1701
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents a runtime handle for a module.
  syntax:
    content: public struct ModuleHandle
    content.vb: Public Structure ModuleHandle
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.ModuleHandle.EmptyHandle
  id: EmptyHandle
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: EmptyHandle
  fullName: System.ModuleHandle.EmptyHandle
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1706
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents an empty module handle.
  syntax:
    content: public static readonly ModuleHandle EmptyHandle
    content.vb: Public Shared ReadOnly EmptyHandle As ModuleHandle
- uid: System.ModuleHandle.GetHashCode
  id: GetHashCode
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: GetHashCode()
  fullName: System.ModuleHandle.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1737
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
- uid: System.ModuleHandle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: Equals(Object)
  fullName: System.ModuleHandle.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1742
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a @'System.Boolean' value indicating whether the specified object is a @'System.ModuleHandle' structure, and equal to the current @'System.ModuleHandle'.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to be compared with the current @'System.ModuleHandle' structure.
    return:
      type: System.Boolean
      description: true if *obj* is a @'System.ModuleHandle' structure, and is equal to the current @'System.ModuleHandle' structure; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
- uid: System.ModuleHandle.Equals(System.ModuleHandle)
  id: Equals(System.ModuleHandle)
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: Equals(ModuleHandle)
  fullName: System.ModuleHandle.Equals(System.ModuleHandle)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1753
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a @'System.Boolean' value indicating whether the specified @'System.ModuleHandle' structure is equal to the current @'System.ModuleHandle'.
  syntax:
    content: public bool Equals(ModuleHandle handle)
    content.vb: Public Function Equals(handle As ModuleHandle) As Boolean
    parameters:
    - id: handle
      type: System.ModuleHandle
      description: The @'System.ModuleHandle' structure to be compared with the current @'System.ModuleHandle'.
    return:
      type: System.Boolean
      description: true if *handle* is equal to the current @'System.ModuleHandle' structure; otherwise false.
- uid: System.ModuleHandle.op_Equality(System.ModuleHandle,System.ModuleHandle)
  id: op_Equality(System.ModuleHandle,System.ModuleHandle)
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: Equality(ModuleHandle, ModuleHandle)
  fullName: System.ModuleHandle.Equality(System.ModuleHandle, System.ModuleHandle)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1759
  assemblies:
  - mscorlib
  namespace: System
  summary: Tests whether two @'System.ModuleHandle' structures are equal.
  syntax:
    content: public static bool operator ==(ModuleHandle left, ModuleHandle right)
    content.vb: Public Shared Operator =(left As ModuleHandle, right As ModuleHandle) As Boolean
    parameters:
    - id: left
      type: System.ModuleHandle
      description: The @'System.ModuleHandle' structure to the left of the equality operator.
    - id: right
      type: System.ModuleHandle
      description: The @'System.ModuleHandle' structure to the right of the equality operator.
    return:
      type: System.Boolean
      description: true if the @'System.ModuleHandle' structures are equal; otherwise, false.
- uid: System.ModuleHandle.op_Inequality(System.ModuleHandle,System.ModuleHandle)
  id: op_Inequality(System.ModuleHandle,System.ModuleHandle)
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: Inequality(ModuleHandle, ModuleHandle)
  fullName: System.ModuleHandle.Inequality(System.ModuleHandle, System.ModuleHandle)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1764
  assemblies:
  - mscorlib
  namespace: System
  summary: Tests whether two @'System.ModuleHandle' structures are unequal.
  syntax:
    content: public static bool operator !=(ModuleHandle left, ModuleHandle right)
    content.vb: Public Shared Operator <>(left As ModuleHandle, right As ModuleHandle) As Boolean
    parameters:
    - id: left
      type: System.ModuleHandle
      description: The @'System.ModuleHandle' structure to the left of the inequality operator.
    - id: right
      type: System.ModuleHandle
      description: The @'System.ModuleHandle' structure to the right of the inequality operator.
    return:
      type: System.Boolean
      description: true if the @'System.ModuleHandle' structures are unequal; otherwise, false.
- uid: System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)
  id: GetRuntimeTypeHandleFromMetadataToken(System.Int32)
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: GetRuntimeTypeHandleFromMetadataToken(Int32)
  fullName: System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1785
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a runtime type handle for the type identified by the specified metadata token.
  syntax:
    content: public RuntimeTypeHandle GetRuntimeTypeHandleFromMetadataToken(int typeToken)
    content.vb: Public Function GetRuntimeTypeHandleFromMetadataToken(typeToken As Integer) As RuntimeTypeHandle
    parameters:
    - id: typeToken
      type: System.Int32
      description: A metadata token that identifies a type in the module.
    return:
      type: System.RuntimeTypeHandle
      description: A @'System.RuntimeTypeHandle' for the type identified by *typeToken*.
- uid: System.ModuleHandle.ResolveTypeHandle(System.Int32)
  id: ResolveTypeHandle(System.Int32)
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: ResolveTypeHandle(Int32)
  fullName: System.ModuleHandle.ResolveTypeHandle(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1786
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a runtime type handle for the type identified by the specified metadata token.
  syntax:
    content: public RuntimeTypeHandle ResolveTypeHandle(int typeToken)
    content.vb: Public Function ResolveTypeHandle(typeToken As Integer) As RuntimeTypeHandle
    parameters:
    - id: typeToken
      type: System.Int32
      description: A metadata token that identifies a type in the module.
    return:
      type: System.RuntimeTypeHandle
      description: A @'System.RuntimeTypeHandle' for the type identified by *typeToken*.
  exceptions:
  - type: System.BadImageFormatException
    description: '*typeToken* is not a valid metadata token for a type in the current module.-or-*metadataToken* is not a token for a type in the scope of the current module.-or-*metadataToken* is a TypeSpec whose signature contains element type var or mvar.'
  - type: System.InvalidOperationException
    description: The method is called on an empty type handle.
- uid: System.ModuleHandle.ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  id: ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: ResolveTypeHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  name.vb: ResolveTypeHandle(Int32, RuntimeTypeHandle(), RuntimeTypeHandle())
  fullName: System.ModuleHandle.ResolveTypeHandle(System.Int32, System.RuntimeTypeHandle[], System.RuntimeTypeHandle[])
  fullName.vb: System.ModuleHandle.ResolveTypeHandle(System.Int32, System.RuntimeTypeHandle(), System.RuntimeTypeHandle())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1790
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a runtime type handle for the type identified by the specified metadata token, specifying the generic type arguments of the type and method where the token is in scope.
  syntax:
    content: public RuntimeTypeHandle ResolveTypeHandle(int typeToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext)
    content.vb: Public Function ResolveTypeHandle(typeToken As Integer, typeInstantiationContext As RuntimeTypeHandle(), methodInstantiationContext As RuntimeTypeHandle()) As RuntimeTypeHandle
    parameters:
    - id: typeToken
      type: System.Int32
      description: A metadata token that identifies a type in the module.
    - id: typeInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of @'System.RuntimeTypeHandle' structures representing the generic type arguments of the type where the token is in scope, or null if that type is not generic.
    - id: methodInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of @'System.RuntimeTypeHandle' structures objects representing the generic type arguments of the method where the token is in scope, or null if that method is not generic.
    return:
      type: System.RuntimeTypeHandle
      description: A @'System.RuntimeTypeHandle' for the type identified by *typeToken*.
  exceptions:
  - type: System.BadImageFormatException
    description: '*typeToken* is not a valid metadata token for a type in the current module.-or-*metadataToken* is not a token for a type in the scope of the current module.-or-*metadataToken* is a TypeSpec whose signature contains element type var or mvar.'
  - type: System.InvalidOperationException
    description: The method is called on an empty type handle.
  - type: System.ArgumentOutOfRangeException
    description: '*typeToken *is not a valid token.'
- uid: System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)
  id: GetRuntimeMethodHandleFromMetadataToken(System.Int32)
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: GetRuntimeMethodHandleFromMetadataToken(Int32)
  fullName: System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1829
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a runtime method handle for the method or constructor identified by the specified metadata token.
  syntax:
    content: public RuntimeMethodHandle GetRuntimeMethodHandleFromMetadataToken(int methodToken)
    content.vb: Public Function GetRuntimeMethodHandleFromMetadataToken(methodToken As Integer) As RuntimeMethodHandle
    parameters:
    - id: methodToken
      type: System.Int32
      description: A metadata token that identifies a method or constructor in the module.
    return:
      type: System.RuntimeMethodHandle
      description: A @'System.RuntimeMethodHandle' for the method or constructor identified by *methodToken*.
- uid: System.ModuleHandle.ResolveMethodHandle(System.Int32)
  id: ResolveMethodHandle(System.Int32)
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: ResolveMethodHandle(Int32)
  fullName: System.ModuleHandle.ResolveMethodHandle(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1830
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a runtime method handle for the method or constructor identified by the specified metadata token.
  syntax:
    content: public RuntimeMethodHandle ResolveMethodHandle(int methodToken)
    content.vb: Public Function ResolveMethodHandle(methodToken As Integer) As RuntimeMethodHandle
    parameters:
    - id: methodToken
      type: System.Int32
      description: A metadata token that identifies a method or constructor in the module.
    return:
      type: System.RuntimeMethodHandle
      description: A @'System.RuntimeMethodHandle' for the method or constructor identified by *methodToken*.
  exceptions:
  - type: System.BadImageFormatException
    description: '*methodToken* is not a valid metadata token for a method in the current module.-or-*metadataToken* is not a token for a method or constructor in the scope of the current module.-or-*metadataToken* is a MethodSpec whose signature contains element type var or mvar.'
  - type: System.InvalidOperationException
    description: The method is called on an empty method handle.
- uid: System.ModuleHandle.ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  id: ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: ResolveMethodHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  name.vb: ResolveMethodHandle(Int32, RuntimeTypeHandle(), RuntimeTypeHandle())
  fullName: System.ModuleHandle.ResolveMethodHandle(System.Int32, System.RuntimeTypeHandle[], System.RuntimeTypeHandle[])
  fullName.vb: System.ModuleHandle.ResolveMethodHandle(System.Int32, System.RuntimeTypeHandle(), System.RuntimeTypeHandle())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1832
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a runtime method handle for the method or constructor identified by the specified metadata token, specifying the generic type arguments of the type and method where the token is in scope.
  syntax:
    content: public RuntimeMethodHandle ResolveMethodHandle(int methodToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext)
    content.vb: Public Function ResolveMethodHandle(methodToken As Integer, typeInstantiationContext As RuntimeTypeHandle(), methodInstantiationContext As RuntimeTypeHandle()) As RuntimeMethodHandle
    parameters:
    - id: methodToken
      type: System.Int32
      description: A metadata token that identifies a method or constructor in the module.
    - id: typeInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of @'System.RuntimeTypeHandle' structures representing the generic type arguments of the type where the token is in scope, or null if that type is not generic.
    - id: methodInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of @'System.RuntimeTypeHandle' structures representing the generic type arguments of the method where the token is in scope, or null if that method is not generic.
    return:
      type: System.RuntimeMethodHandle
      description: A @'System.RuntimeMethodHandle' for the method or constructor identified by *methodToken*.
  exceptions:
  - type: System.BadImageFormatException
    description: '*methodToken* is not a valid metadata token for a method in the current module.-or-*metadataToken* is not a token for a method or constructor in the scope of the current module.-or-*metadataToken* is a MethodSpec whose signature contains element type var or mvar.'
  - type: System.InvalidOperationException
    description: The method is called on an empty method handle.
  - type: System.ArgumentOutOfRangeException
    description: '*methodToken *is not a valid token.'
- uid: System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)
  id: GetRuntimeFieldHandleFromMetadataToken(System.Int32)
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: GetRuntimeFieldHandleFromMetadataToken(Int32)
  fullName: System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1877
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a runtime handle for the field identified by the specified metadata token.
  syntax:
    content: public RuntimeFieldHandle GetRuntimeFieldHandleFromMetadataToken(int fieldToken)
    content.vb: Public Function GetRuntimeFieldHandleFromMetadataToken(fieldToken As Integer) As RuntimeFieldHandle
    parameters:
    - id: fieldToken
      type: System.Int32
      description: A metadata token that identifies a field in the module.
    return:
      type: System.RuntimeFieldHandle
      description: A @'System.RuntimeFieldHandle' for the field identified by *fieldToken*.
- uid: System.ModuleHandle.ResolveFieldHandle(System.Int32)
  id: ResolveFieldHandle(System.Int32)
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: ResolveFieldHandle(Int32)
  fullName: System.ModuleHandle.ResolveFieldHandle(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1878
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a runtime handle for the field identified by the specified metadata token.
  syntax:
    content: public RuntimeFieldHandle ResolveFieldHandle(int fieldToken)
    content.vb: Public Function ResolveFieldHandle(fieldToken As Integer) As RuntimeFieldHandle
    parameters:
    - id: fieldToken
      type: System.Int32
      description: A metadata token that identifies a field in the module.
    return:
      type: System.RuntimeFieldHandle
      description: A @'System.RuntimeFieldHandle' for the field identified by *fieldToken*.
  exceptions:
  - type: System.BadImageFormatException
    description: '*metadataToken* is not a valid token in the scope of the current module.-or-*metadataToken* is not a token for a field in the scope of the current module.-or-*metadataToken* identifies a field whose parent TypeSpec has a signature containing element type var or mvar.'
  - type: System.InvalidOperationException
    description: The method is called on an empty field handle.
- uid: System.ModuleHandle.ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  id: ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: ResolveFieldHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  name.vb: ResolveFieldHandle(Int32, RuntimeTypeHandle(), RuntimeTypeHandle())
  fullName: System.ModuleHandle.ResolveFieldHandle(System.Int32, System.RuntimeTypeHandle[], System.RuntimeTypeHandle[])
  fullName.vb: System.ModuleHandle.ResolveFieldHandle(System.Int32, System.RuntimeTypeHandle(), System.RuntimeTypeHandle())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1879
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a runtime field handle for the field identified by the specified metadata token, specifying the generic type arguments of the type and method where the token is in scope.
  syntax:
    content: public RuntimeFieldHandle ResolveFieldHandle(int fieldToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext)
    content.vb: Public Function ResolveFieldHandle(fieldToken As Integer, typeInstantiationContext As RuntimeTypeHandle(), methodInstantiationContext As RuntimeTypeHandle()) As RuntimeFieldHandle
    parameters:
    - id: fieldToken
      type: System.Int32
      description: A metadata token that identifies a field in the module.
    - id: typeInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of @'System.RuntimeTypeHandle' structures representing the generic type arguments of the type where the token is in scope, or null if that type is not generic.
    - id: methodInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of @'System.RuntimeTypeHandle' structures representing the generic type arguments of the method where the token is in scope, or null if that method is not generic.
    return:
      type: System.RuntimeFieldHandle
      description: A @'System.RuntimeFieldHandle' for the field identified by *fieldToken*.
  exceptions:
  - type: System.BadImageFormatException
    description: '*metadataToken* is not a valid token in the scope of the current module.-or-*metadataToken* is not a token for a field in the scope of the current module.-or-*metadataToken* identifies a field whose parent TypeSpec has a signature containing element type var or mvar.'
  - type: System.InvalidOperationException
    description: The method is called on an empty field handle.
  - type: System.ArgumentOutOfRangeException
    description: '*fieldToken *is not a valid token.'
- uid: System.ModuleHandle.MDStreamVersion
  id: MDStreamVersion
  parent: System.ModuleHandle
  href: System.ModuleHandle.yml
  name: MDStreamVersion
  fullName: System.ModuleHandle.MDStreamVersion
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/RuntimeHandles.cs
    startLine: 1972
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the metadata stream version.
  syntax:
    content: public int MDStreamVersion { get; }
    content.vb: Public ReadOnly Property MDStreamVersion As Integer
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit integer representing the metadata stream version. The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  href: System.ValueType.yml
  name: ValueType
  fullName: System.ValueType
  type: Class
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.ModuleHandle
  parent: System
  isExternal: false
  href: System.ModuleHandle.yml
  name: ModuleHandle
  fullName: System.ModuleHandle
  type: Struct
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  href: System.RuntimeTypeHandle.yml
  name: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
  type: Struct
- uid: System.RuntimeTypeHandle[]
  isExternal: false
  href: System.RuntimeTypeHandle.yml
  name: RuntimeTypeHandle[]
  name.vb: RuntimeTypeHandle()
  fullName: System.RuntimeTypeHandle[]
  fullName.vb: System.RuntimeTypeHandle()
  spec.csharp:
  - uid: System.RuntimeTypeHandle
    name: RuntimeTypeHandle
    fullName: System.RuntimeTypeHandle
    href: System.RuntimeTypeHandle.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.RuntimeTypeHandle
    name: RuntimeTypeHandle
    fullName: System.RuntimeTypeHandle
    href: System.RuntimeTypeHandle.yml
  - name: ()
    fullName: ()
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: false
  href: System.RuntimeMethodHandle.yml
  name: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
  type: Struct
- uid: System.RuntimeFieldHandle
  parent: System
  isExternal: false
  href: System.RuntimeFieldHandle.yml
  name: RuntimeFieldHandle
  fullName: System.RuntimeFieldHandle
  type: Struct
