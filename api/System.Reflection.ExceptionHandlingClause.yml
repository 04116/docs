items:
- uid: System.Reflection.ExceptionHandlingClause
  id: ExceptionHandlingClause
  parent: System.Reflection
  children:
  - System.Reflection.ExceptionHandlingClause.#ctor
  - System.Reflection.ExceptionHandlingClause.CatchType
  - System.Reflection.ExceptionHandlingClause.FilterOffset
  - System.Reflection.ExceptionHandlingClause.Flags
  - System.Reflection.ExceptionHandlingClause.HandlerLength
  - System.Reflection.ExceptionHandlingClause.HandlerOffset
  - System.Reflection.ExceptionHandlingClause.ToString
  - System.Reflection.ExceptionHandlingClause.TryLength
  - System.Reflection.ExceptionHandlingClause.TryOffset
  href: System.Reflection.ExceptionHandlingClause.yml
  name: ExceptionHandlingClause
  fullName: System.Reflection.ExceptionHandlingClause
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/MethodBody.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Reflection/MethodBody.cs
    startLine: 22
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Represents a clause in a structured exception-handling block.
  syntax:
    content: public class ExceptionHandlingClause
    content.vb: Public Class ExceptionHandlingClause
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Reflection.ExceptionHandlingClause.#ctor
  id: '#ctor'
  parent: System.Reflection.ExceptionHandlingClause
  href: System.Reflection.ExceptionHandlingClause.yml
  name: ExceptionHandlingClause()
  fullName: System.Reflection.ExceptionHandlingClause.ExceptionHandlingClause()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBody.cs
    startLine: 27
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Initializes a new instance of the @'System.Reflection.ExceptionHandlingClause' class.
  syntax:
    content: protected ExceptionHandlingClause()
    content.vb: Protected Sub New
- uid: System.Reflection.ExceptionHandlingClause.Flags
  id: Flags
  parent: System.Reflection.ExceptionHandlingClause
  href: System.Reflection.ExceptionHandlingClause.yml
  name: Flags
  fullName: System.Reflection.ExceptionHandlingClause.Flags
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBody.cs
    startLine: 43
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets a value indicating whether this exception-handling clause is a finally clause, a type-filtered clause, or a user-filtered clause.
  syntax:
    content: public virtual ExceptionHandlingClauseOptions Flags { get; }
    content.vb: Public Overridable ReadOnly Property Flags As ExceptionHandlingClauseOptions
    parameters: []
    return:
      type: System.Reflection.ExceptionHandlingClauseOptions
      description: An @'System.Reflection.ExceptionHandlingClauseOptions' value that indicates what kind of action this clause performs.
- uid: System.Reflection.ExceptionHandlingClause.TryOffset
  id: TryOffset
  parent: System.Reflection.ExceptionHandlingClause
  href: System.Reflection.ExceptionHandlingClause.yml
  name: TryOffset
  fullName: System.Reflection.ExceptionHandlingClause.TryOffset
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBody.cs
    startLine: 44
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: The offset within the method, in bytes, of the try block that includes this exception-handling clause.
  syntax:
    content: public virtual int TryOffset { get; }
    content.vb: Public Overridable ReadOnly Property TryOffset As Integer
    parameters: []
    return:
      type: System.Int32
      description: An integer that represents the offset within the method, in bytes, of the try block that includes this exception-handling clause.
- uid: System.Reflection.ExceptionHandlingClause.TryLength
  id: TryLength
  parent: System.Reflection.ExceptionHandlingClause
  href: System.Reflection.ExceptionHandlingClause.yml
  name: TryLength
  fullName: System.Reflection.ExceptionHandlingClause.TryLength
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBody.cs
    startLine: 45
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: The total length, in bytes, of the try block that includes this exception-handling clause.
  syntax:
    content: public virtual int TryLength { get; }
    content.vb: Public Overridable ReadOnly Property TryLength As Integer
    parameters: []
    return:
      type: System.Int32
      description: The total length, in bytes, of the try block that includes this exception-handling clause.
- uid: System.Reflection.ExceptionHandlingClause.HandlerOffset
  id: HandlerOffset
  parent: System.Reflection.ExceptionHandlingClause
  href: System.Reflection.ExceptionHandlingClause.yml
  name: HandlerOffset
  fullName: System.Reflection.ExceptionHandlingClause.HandlerOffset
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBody.cs
    startLine: 46
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets the offset within the method body, in bytes, of this exception-handling clause.
  syntax:
    content: public virtual int HandlerOffset { get; }
    content.vb: Public Overridable ReadOnly Property HandlerOffset As Integer
    parameters: []
    return:
      type: System.Int32
      description: An integer that represents the offset within the method body, in bytes, of this exception-handling clause.
- uid: System.Reflection.ExceptionHandlingClause.HandlerLength
  id: HandlerLength
  parent: System.Reflection.ExceptionHandlingClause
  href: System.Reflection.ExceptionHandlingClause.yml
  name: HandlerLength
  fullName: System.Reflection.ExceptionHandlingClause.HandlerLength
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBody.cs
    startLine: 47
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets the length, in bytes, of the body of this exception-handling clause.
  syntax:
    content: public virtual int HandlerLength { get; }
    content.vb: Public Overridable ReadOnly Property HandlerLength As Integer
    parameters: []
    return:
      type: System.Int32
      description: An integer that represents the length, in bytes, of the MSIL that forms the body of this exception-handling clause.
- uid: System.Reflection.ExceptionHandlingClause.FilterOffset
  id: FilterOffset
  parent: System.Reflection.ExceptionHandlingClause
  href: System.Reflection.ExceptionHandlingClause.yml
  name: FilterOffset
  fullName: System.Reflection.ExceptionHandlingClause.FilterOffset
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBody.cs
    startLine: 49
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets the offset within the method body, in bytes, of the user-supplied filter code.
  syntax:
    content: public virtual int FilterOffset { get; }
    content.vb: Public Overridable ReadOnly Property FilterOffset As Integer
    parameters: []
    return:
      type: System.Int32
      description: The offset within the method body, in bytes, of the user-supplied filter code. The value of this property has no meaning if the @'System.Reflection.ExceptionHandlingClause.Flags' property has any value other than @'System.Reflection.ExceptionHandlingClauseOptions.Filter'.
  exceptions:
  - type: System.InvalidOperationException
    description: Cannot get the offset because the exception handling clause is not a filter.
- uid: System.Reflection.ExceptionHandlingClause.CatchType
  id: CatchType
  parent: System.Reflection.ExceptionHandlingClause
  href: System.Reflection.ExceptionHandlingClause.yml
  name: CatchType
  fullName: System.Reflection.ExceptionHandlingClause.CatchType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBody.cs
    startLine: 60
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets the type of exception handled by this clause.
  syntax:
    content: public virtual Type CatchType { get; }
    content.vb: Public Overridable ReadOnly Property CatchType As Type
    parameters: []
    return:
      type: System.Type
      description: A @'System.Type' object that represents that type of exception handled by this clause, or null if the @'System.Reflection.ExceptionHandlingClause.Flags' property is @'System.Reflection.ExceptionHandlingClauseOptions.Filter' or @'System.Reflection.ExceptionHandlingClauseOptions.Finally'.
  exceptions:
  - type: System.InvalidOperationException
    description: Invalid use of property for the object's current state.
- uid: System.Reflection.ExceptionHandlingClause.ToString
  id: ToString
  parent: System.Reflection.ExceptionHandlingClause
  href: System.Reflection.ExceptionHandlingClause.yml
  name: ToString()
  fullName: System.Reflection.ExceptionHandlingClause.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/MethodBody.cs
    startLine: 83
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: A string representation of the exception-handling clause.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string that lists appropriate property values for the filter clause type.
  overridden: System.Object.ToString
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.ExceptionHandlingClauseOptions
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.ExceptionHandlingClauseOptions.yml
  name: ExceptionHandlingClauseOptions
  fullName: System.Reflection.ExceptionHandlingClauseOptions
  type: Enum
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
