items:
- uid: System.Runtime.InteropServices.IRegistrationServices
  id: IRegistrationServices
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid
  - System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)
  - System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  - System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  - System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  - System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)
  - System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)
  - System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  href: System.Runtime.InteropServices.IRegistrationServices.yml
  name: IRegistrationServices
  fullName: System.Runtime.InteropServices.IRegistrationServices
  type: Interface
  source:
    remote: &o0
      path: src/mscorlib/src/System/Runtime/InteropServices/IRegistrationServices.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Runtime/InteropServices/IRegistrationServices.cs
    startLine: 28
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides a set of services for registering and unregistering managed assemblies for use from COM.
  syntax:
    content: public interface IRegistrationServices
    content.vb: Public Interface IRegistrationServices
- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  id: RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  parent: System.Runtime.InteropServices.IRegistrationServices
  href: System.Runtime.InteropServices.IRegistrationServices.yml
  name: RegisterAssembly(Assembly, AssemblyRegistrationFlags)
  fullName: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly, System.Runtime.InteropServices.AssemblyRegistrationFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/IRegistrationServices.cs
    startLine: 32
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Registers the classes in a managed assembly to enable creation from COM.
  syntax:
    content: bool RegisterAssembly(Assembly assembly, AssemblyRegistrationFlags flags)
    content.vb: Function RegisterAssembly(assembly As Assembly, flags As AssemblyRegistrationFlags) As Boolean
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly to be registered.
    - id: flags
      type: System.Runtime.InteropServices.AssemblyRegistrationFlags
      description: An @'System.Runtime.InteropServices.AssemblyRegistrationFlags' value indicating any special settings needed when registering *assembly*.
    return:
      type: System.Boolean
      description: true if *assembly* contains types that were successfully registered; otherwise false if the assembly contains no eligible types.
  exceptions:
  - type: System.ArgumentNullException
    description: '*assembly* is null.'
  - type: System.InvalidOperationException
    description: The full name of *assembly* is null.-or- A method marked with @'System.Runtime.InteropServices.ComRegisterFunctionAttribute' is not static.-or- There is more than one method marked with @'System.Runtime.InteropServices.ComRegisterFunctionAttribute' at a given level of the hierarchy.-or- The signature of the method marked with @'System.Runtime.InteropServices.ComRegisterFunctionAttribute' is not valid.
- uid: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  id: UnregisterAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.IRegistrationServices
  href: System.Runtime.InteropServices.IRegistrationServices.yml
  name: UnregisterAssembly(Assembly)
  fullName: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/IRegistrationServices.cs
    startLine: 35
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Unregisters the classes in a managed assembly.
  syntax:
    content: bool UnregisterAssembly(Assembly assembly)
    content.vb: Function UnregisterAssembly(assembly As Assembly) As Boolean
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly to be unregistered.
    return:
      type: System.Boolean
      description: true if *assembly* contains types that were successfully unregistered; otherwise false if the assembly contains no eligible types.
  exceptions:
  - type: System.ArgumentNullException
    description: '*assembly* is null.'
  - type: System.InvalidOperationException
    description: The full name of *assembly* is null.-or- A method marked with @'System.Runtime.InteropServices.ComUnregisterFunctionAttribute' is not static.-or- There is more than one method marked with @'System.Runtime.InteropServices.ComUnregisterFunctionAttribute' at a given level of the hierarchy.-or- The signature of the method marked with @'System.Runtime.InteropServices.ComUnregisterFunctionAttribute' is not valid.
- uid: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  id: GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.IRegistrationServices
  href: System.Runtime.InteropServices.IRegistrationServices.yml
  name: GetRegistrableTypesInAssembly(Assembly)
  fullName: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/IRegistrationServices.cs
    startLine: 38
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Retrieves a list of classes in an assembly that would be registered by a call to @'System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)'.
  syntax:
    content: Type[] GetRegistrableTypesInAssembly(Assembly assembly)
    content.vb: Function GetRegistrableTypesInAssembly(assembly As Assembly) As Type()
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly to search for classes.
    return:
      type: System.Type[]
      description: A @'System.Type' array containing a list of classes in *assembly*.
- uid: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)
  id: GetProgIdForType(System.Type)
  parent: System.Runtime.InteropServices.IRegistrationServices
  href: System.Runtime.InteropServices.IRegistrationServices.yml
  name: GetProgIdForType(Type)
  fullName: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/IRegistrationServices.cs
    startLine: 41
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Retrieves the COM ProgID for a specified type.
  syntax:
    content: string GetProgIdForType(Type type)
    content.vb: Function GetProgIdForType(type As Type) As String
    parameters:
    - id: type
      type: System.Type
      description: The type whose ProgID is being requested.
    return:
      type: System.String
      description: The ProgID for the specified type.
- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  id: RegisterTypeForComClients(System.Type,System.Guid@)
  parent: System.Runtime.InteropServices.IRegistrationServices
  href: System.Runtime.InteropServices.IRegistrationServices.yml
  name: RegisterTypeForComClients(Type, ref Guid)
  name.vb: RegisterTypeForComClients(Type, ByRef Guid)
  fullName: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type, ref System.Guid)
  fullName.vb: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type, ByRef System.Guid)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/IRegistrationServices.cs
    startLine: 44
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Registers the specified type with COM using the specified GUID.
  syntax:
    content: void RegisterTypeForComClients(Type type, ref Guid g)
    content.vb: Sub RegisterTypeForComClients(type As Type, ByRef g As Guid)
    parameters:
    - id: type
      type: System.Type
      description: The type to be registered for use from COM.
    - id: g
      type: System.Guid
      description: GUID used to register the specified type.
- uid: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid
  id: GetManagedCategoryGuid
  parent: System.Runtime.InteropServices.IRegistrationServices
  href: System.Runtime.InteropServices.IRegistrationServices.yml
  name: GetManagedCategoryGuid()
  fullName: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/IRegistrationServices.cs
    startLine: 47
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Returns the GUID of the COM category that contains the managed classes.
  syntax:
    content: Guid GetManagedCategoryGuid()
    content.vb: Function GetManagedCategoryGuid As Guid
    return:
      type: System.Guid
      description: The GUID of the COM category that contains the managed classes.
- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)
  id: TypeRequiresRegistration(System.Type)
  parent: System.Runtime.InteropServices.IRegistrationServices
  href: System.Runtime.InteropServices.IRegistrationServices.yml
  name: TypeRequiresRegistration(Type)
  fullName: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/IRegistrationServices.cs
    startLine: 49
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Determines whether the specified type requires registration.
  syntax:
    content: bool TypeRequiresRegistration(Type type)
    content.vb: Function TypeRequiresRegistration(type As Type) As Boolean
    parameters:
    - id: type
      type: System.Type
      description: The type to check for COM registration requirements.
    return:
      type: System.Boolean
      description: true if the type must be registered for use from COM; otherwise false.
- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)
  id: TypeRepresentsComType(System.Type)
  parent: System.Runtime.InteropServices.IRegistrationServices
  href: System.Runtime.InteropServices.IRegistrationServices.yml
  name: TypeRepresentsComType(Type)
  fullName: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Runtime/InteropServices/IRegistrationServices.cs
    startLine: 52
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Determines whether the specified type is a COM type.
  syntax:
    content: bool TypeRepresentsComType(Type type)
    content.vb: Function TypeRepresentsComType(type As Type) As Boolean
    parameters:
    - id: type
      type: System.Type
      description: The type to determine if it is a COM type.
    return:
      type: System.Boolean
      description: true if the specified type is a COM type; otherwise false.
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
  type: Namespace
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Assembly.yml
  name: Assembly
  fullName: System.Reflection.Assembly
  type: Class
- uid: System.Runtime.InteropServices.AssemblyRegistrationFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  href: System.Runtime.InteropServices.AssemblyRegistrationFlags.yml
  name: AssemblyRegistrationFlags
  fullName: System.Runtime.InteropServices.AssemblyRegistrationFlags
  type: Enum
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  type: Namespace
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Type[]
  isExternal: false
  href: System.Type.yml
  name: Type[]
  name.vb: Type()
  fullName: System.Type[]
  fullName.vb: System.Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
  type: Class
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Guid
  parent: System
  isExternal: false
  href: System.Guid.yml
  name: Guid
  fullName: System.Guid
  type: Struct
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  type: Class
  summary: The exception that is thrown when a method call is invalid for the object's current state.
