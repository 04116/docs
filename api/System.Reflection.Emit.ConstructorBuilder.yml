items:
- uid: System.Reflection.Emit.ConstructorBuilder
  id: ConstructorBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.ConstructorBuilder.Attributes
  - System.Reflection.Emit.ConstructorBuilder.CallingConvention
  - System.Reflection.Emit.ConstructorBuilder.DeclaringType
  - System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  - System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Emit.ConstructorBuilder.GetILGenerator
  - System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  - System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags
  - System.Reflection.Emit.ConstructorBuilder.GetModule
  - System.Reflection.Emit.ConstructorBuilder.GetParameters
  - System.Reflection.Emit.ConstructorBuilder.GetToken
  - System.Reflection.Emit.ConstructorBuilder.InitLocals
  - System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Emit.ConstructorBuilder.MethodHandle
  - System.Reflection.Emit.ConstructorBuilder.Module
  - System.Reflection.Emit.ConstructorBuilder.Name
  - System.Reflection.Emit.ConstructorBuilder.ReflectedType
  - System.Reflection.Emit.ConstructorBuilder.ReturnType
  - System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  - System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})
  - System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])
  - System.Reflection.Emit.ConstructorBuilder.Signature
  - System.Reflection.Emit.ConstructorBuilder.ToString
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: ConstructorBuilder
  fullName: System.Reflection.Emit.ConstructorBuilder
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 17
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines and represents a constructor of a dynamic class.
  syntax:
    content: 'public sealed class ConstructorBuilder : ConstructorInfo, ICustomAttributeProvider, _MemberInfo, _MethodBase, _ConstructorInfo, _ConstructorBuilder'
    content.vb: Public NotInheritable Class ConstructorBuilder Inherits ConstructorInfo Implements ICustomAttributeProvider, _MemberInfo, _MethodBase, _ConstructorInfo, _ConstructorBuilder
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Reflection.MethodBase
  - System.Reflection.ConstructorInfo
  implements:
  - System.Reflection.ICustomAttributeProvider
  - System.Runtime.InteropServices._MemberInfo
  - System.Runtime.InteropServices._MethodBase
  - System.Runtime.InteropServices._ConstructorInfo
  - System.Runtime.InteropServices._ConstructorBuilder
  inheritedMembers:
  - System.Reflection.ConstructorInfo.ConstructorName
  - System.Reflection.ConstructorInfo.TypeConstructorName
  - System.Reflection.ConstructorInfo.Equals(System.Object)
  - System.Reflection.ConstructorInfo.GetHashCode
  - System.Reflection.ConstructorInfo.MemberType
  - System.Reflection.ConstructorInfo.Invoke(System.Object[])
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  - System.Reflection.MethodBase.GetCurrentMethod
  - System.Reflection.MethodBase.MethodImplementationFlags
  - System.Reflection.MethodBase.GetGenericArguments
  - System.Reflection.MethodBase.IsGenericMethodDefinition
  - System.Reflection.MethodBase.ContainsGenericParameters
  - System.Reflection.MethodBase.IsGenericMethod
  - System.Reflection.MethodBase.IsSecurityCritical
  - System.Reflection.MethodBase.IsSecuritySafeCritical
  - System.Reflection.MethodBase.IsSecurityTransparent
  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  - System.Reflection.MethodBase.IsPublic
  - System.Reflection.MethodBase.IsPrivate
  - System.Reflection.MethodBase.IsFamily
  - System.Reflection.MethodBase.IsAssembly
  - System.Reflection.MethodBase.IsFamilyAndAssembly
  - System.Reflection.MethodBase.IsFamilyOrAssembly
  - System.Reflection.MethodBase.IsStatic
  - System.Reflection.MethodBase.IsFinal
  - System.Reflection.MethodBase.IsVirtual
  - System.Reflection.MethodBase.IsHideBySig
  - System.Reflection.MethodBase.IsAbstract
  - System.Reflection.MethodBase.IsSpecialName
  - System.Reflection.MethodBase.IsConstructor
  - System.Reflection.MethodBase.GetMethodBody
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.MetadataToken
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Reflection.Emit.ConstructorBuilder.ToString
  id: ToString
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: ToString()
  fullName: System.Reflection.Emit.ConstructorBuilder.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 77
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns this @'System.Reflection.Emit.ConstructorBuilder' instance as a @'System.String'.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: Returns a @'System.String' containing the name, attributes, and exceptions of this constructor, followed by the current Microsoft intermediate language (MSIL) stream.
  overridden: System.Object.ToString
- uid: System.Reflection.Emit.ConstructorBuilder.Module
  id: Module
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: Module
  fullName: System.Reflection.Emit.ConstructorBuilder.Module
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 90
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the dynamic module in which this constructor is defined.
  syntax:
    content: public override Module Module { get; }
    content.vb: Public Overrides ReadOnly Property Module As
    parameters: []
    return:
      type: System.Reflection.Module
      description: A @'System.Reflection.Module' object that represents the dynamic module in which this constructor is defined.
  overridden: System.Reflection.MemberInfo.Module
- uid: System.Reflection.Emit.ConstructorBuilder.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: ReflectedType
  fullName: System.Reflection.Emit.ConstructorBuilder.ReflectedType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 95
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Holds a reference to the @'System.Type' object from which this object was obtained.
  syntax:
    content: public override Type ReflectedType { get; }
    content.vb: Public Overrides ReadOnly Property ReflectedType As Type
    parameters: []
    return:
      type: System.Type
      description: Returns the Type object from which this object was obtained.
  overridden: System.Reflection.MemberInfo.ReflectedType
- uid: System.Reflection.Emit.ConstructorBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: DeclaringType
  fullName: System.Reflection.Emit.ConstructorBuilder.DeclaringType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 100
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves a reference to the @'System.Type' object for the type that declares this member.
  syntax:
    content: public override Type DeclaringType { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
    parameters: []
    return:
      type: System.Type
      description: Returns the @'System.Type' object for the type that declares this member.
  overridden: System.Reflection.MemberInfo.DeclaringType
- uid: System.Reflection.Emit.ConstructorBuilder.Name
  id: Name
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: Name
  fullName: System.Reflection.Emit.ConstructorBuilder.Name
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 105
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the name of this constructor.
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: Returns the name of this constructor.
  overridden: System.Reflection.MemberInfo.Name
- uid: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  name.vb: Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)
  fullName: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)
  fullName.vb: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 113
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Dynamically invokes the constructor reflected by this instance with the specified arguments, under the constraints of the specified Binder.
  syntax:
    content: public override object Invoke(object obj, BindingFlags invokeAttr, Binder binder, object[] parameters, CultureInfo culture)
    content.vb: Public Overrides Function Invoke(obj As Object, invokeAttr As BindingFlags, binder As Binder, parameters As Object(), culture As CultureInfo) As Object
    parameters:
    - id: obj
      type: System.Object
      description: The object that needs to be reinitialized.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: One of the BindingFlags values that specifies the type of binding that is desired.
    - id: binder
      type: System.Reflection.Binder
      description: A Binder that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If *binder* is null, then Binder.DefaultBinding is used.
    - id: parameters
      type: System.Object[]
      description: An argument list. This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked. If there are no parameters, this should be a null reference (Nothing in Visual Basic).
    - id: culture
      type: System.Globalization.CultureInfo
      description: A @'System.Globalization.CultureInfo' used to govern the coercion of types. If this is null, the @'System.Globalization.CultureInfo' for the current thread is used.
    return:
      type: System.Object
      description: An instance of the class associated with the constructor.
  overridden: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported. You can retrieve the constructor using @'System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])' and call @'System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)' on the returned @'System.Reflection.ConstructorInfo'.
- uid: System.Reflection.Emit.ConstructorBuilder.GetParameters
  id: GetParameters
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: GetParameters()
  fullName: System.Reflection.Emit.ConstructorBuilder.GetParameters()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 118
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the parameters of this constructor.
  syntax:
    content: public override ParameterInfo[] GetParameters()
    content.vb: Public Overrides Function GetParameters As ParameterInfo()
    return:
      type: System.Reflection.ParameterInfo[]
      description: Returns an array of @'System.Reflection.ParameterInfo' objects that represent the parameters of this constructor.
  overridden: System.Reflection.MethodBase.GetParameters
  exceptions:
  - type: System.InvalidOperationException
    description: '@''System.Reflection.Emit.TypeBuilder.CreateType'' has not been called on this constructor''s type, in the .NET Framework versions 1.0 and 1.1.'
  - type: System.NotSupportedException
    description: '@''System.Reflection.Emit.TypeBuilder.CreateType'' has not been called on this constructor''s type, in the .NET Framework version 2.0.'
- uid: System.Reflection.Emit.ConstructorBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: Attributes
  fullName: System.Reflection.Emit.ConstructorBuilder.Attributes
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 125
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the attributes for this constructor.
  syntax:
    content: public override MethodAttributes Attributes { get; }
    content.vb: Public Overrides ReadOnly Property Attributes As MethodAttributes
    parameters: []
    return:
      type: System.Reflection.MethodAttributes
      description: Returns the attributes for this constructor.
  overridden: System.Reflection.MethodBase.Attributes
- uid: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: GetMethodImplementationFlags()
  fullName: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 130
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the method implementation flags for this constructor.
  syntax:
    content: public override MethodImplAttributes GetMethodImplementationFlags()
    content.vb: Public Overrides Function GetMethodImplementationFlags As MethodImplAttributes
    return:
      type: System.Reflection.MethodImplAttributes
      description: The method implementation flags for this constructor.
  overridden: System.Reflection.MethodBase.GetMethodImplementationFlags
- uid: System.Reflection.Emit.ConstructorBuilder.MethodHandle
  id: MethodHandle
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: MethodHandle
  fullName: System.Reflection.Emit.ConstructorBuilder.MethodHandle
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 135
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the internal handle for the method. Use this handle to access the underlying metadata handle.
  syntax:
    content: public override RuntimeMethodHandle MethodHandle { get; }
    content.vb: Public Overrides ReadOnly Property MethodHandle As RuntimeMethodHandle
    parameters: []
    return:
      type: System.RuntimeMethodHandle
      description: Returns the internal handle for the method. Use this handle to access the underlying metadata handle.
  overridden: System.Reflection.MethodBase.MethodHandle
  exceptions:
  - type: System.NotSupportedException
    description: This property is not supported on this class.
- uid: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: Invoke(BindingFlags, Binder, Object[], CultureInfo)
  name.vb: Invoke(BindingFlags, Binder, Object(), CultureInfo)
  fullName: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)
  fullName.vb: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 143
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Invokes the constructor dynamically reflected by this instance on the given object, passing along the specified parameters, and under the constraints of the given binder.
  syntax:
    content: public override object Invoke(BindingFlags invokeAttr, Binder binder, object[] parameters, CultureInfo culture)
    content.vb: Public Overrides Function Invoke(invokeAttr As BindingFlags, binder As Binder, parameters As Object(), culture As CultureInfo) As Object
    parameters:
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from @'System.Reflection.BindingFlags', such as InvokeMethod, NonPublic, and so on.
    - id: binder
      type: System.Reflection.Binder
      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of MemberInfo objects using reflection. If binder is null, the default binder is used. See @'System.Reflection.Binder'.
    - id: parameters
      type: System.Object[]
      description: An argument list. This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked. If there are no parameters this should be null.
    - id: culture
      type: System.Globalization.CultureInfo
      description: An instance of @'System.Globalization.CultureInfo' used to govern the coercion of types. If this is null, the @'System.Globalization.CultureInfo' for the current thread is used. (For example, this is necessary to convert a @'System.String' that represents 1000 to a @'System.Double' value, since 1000 is represented differently by different cultures.)
    return:
      type: System.Object
      description: Returns an @'System.Object' that is the return value of the invoked constructor.
  overridden: System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported. You can retrieve the constructor using @'System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])' and call @'System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)' on the returned @'System.Reflection.ConstructorInfo'.
- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 151
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns all the custom attributes defined for this constructor.
  syntax:
    content: public override object[] GetCustomAttributes(bool inherit)
    content.vb: Public Overrides Function GetCustomAttributes(inherit As Boolean) As Object()
    parameters:
    - id: inherit
      type: System.Boolean
      description: Controls inheritance of custom attributes from base classes. This parameter is ignored.
    return:
      type: System.Object[]
      description: Returns an array of objects representing all the custom attributes of the constructor represented by this @'System.Reflection.Emit.ConstructorBuilder' instance.
  overridden: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported.
- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 156
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the custom attributes identified by the given type.
  syntax:
    content: public override object[] GetCustomAttributes(Type attributeType, bool inherit)
    content.vb: Public Overrides Function GetCustomAttributes(attributeType As Type, inherit As Boolean) As Object()
    parameters:
    - id: attributeType
      type: System.Type
      description: The custom attribute type.
    - id: inherit
      type: System.Boolean
      description: Controls inheritance of custom attributes from base classes. This parameter is ignored.
    return:
      type: System.Object[]
      description: Returns an array of type @'System.Object' representing the attributes of this constructor.
  overridden: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported.
- uid: System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: IsDefined(Type, Boolean)
  fullName: System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 161
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Checks if the specified custom attribute type is defined.
  syntax:
    content: public override bool IsDefined(Type attributeType, bool inherit)
    content.vb: Public Overrides Function IsDefined(attributeType As Type, inherit As Boolean) As Boolean
    parameters:
    - id: attributeType
      type: System.Type
      description: A custom attribute type.
    - id: inherit
      type: System.Boolean
      description: Controls inheritance of custom attributes from base classes. This parameter is ignored.
    return:
      type: System.Boolean
      description: true if the specified custom attribute type is defined; otherwise, false.
  overridden: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported. You can retrieve the constructor using @'System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])' and call @'System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)' on the returned @'System.Reflection.ConstructorInfo'.
- uid: System.Reflection.Emit.ConstructorBuilder.GetToken
  id: GetToken
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: GetToken()
  fullName: System.Reflection.Emit.ConstructorBuilder.GetToken()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 169
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the @'System.Reflection.Emit.MethodToken' that represents the token for this constructor.
  syntax:
    content: public MethodToken GetToken()
    content.vb: Public Function GetToken As MethodToken
    return:
      type: System.Reflection.Emit.MethodToken
      description: Returns the @'System.Reflection.Emit.MethodToken' of this constructor.
- uid: System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  id: DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: DefineParameter(Int32, ParameterAttributes, String)
  fullName: System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32, System.Reflection.ParameterAttributes, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 174
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a parameter of this constructor.
  syntax:
    content: public ParameterBuilder DefineParameter(int iSequence, ParameterAttributes attributes, string strParamName)
    content.vb: Public Function DefineParameter(iSequence As Integer, attributes As ParameterAttributes, strParamName As String) As ParameterBuilder
    parameters:
    - id: iSequence
      type: System.Int32
      description: The position of the parameter in the parameter list. Parameters are indexed beginning with the number 1 for the first parameter.
    - id: attributes
      type: System.Reflection.ParameterAttributes
      description: The attributes of the parameter.
    - id: strParamName
      type: System.String
      description: The name of the parameter. The name can be the null string.
    return:
      type: System.Reflection.Emit.ParameterBuilder
      description: Returns a ParameterBuilder object that represents the new parameter of this constructor.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: '*iSequence* is less than 0 (zero), or it is greater than the number of parameters of the constructor.'
  - type: System.InvalidOperationException
    description: The containing type has been created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])
  id: SetSymCustomAttribute(System.String,System.Byte[])
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: SetSymCustomAttribute(String, Byte[])
  name.vb: SetSymCustomAttribute(String, Byte())
  fullName: System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String, System.Byte[])
  fullName.vb: System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String, System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 185
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets this constructor's custom attribute associated with symbolic information.
  syntax:
    content: public void SetSymCustomAttribute(string name, byte[] data)
    content.vb: Public Sub SetSymCustomAttribute(name As String, data As Byte())
    parameters:
    - id: name
      type: System.String
      description: The name of the custom attribute.
    - id: data
      type: System.Byte[]
      description: The value of the custom attribute.
  exceptions:
  - type: System.InvalidOperationException
    description: The containing type has been created using @'System.Reflection.Emit.TypeBuilder.CreateType'.-or- The module does not have a symbol writer defined. For example, the module is not a debug module.
- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator
  id: GetILGenerator
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: GetILGenerator()
  fullName: System.Reflection.Emit.ConstructorBuilder.GetILGenerator()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 190
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets an @'System.Reflection.Emit.ILGenerator' for this constructor.
  syntax:
    content: public ILGenerator GetILGenerator()
    content.vb: Public Function GetILGenerator As ILGenerator
    return:
      type: System.Reflection.Emit.ILGenerator
      description: Returns an @'System.Reflection.Emit.ILGenerator' object for this constructor.
  exceptions:
  - type: System.InvalidOperationException
    description: The constructor is a default constructor.-or-The constructor has @'System.Reflection.MethodAttributes' or @'System.Reflection.MethodImplAttributes' flags indicating that it should not have a method body.
- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  id: GetILGenerator(System.Int32)
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: GetILGenerator(Int32)
  fullName: System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 198
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets an @'System.Reflection.Emit.ILGenerator' object, with the specified MSIL stream size, that can be used to build a method body for this constructor.
  syntax:
    content: public ILGenerator GetILGenerator(int streamSize)
    content.vb: Public Function GetILGenerator(streamSize As Integer) As ILGenerator
    parameters:
    - id: streamSize
      type: System.Int32
      description: The size of the MSIL stream, in bytes.
    return:
      type: System.Reflection.Emit.ILGenerator
      description: An @'System.Reflection.Emit.ILGenerator' for this constructor.
  exceptions:
  - type: System.InvalidOperationException
    description: The constructor is a default constructor.-or-The constructor has @'System.Reflection.MethodAttributes' or @'System.Reflection.MethodImplAttributes' flags indicating that it should not have a method body.
- uid: System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})
  id: SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)
  name.vb: SetMethodBody(Byte(), Int32, Byte(), IEnumerable(Of ExceptionHandler), IEnumerable(Of Int32))
  fullName: System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[], System.Int32, System.Byte[], System.Collections.Generic.IEnumerable<System.Reflection.Emit.ExceptionHandler>, System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte(), System.Int32, System.Byte(), System.Collections.Generic.IEnumerable(Of System.Reflection.Emit.ExceptionHandler), System.Collections.Generic.IEnumerable(Of System.Int32))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 207
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Creates the body of the constructor by using a specified byte array of Microsoft intermediate language (MSIL) instructions.
  syntax:
    content: public void SetMethodBody(byte[] il, int maxStack, byte[] localSignature, IEnumerable<ExceptionHandler> exceptionHandlers, IEnumerable<int> tokenFixups)
    content.vb: Public Sub SetMethodBody(il As Byte(), maxStack As Integer, localSignature As Byte(), exceptionHandlers As IEnumerable(Of ExceptionHandler), tokenFixups As IEnumerable(Of Integer))
    parameters:
    - id: il
      type: System.Byte[]
      description: An array that contains valid MSIL instructions.
    - id: maxStack
      type: System.Int32
      description: The maximum stack evaluation depth.
    - id: localSignature
      type: System.Byte[]
      description: An array of bytes that contain the serialized local variable structure. Specify null if the constructor has no local variables.
    - id: exceptionHandlers
      type: System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler}
      description: A collection that contains the exception handlers for the constructor. Specify null if the constructor has no exception handlers.
    - id: tokenFixups
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: A collection of values that represent offsets in *il*, each of which specifies the beginning of a token that may be modified. Specify null if the constructor has no tokens that have to be modified.
  exceptions:
  - type: System.ArgumentNullException
    description: '*il* is null.'
  - type: System.ArgumentOutOfRangeException
    description: '*maxStack* is negative.-or- One of *exceptionHandlers* specifies an offset outside of *il*.-or- One of *tokenFixups* specifies an offset that is outside the *il* array.'
  - type: System.InvalidOperationException
    description: The containing type was previously created using the @'System.Reflection.Emit.TypeBuilder.CreateType' method.-or- This method was called previously on this @'System.Reflection.Emit.ConstructorBuilder' object.
- uid: System.Reflection.Emit.ConstructorBuilder.CallingConvention
  id: CallingConvention
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: CallingConvention
  fullName: System.Reflection.Emit.ConstructorBuilder.CallingConvention
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 249
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a @'System.Reflection.CallingConventions' value that depends on whether the declaring type is generic.
  syntax:
    content: public override CallingConventions CallingConvention { get; }
    content.vb: Public Overrides ReadOnly Property CallingConvention As CallingConventions
    parameters: []
    return:
      type: System.Reflection.CallingConventions
      description: '@''System.Reflection.CallingConventions.HasThis'' if the declaring type is generic; otherwise, @''System.Reflection.CallingConventions.Standard''.'
  overridden: System.Reflection.MethodBase.CallingConvention
- uid: System.Reflection.Emit.ConstructorBuilder.GetModule
  id: GetModule
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: GetModule()
  fullName: System.Reflection.Emit.ConstructorBuilder.GetModule()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 260
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a reference to the module that contains this constructor.
  syntax:
    content: public Module GetModule()
    content.vb: Public Function GetModule As
    return:
      type: System.Reflection.Module
      description: The module that contains this constructor.
- uid: System.Reflection.Emit.ConstructorBuilder.ReturnType
  id: ReturnType
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: ReturnType
  fullName: System.Reflection.Emit.ConstructorBuilder.ReturnType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 266
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets null.
  syntax:
    content: public Type ReturnType { get; }
    content.vb: Public ReadOnly Property ReturnType As Type
    parameters: []
    return:
      type: System.Type
      description: Returns null.
- uid: System.Reflection.Emit.ConstructorBuilder.Signature
  id: Signature
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: Signature
  fullName: System.Reflection.Emit.ConstructorBuilder.Signature
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 278
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the signature of the field in the form of a string.
  syntax:
    content: public string Signature { get; }
    content.vb: Public ReadOnly Property Signature As String
    parameters: []
    return:
      type: System.String
      description: Returns the signature of the field.
- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
  fullName: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  fullName.vb: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 284
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a specified custom attribute blob.
  syntax:
    content: public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte blob representing the attributes.
  exceptions:
  - type: System.ArgumentNullException
    description: '*con* or *binaryAttribute* is null.'
- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 292
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a custom attribute builder.
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class to define the custom attribute.
  exceptions:
  - type: System.ArgumentNullException
    description: '*customBuilder* is null.'
- uid: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  id: SetImplementationFlags(System.Reflection.MethodImplAttributes)
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: SetImplementationFlags(MethodImplAttributes)
  fullName: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 297
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the method implementation flags for this constructor.
  syntax:
    content: public void SetImplementationFlags(MethodImplAttributes attributes)
    content.vb: Public Sub SetImplementationFlags(attributes As MethodImplAttributes)
    parameters:
    - id: attributes
      type: System.Reflection.MethodImplAttributes
      description: The method implementation flags.
  exceptions:
  - type: System.InvalidOperationException
    description: The containing type has been created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.ConstructorBuilder.InitLocals
  id: InitLocals
  parent: System.Reflection.Emit.ConstructorBuilder
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: InitLocals
  fullName: System.Reflection.Emit.ConstructorBuilder.InitLocals
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/ConstructorBuilder.cs
    startLine: 302
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets or sets whether the local variables in this constructor should be zero-initialized.
  syntax:
    content: public bool InitLocals { get; set; }
    content.vb: Public Property InitLocals As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Read/write. Gets or sets whether the local variables in this constructor should be zero-initialized.
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: MemberInfo
  fullName: System.Reflection.MemberInfo
  type: Class
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: MethodBase
  fullName: System.Reflection.MethodBase
  type: Class
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Reflection.ConstructorInfo.ConstructorName
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: ConstructorName
  fullName: System.Reflection.ConstructorInfo.ConstructorName
- uid: System.Reflection.ConstructorInfo.TypeConstructorName
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: TypeConstructorName
  fullName: System.Reflection.ConstructorInfo.TypeConstructorName
- uid: System.Reflection.ConstructorInfo.Equals(System.Object)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: Equals(Object)
  fullName: System.Reflection.ConstructorInfo.Equals(System.Object)
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo.Equals(System.Object)
    name: Equals
    fullName: System.Reflection.ConstructorInfo.Equals
    href: System.Reflection.ConstructorInfo.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.ConstructorInfo.Equals(System.Object)
    name: Equals
    fullName: System.Reflection.ConstructorInfo.Equals
    href: System.Reflection.ConstructorInfo.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Reflection.ConstructorInfo.GetHashCode
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: GetHashCode()
  fullName: System.Reflection.ConstructorInfo.GetHashCode()
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo.GetHashCode
    name: GetHashCode
    fullName: System.Reflection.ConstructorInfo.GetHashCode
    href: System.Reflection.ConstructorInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.ConstructorInfo.GetHashCode
    name: GetHashCode
    fullName: System.Reflection.ConstructorInfo.GetHashCode
    href: System.Reflection.ConstructorInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.ConstructorInfo.MemberType
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: MemberType
  fullName: System.Reflection.ConstructorInfo.MemberType
- uid: System.Reflection.ConstructorInfo.Invoke(System.Object[])
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: Invoke(Object[])
  name.vb: Invoke(Object())
  fullName: System.Reflection.ConstructorInfo.Invoke(System.Object[])
  fullName.vb: System.Reflection.ConstructorInfo.Invoke(System.Object())
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo.Invoke(System.Object[])
    name: Invoke
    fullName: System.Reflection.ConstructorInfo.Invoke
    href: System.Reflection.ConstructorInfo.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.ConstructorInfo.Invoke(System.Object[])
    name: Invoke
    fullName: System.Reflection.ConstructorInfo.Invoke
    href: System.Reflection.ConstructorInfo.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: GetMethodFromHandle(RuntimeMethodHandle)
  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
    name: GetMethodFromHandle
    fullName: System.Reflection.MethodBase.GetMethodFromHandle
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - uid: System.RuntimeMethodHandle
    name: RuntimeMethodHandle
    fullName: System.RuntimeMethodHandle
    href: System.RuntimeMethodHandle.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
    name: GetMethodFromHandle
    fullName: System.Reflection.MethodBase.GetMethodFromHandle
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - uid: System.RuntimeMethodHandle
    name: RuntimeMethodHandle
    fullName: System.RuntimeMethodHandle
    href: System.RuntimeMethodHandle.yml
  - name: )
    fullName: )
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)
  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle, System.RuntimeTypeHandle)
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
    name: GetMethodFromHandle
    fullName: System.Reflection.MethodBase.GetMethodFromHandle
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - uid: System.RuntimeMethodHandle
    name: RuntimeMethodHandle
    fullName: System.RuntimeMethodHandle
    href: System.RuntimeMethodHandle.yml
  - name: ', '
    fullName: ', '
  - uid: System.RuntimeTypeHandle
    name: RuntimeTypeHandle
    fullName: System.RuntimeTypeHandle
    href: System.RuntimeTypeHandle.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
    name: GetMethodFromHandle
    fullName: System.Reflection.MethodBase.GetMethodFromHandle
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - uid: System.RuntimeMethodHandle
    name: RuntimeMethodHandle
    fullName: System.RuntimeMethodHandle
    href: System.RuntimeMethodHandle.yml
  - name: ', '
    fullName: ', '
  - uid: System.RuntimeTypeHandle
    name: RuntimeTypeHandle
    fullName: System.RuntimeTypeHandle
    href: System.RuntimeTypeHandle.yml
  - name: )
    fullName: )
- uid: System.Reflection.MethodBase.GetCurrentMethod
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: GetCurrentMethod()
  fullName: System.Reflection.MethodBase.GetCurrentMethod()
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetCurrentMethod
    name: GetCurrentMethod
    fullName: System.Reflection.MethodBase.GetCurrentMethod
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetCurrentMethod
    name: GetCurrentMethod
    fullName: System.Reflection.MethodBase.GetCurrentMethod
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.MethodBase.MethodImplementationFlags
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: MethodImplementationFlags
  fullName: System.Reflection.MethodBase.MethodImplementationFlags
- uid: System.Reflection.MethodBase.GetGenericArguments
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: GetGenericArguments()
  fullName: System.Reflection.MethodBase.GetGenericArguments()
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetGenericArguments
    name: GetGenericArguments
    fullName: System.Reflection.MethodBase.GetGenericArguments
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetGenericArguments
    name: GetGenericArguments
    fullName: System.Reflection.MethodBase.GetGenericArguments
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.MethodBase.IsGenericMethodDefinition
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsGenericMethodDefinition
  fullName: System.Reflection.MethodBase.IsGenericMethodDefinition
- uid: System.Reflection.MethodBase.ContainsGenericParameters
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: ContainsGenericParameters
  fullName: System.Reflection.MethodBase.ContainsGenericParameters
- uid: System.Reflection.MethodBase.IsGenericMethod
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsGenericMethod
  fullName: System.Reflection.MethodBase.IsGenericMethod
- uid: System.Reflection.MethodBase.IsSecurityCritical
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsSecurityCritical
  fullName: System.Reflection.MethodBase.IsSecurityCritical
- uid: System.Reflection.MethodBase.IsSecuritySafeCritical
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsSecuritySafeCritical
  fullName: System.Reflection.MethodBase.IsSecuritySafeCritical
- uid: System.Reflection.MethodBase.IsSecurityTransparent
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsSecurityTransparent
  fullName: System.Reflection.MethodBase.IsSecurityTransparent
- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: Invoke(Object, Object[])
  name.vb: Invoke(Object, Object())
  fullName: System.Reflection.MethodBase.Invoke(System.Object, System.Object[])
  fullName.vb: System.Reflection.MethodBase.Invoke(System.Object, System.Object())
  spec.csharp:
  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
    name: Invoke
    fullName: System.Reflection.MethodBase.Invoke
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
    name: Invoke
    fullName: System.Reflection.MethodBase.Invoke
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Reflection.MethodBase.IsPublic
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsPublic
  fullName: System.Reflection.MethodBase.IsPublic
- uid: System.Reflection.MethodBase.IsPrivate
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsPrivate
  fullName: System.Reflection.MethodBase.IsPrivate
- uid: System.Reflection.MethodBase.IsFamily
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsFamily
  fullName: System.Reflection.MethodBase.IsFamily
- uid: System.Reflection.MethodBase.IsAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsAssembly
  fullName: System.Reflection.MethodBase.IsAssembly
- uid: System.Reflection.MethodBase.IsFamilyAndAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsFamilyAndAssembly
  fullName: System.Reflection.MethodBase.IsFamilyAndAssembly
- uid: System.Reflection.MethodBase.IsFamilyOrAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsFamilyOrAssembly
  fullName: System.Reflection.MethodBase.IsFamilyOrAssembly
- uid: System.Reflection.MethodBase.IsStatic
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsStatic
  fullName: System.Reflection.MethodBase.IsStatic
- uid: System.Reflection.MethodBase.IsFinal
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsFinal
  fullName: System.Reflection.MethodBase.IsFinal
- uid: System.Reflection.MethodBase.IsVirtual
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsVirtual
  fullName: System.Reflection.MethodBase.IsVirtual
- uid: System.Reflection.MethodBase.IsHideBySig
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsHideBySig
  fullName: System.Reflection.MethodBase.IsHideBySig
- uid: System.Reflection.MethodBase.IsAbstract
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsAbstract
  fullName: System.Reflection.MethodBase.IsAbstract
- uid: System.Reflection.MethodBase.IsSpecialName
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsSpecialName
  fullName: System.Reflection.MethodBase.IsSpecialName
- uid: System.Reflection.MethodBase.IsConstructor
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: IsConstructor
  fullName: System.Reflection.MethodBase.IsConstructor
- uid: System.Reflection.MethodBase.GetMethodBody
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: GetMethodBody()
  fullName: System.Reflection.MethodBase.GetMethodBody()
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetMethodBody
    name: GetMethodBody
    fullName: System.Reflection.MethodBase.GetMethodBody
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetMethodBody
    name: GetMethodBody
    fullName: System.Reflection.MethodBase.GetMethodBody
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: CustomAttributes
  fullName: System.Reflection.MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.GetCustomAttributesData
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: GetCustomAttributesData()
  fullName: System.Reflection.MemberInfo.GetCustomAttributesData()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributesData
    name: GetCustomAttributesData
    fullName: System.Reflection.MemberInfo.GetCustomAttributesData
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributesData
    name: GetCustomAttributesData
    fullName: System.Reflection.MemberInfo.GetCustomAttributesData
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.MetadataToken
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: MetadataToken
  fullName: System.Reflection.MemberInfo.MetadataToken
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  type: Namespace
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Reflection.MemberInfo.Module
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: Module
  fullName: System.Reflection.MemberInfo.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Module.yml
  name: Module
  fullName: System.Reflection.Module
  type: Class
- uid: System.Reflection.MemberInfo.ReflectedType
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: ReflectedType
  fullName: System.Reflection.MemberInfo.ReflectedType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System.Reflection.MemberInfo.DeclaringType
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: DeclaringType
  fullName: System.Reflection.MemberInfo.DeclaringType
- uid: System.Reflection.MemberInfo.Name
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: Name
  fullName: System.Reflection.MemberInfo.Name
- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  name.vb: Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)
  fullName: System.Reflection.MethodBase.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)
  fullName.vb: System.Reflection.MethodBase.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
    name: Invoke
    fullName: System.Reflection.MethodBase.Invoke
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    href: System.Globalization.CultureInfo.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
    name: Invoke
    fullName: System.Reflection.MethodBase.Invoke
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    href: System.Globalization.CultureInfo.yml
  - name: )
    fullName: )
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: true
  name: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Binder.yml
  name: Binder
  fullName: System.Reflection.Binder
  type: Class
- uid: System.Object[]
  isExternal: true
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Reflection.MethodBase.GetParameters
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: GetParameters()
  fullName: System.Reflection.MethodBase.GetParameters()
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetParameters
    name: GetParameters
    fullName: System.Reflection.MethodBase.GetParameters
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetParameters
    name: GetParameters
    fullName: System.Reflection.MethodBase.GetParameters
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.ParameterInfo[]
  isExternal: false
  href: System.Reflection.ParameterInfo.yml
  name: ParameterInfo[]
  name.vb: ParameterInfo()
  fullName: System.Reflection.ParameterInfo[]
  fullName.vb: System.Reflection.ParameterInfo()
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    href: System.Reflection.ParameterInfo.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    href: System.Reflection.ParameterInfo.yml
  - name: ()
    fullName: ()
- uid: System.Reflection.MethodBase.Attributes
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: Attributes
  fullName: System.Reflection.MethodBase.Attributes
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.MethodBase.GetMethodImplementationFlags
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: GetMethodImplementationFlags()
  fullName: System.Reflection.MethodBase.GetMethodImplementationFlags()
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetMethodImplementationFlags
    name: GetMethodImplementationFlags
    fullName: System.Reflection.MethodBase.GetMethodImplementationFlags
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetMethodImplementationFlags
    name: GetMethodImplementationFlags
    fullName: System.Reflection.MethodBase.GetMethodImplementationFlags
    href: System.Reflection.MethodBase.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Reflection.MethodBase.MethodHandle
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: MethodHandle
  fullName: System.Reflection.MethodBase.MethodHandle
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: false
  href: System.RuntimeMethodHandle.yml
  name: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
  type: Struct
- uid: System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: Invoke(BindingFlags, Binder, Object[], CultureInfo)
  name.vb: Invoke(BindingFlags, Binder, Object(), CultureInfo)
  fullName: System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)
  fullName.vb: System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
    name: Invoke
    fullName: System.Reflection.ConstructorInfo.Invoke
    href: System.Reflection.ConstructorInfo.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    href: System.Globalization.CultureInfo.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
    name: Invoke
    fullName: System.Reflection.ConstructorInfo.Invoke
    href: System.Reflection.ConstructorInfo.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    href: System.Globalization.CultureInfo.yml
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: GetCustomAttributes(Boolean)
  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: IsDefined(Type, Boolean)
  fullName: System.Reflection.MemberInfo.IsDefined(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.MemberInfo.IsDefined
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.MemberInfo.IsDefined
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Reflection.Emit.MethodToken
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.MethodToken.yml
  name: MethodToken
  fullName: System.Reflection.Emit.MethodToken
  type: Struct
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: true
  name: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Reflection.Emit.ParameterBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.ParameterBuilder.yml
  name: ParameterBuilder
  fullName: System.Reflection.Emit.ParameterBuilder
  type: Class
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Reflection.Emit.ILGenerator
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.ILGenerator.yml
  name: ILGenerator
  fullName: System.Reflection.Emit.ILGenerator
  type: Class
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<ExceptionHandler>
  name.vb: IEnumerable(Of ExceptionHandler)
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Emit.ExceptionHandler>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Emit.ExceptionHandler)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - uid: System.Reflection.Emit.ExceptionHandler
    name: ExceptionHandler
    fullName: System.Reflection.Emit.ExceptionHandler
    href: System.Reflection.Emit.ExceptionHandler.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Emit.ExceptionHandler
    name: ExceptionHandler
    fullName: System.Reflection.Emit.ExceptionHandler
    href: System.Reflection.Emit.ExceptionHandler.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  name.vb: IEnumerable(Of Int32)
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Reflection.MethodBase.CallingConvention
  parent: System.Reflection.MethodBase
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: CallingConvention
  fullName: System.Reflection.MethodBase.CallingConvention
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.CallingConventions.yml
  name: CallingConventions
  fullName: System.Reflection.CallingConventions
  type: Enum
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.CustomAttributeBuilder.yml
  name: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
  type: Class
