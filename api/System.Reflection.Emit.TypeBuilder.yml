items:
- uid: System.Reflection.Emit.TypeBuilder
  id: TypeBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)
  - System.Reflection.Emit.TypeBuilder.Assembly
  - System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName
  - System.Reflection.Emit.TypeBuilder.BaseType
  - System.Reflection.Emit.TypeBuilder.CreateType
  - System.Reflection.Emit.TypeBuilder.CreateTypeInfo
  - System.Reflection.Emit.TypeBuilder.DeclaringMethod
  - System.Reflection.Emit.TypeBuilder.DeclaringType
  - System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)
  - System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])
  - System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)
  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  - System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  - System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.TypeBuilder.DefineTypeInitializer
  - System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  - System.Reflection.Emit.TypeBuilder.FullName
  - System.Reflection.Emit.TypeBuilder.GenericParameterAttributes
  - System.Reflection.Emit.TypeBuilder.GenericParameterPosition
  - System.Reflection.Emit.TypeBuilder.GetAttributeFlagsImpl
  - System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type,System.Reflection.ConstructorInfo)
  - System.Reflection.Emit.TypeBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.TypeBuilder.GetConstructors(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Emit.TypeBuilder.GetElementType
  - System.Reflection.Emit.TypeBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetEvents
  - System.Reflection.Emit.TypeBuilder.GetEvents(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetField(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetField(System.Type,System.Reflection.FieldInfo)
  - System.Reflection.Emit.TypeBuilder.GetFields(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetGenericArguments
  - System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition
  - System.Reflection.Emit.TypeBuilder.GetInterface(System.String,System.Boolean)
  - System.Reflection.Emit.TypeBuilder.GetInterfaceMap(System.Type)
  - System.Reflection.Emit.TypeBuilder.GetInterfaces
  - System.Reflection.Emit.TypeBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetMembers(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetMethod(System.Type,System.Reflection.MethodInfo)
  - System.Reflection.Emit.TypeBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.TypeBuilder.GetMethods(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetProperties(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.TypeBuilder.GUID
  - System.Reflection.Emit.TypeBuilder.HasElementTypeImpl
  - System.Reflection.Emit.TypeBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Reflection.Emit.TypeBuilder.IsArrayImpl
  - System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  - System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Type)
  - System.Reflection.Emit.TypeBuilder.IsByRefImpl
  - System.Reflection.Emit.TypeBuilder.IsCOMObjectImpl
  - System.Reflection.Emit.TypeBuilder.IsConstructedGenericType
  - System.Reflection.Emit.TypeBuilder.IsCreated
  - System.Reflection.Emit.TypeBuilder.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Emit.TypeBuilder.IsGenericParameter
  - System.Reflection.Emit.TypeBuilder.IsGenericType
  - System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition
  - System.Reflection.Emit.TypeBuilder.IsPointerImpl
  - System.Reflection.Emit.TypeBuilder.IsPrimitiveImpl
  - System.Reflection.Emit.TypeBuilder.IsSecurityCritical
  - System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical
  - System.Reflection.Emit.TypeBuilder.IsSecurityTransparent
  - System.Reflection.Emit.TypeBuilder.IsSubclassOf(System.Type)
  - System.Reflection.Emit.TypeBuilder.MakeArrayType
  - System.Reflection.Emit.TypeBuilder.MakeArrayType(System.Int32)
  - System.Reflection.Emit.TypeBuilder.MakeByRefType
  - System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])
  - System.Reflection.Emit.TypeBuilder.MakePointerType
  - System.Reflection.Emit.TypeBuilder.Module
  - System.Reflection.Emit.TypeBuilder.Name
  - System.Reflection.Emit.TypeBuilder.Namespace
  - System.Reflection.Emit.TypeBuilder.PackingSize
  - System.Reflection.Emit.TypeBuilder.ReflectedType
  - System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.TypeBuilder.SetParent(System.Type)
  - System.Reflection.Emit.TypeBuilder.Size
  - System.Reflection.Emit.TypeBuilder.ToString
  - System.Reflection.Emit.TypeBuilder.TypeHandle
  - System.Reflection.Emit.TypeBuilder.TypeToken
  - System.Reflection.Emit.TypeBuilder.UnderlyingSystemType
  - System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize
  href: System.Reflection.Emit.TypeBuilder.yml
  name: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 36
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines and creates new instances of classes during run time.
  syntax:
    content: 'public sealed class TypeBuilder : TypeInfo, ICustomAttributeProvider, _MemberInfo, _Type, IReflect, IReflectableType, _TypeBuilder'
    content.vb: Public NotInheritable Class TypeBuilder Inherits TypeInfo Implements ICustomAttributeProvider, _MemberInfo, _Type, IReflect, IReflectableType, _TypeBuilder
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Type
  - System.Reflection.TypeInfo
  implements:
  - System.Reflection.ICustomAttributeProvider
  - System.Runtime.InteropServices._MemberInfo
  - System.Runtime.InteropServices._Type
  - System.Reflection.IReflect
  - System.Reflection.IReflectableType
  - System.Runtime.InteropServices._TypeBuilder
  inheritedMembers:
  - System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
  - System.Reflection.TypeInfo.AsType
  - System.Reflection.TypeInfo.GenericTypeParameters
  - System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
  - System.Reflection.TypeInfo.GetDeclaredField(System.String)
  - System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
  - System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
  - System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
  - System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
  - System.Reflection.TypeInfo.DeclaredConstructors
  - System.Reflection.TypeInfo.DeclaredEvents
  - System.Reflection.TypeInfo.DeclaredFields
  - System.Reflection.TypeInfo.DeclaredMembers
  - System.Reflection.TypeInfo.DeclaredMethods
  - System.Reflection.TypeInfo.DeclaredNestedTypes
  - System.Reflection.TypeInfo.DeclaredProperties
  - System.Reflection.TypeInfo.ImplementedInterfaces
  - System.Type.FilterAttribute
  - System.Type.FilterName
  - System.Type.FilterNameIgnoreCase
  - System.Type.Missing
  - System.Type.Delimiter
  - System.Type.EmptyTypes
  - System.Type.MemberType
  - System.Type.GetType(System.String,System.Boolean,System.Boolean)
  - System.Type.GetType(System.String,System.Boolean)
  - System.Type.GetType(System.String)
  - System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
  - System.Type.StructLayoutAttribute
  - System.Type.GetTypeFromProgID(System.String)
  - System.Type.GetTypeFromProgID(System.String,System.Boolean)
  - System.Type.GetTypeFromProgID(System.String,System.String)
  - System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
  - System.Type.GetTypeFromCLSID(System.Guid)
  - System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
  - System.Type.GetTypeFromCLSID(System.Guid,System.String)
  - System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
  - System.Type.GetTypeCode(System.Type)
  - System.Type.GetTypeCodeImpl
  - System.Type.DefaultBinder
  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  - System.Type.GetTypeHandle(System.Object)
  - System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  - System.Type.GetArrayRank
  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetConstructor(System.Type[])
  - System.Type.GetConstructors
  - System.Type.TypeInitializer
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethod(System.String,System.Type[])
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Type.GetMethod(System.String)
  - System.Type.GetMethods
  - System.Type.GetField(System.String)
  - System.Type.GetFields
  - System.Type.GetInterface(System.String)
  - System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - System.Type.GetEvent(System.String)
  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Type.GetProperty(System.String,System.Type,System.Type[])
  - System.Type.GetProperty(System.String,System.Type[])
  - System.Type.GetProperty(System.String,System.Type)
  - System.Type.GetProperty(System.String)
  - System.Type.GetProperties
  - System.Type.GetNestedTypes
  - System.Type.GetNestedType(System.String)
  - System.Type.GetMember(System.String)
  - System.Type.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Type.GetMembers
  - System.Type.GetDefaultMembers
  - System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  - System.Type.IsNested
  - System.Type.Attributes
  - System.Type.IsVisible
  - System.Type.IsNotPublic
  - System.Type.IsPublic
  - System.Type.IsNestedPublic
  - System.Type.IsNestedPrivate
  - System.Type.IsNestedFamily
  - System.Type.IsNestedAssembly
  - System.Type.IsNestedFamANDAssem
  - System.Type.IsNestedFamORAssem
  - System.Type.IsAutoLayout
  - System.Type.IsLayoutSequential
  - System.Type.IsExplicitLayout
  - System.Type.IsClass
  - System.Type.IsInterface
  - System.Type.IsValueType
  - System.Type.IsAbstract
  - System.Type.IsSealed
  - System.Type.IsEnum
  - System.Type.IsSpecialName
  - System.Type.IsImport
  - System.Type.IsSerializable
  - System.Type.IsAnsiClass
  - System.Type.IsUnicodeClass
  - System.Type.IsAutoClass
  - System.Type.IsArray
  - System.Type.ContainsGenericParameters
  - System.Type.GetGenericParameterConstraints
  - System.Type.IsByRef
  - System.Type.IsPointer
  - System.Type.IsPrimitive
  - System.Type.IsCOMObject
  - System.Type.HasElementType
  - System.Type.IsContextful
  - System.Type.IsMarshalByRef
  - System.Type.IsValueTypeImpl
  - System.Type.IsContextfulImpl
  - System.Type.IsMarshalByRefImpl
  - System.Type.GenericTypeArguments
  - System.Type.GetEnumNames
  - System.Type.GetEnumValues
  - System.Type.GetEnumUnderlyingType
  - System.Type.IsEnumDefined(System.Object)
  - System.Type.GetEnumName(System.Object)
  - System.Type.IsInstanceOfType(System.Object)
  - System.Type.IsEquivalentTo(System.Type)
  - System.Type.GetTypeArray(System.Object[])
  - System.Type.Equals(System.Object)
  - System.Type.Equals(System.Type)
  - System.Type.GetHashCode
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.MetadataToken
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  id: IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsAssignableFrom(TypeInfo)
  fullName: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 42
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates whether a specified @'System.Reflection.TypeInfo' object can be assigned to this object.
  syntax:
    content: public override bool IsAssignableFrom(TypeInfo typeInfo)
    content.vb: Public Overrides Function IsAssignableFrom(typeInfo As TypeInfo) As Boolean
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
      description: The object to test.
    return:
      type: System.Boolean
      description: true if *typeInfo* can be assigned to this object; otherwise, false.
  overridden: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)
- uid: System.Reflection.Emit.TypeBuilder.GetMethod(System.Type,System.Reflection.MethodInfo)
  id: GetMethod(System.Type,System.Reflection.MethodInfo)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetMethod(Type, MethodInfo)
  fullName: System.Reflection.Emit.TypeBuilder.GetMethod(System.Type, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 93
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the method of the specified constructed generic type that corresponds to the specified method of the generic type definition.
  syntax:
    content: public static MethodInfo GetMethod(Type type, MethodInfo method)
    content.vb: Public Shared Function GetMethod(type As Type, method As MethodInfo) As MethodInfo
    parameters:
    - id: type
      type: System.Type
      description: The constructed generic type whose method is returned.
    - id: method
      type: System.Reflection.MethodInfo
      description: A method on the generic type definition of *type*, which specifies which method of *type* to return.
    return:
      type: System.Reflection.MethodInfo
      description: A @'System.Reflection.MethodInfo' object that represents the method of *type* corresponding to *method*, which specifies a method belonging to the generic type definition of *type*.
  exceptions:
  - type: System.ArgumentException
    description: '*method* is a generic method that is not a generic method definition.-or-*type* does not represent a generic type.-or-*type* is not of type @''System.Reflection.Emit.TypeBuilder''.-or-The declaring type of *method* is not a generic type definition. -or-The declaring type of *method* is not the generic type definition of *type*.'
- uid: System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type,System.Reflection.ConstructorInfo)
  id: GetConstructor(System.Type,System.Reflection.ConstructorInfo)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetConstructor(Type, ConstructorInfo)
  fullName: System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type, System.Reflection.ConstructorInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 126
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the constructor of the specified constructed generic type that corresponds to the specified constructor of the generic type definition.
  syntax:
    content: public static ConstructorInfo GetConstructor(Type type, ConstructorInfo constructor)
    content.vb: Public Shared Function GetConstructor(type As Type, constructor As ConstructorInfo) As ConstructorInfo
    parameters:
    - id: type
      type: System.Type
      description: The constructed generic type whose constructor is returned.
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: A constructor on the generic type definition of *type*, which specifies which constructor of *type* to return.
    return:
      type: System.Reflection.ConstructorInfo
      description: A @'System.Reflection.ConstructorInfo' object that represents the constructor of *type* corresponding to *constructor*, which specifies a constructor belonging to the generic type definition of *type*.
  exceptions:
  - type: System.ArgumentException
    description: '*type* does not represent a generic type. -or-*type* is not of type @''System.Reflection.Emit.TypeBuilder''.-or-The declaring type of *constructor* is not a generic type definition. -or-The declaring type of *constructor* is not the generic type definition of *type*.'
- uid: System.Reflection.Emit.TypeBuilder.GetField(System.Type,System.Reflection.FieldInfo)
  id: GetField(System.Type,System.Reflection.FieldInfo)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetField(Type, FieldInfo)
  fullName: System.Reflection.Emit.TypeBuilder.GetField(System.Type, System.Reflection.FieldInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 147
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the field of the specified constructed generic type that corresponds to the specified field of the generic type definition.
  syntax:
    content: public static FieldInfo GetField(Type type, FieldInfo field)
    content.vb: Public Shared Function GetField(type As Type, field As FieldInfo) As FieldInfo
    parameters:
    - id: type
      type: System.Type
      description: The constructed generic type whose field is returned.
    - id: field
      type: System.Reflection.FieldInfo
      description: A field on the generic type definition of *type*, which specifies which field of *type* to return.
    return:
      type: System.Reflection.FieldInfo
      description: A @'System.Reflection.FieldInfo' object that represents the field of *type* corresponding to *field*, which specifies a field belonging to the generic type definition of *type*.
  exceptions:
  - type: System.ArgumentException
    description: '*type* does not represent a generic type. -or-*type* is not of type @''System.Reflection.Emit.TypeBuilder''.-or-The declaring type of *field* is not a generic type definition. -or-The declaring type of *field* is not the generic type definition of *type*.'
- uid: System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize
  id: UnspecifiedTypeSize
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: UnspecifiedTypeSize
  fullName: System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize
  type: Field
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 171
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Represents that total size for the type is not specified.
  syntax:
    content: public const int UnspecifiedTypeSize
    content.vb: Public Const UnspecifiedTypeSize As Integer = 0
- uid: System.Reflection.Emit.TypeBuilder.IsCreated
  id: IsCreated
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsCreated()
  fullName: System.Reflection.Emit.TypeBuilder.IsCreated()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 908
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a value that indicates whether the current dynamic type has been created.
  syntax:
    content: public bool IsCreated()
    content.vb: Public Function IsCreated As Boolean
    return:
      type: System.Boolean
      description: true if the @'System.Reflection.Emit.TypeBuilder.CreateType' method has been called; otherwise, false.
- uid: System.Reflection.Emit.TypeBuilder.ToString
  id: ToString
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: ToString()
  fullName: System.Reflection.Emit.TypeBuilder.ToString()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 998
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the name of the type excluding the namespace.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: Read-only. The name of the type excluding the namespace.
  overridden: System.Type.ToString
- uid: System.Reflection.Emit.TypeBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DeclaringType
  fullName: System.Reflection.Emit.TypeBuilder.DeclaringType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1006
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the type that declared this type.
  syntax:
    content: public override Type DeclaringType { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
    parameters: []
    return:
      type: System.Type
      description: Read-only. The type that declared this type.
  overridden: System.Type.DeclaringType
- uid: System.Reflection.Emit.TypeBuilder.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: ReflectedType
  fullName: System.Reflection.Emit.TypeBuilder.ReflectedType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1011
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the type that was used to obtain this type.
  syntax:
    content: public override Type ReflectedType { get; }
    content.vb: Public Overrides ReadOnly Property ReflectedType As Type
    parameters: []
    return:
      type: System.Type
      description: Read-only. The type that was used to obtain this type.
  overridden: System.Type.ReflectedType
- uid: System.Reflection.Emit.TypeBuilder.Name
  id: Name
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: Name
  fullName: System.Reflection.Emit.TypeBuilder.Name
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1018
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the name of this type.
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: Read-only. Retrieves the @'System.String' name of this type.
  overridden: System.Reflection.MemberInfo.Name
- uid: System.Reflection.Emit.TypeBuilder.Module
  id: Module
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: Module
  fullName: System.Reflection.Emit.TypeBuilder.Module
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1023
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the dynamic module that contains this type definition.
  syntax:
    content: public override Module Module { get; }
    content.vb: Public Overrides ReadOnly Property Module As
    parameters: []
    return:
      type: System.Reflection.Module
      description: Read-only. Retrieves the dynamic module that contains this type definition.
  overridden: System.Type.Module
- uid: System.Reflection.Emit.TypeBuilder.GUID
  id: GUID
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GUID
  fullName: System.Reflection.Emit.TypeBuilder.GUID
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1036
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the GUID of this type.
  syntax:
    content: public override Guid GUID { get; }
    content.vb: Public Overrides ReadOnly Property GUID As Guid
    parameters: []
    return:
      type: System.Guid
      description: Read-only. Retrieves the GUID of this type
  overridden: System.Type.GUID
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  name.vb: InvokeMember(String, BindingFlags, Binder, Object, Object(), ParameterModifier(), CultureInfo, String())
  fullName: System.Reflection.Emit.TypeBuilder.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object(), System.Reflection.ParameterModifier(), System.Globalization.CultureInfo, System.String())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1048
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Invokes the specified member. The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.
  syntax:
    content: public override object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, object[] args, ParameterModifier[] modifiers, CultureInfo culture, string[] namedParameters)
    content.vb: Public Overrides Function InvokeMember(name As String, invokeAttr As BindingFlags, binder As Binder, target As Object, args As Object(), modifiers As ParameterModifier(), culture As CultureInfo, namedParameters As String()) As Object
    parameters:
    - id: name
      type: System.String
      description: The name of the member to invoke. This can be a constructor, method, property, or field. A suitable invocation attribute must be specified. Note that it is possible to invoke the default member of a class by passing an empty string as the name of the member.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: The invocation attribute. This must be a bit flag from BindingFlags.
    - id: binder
      type: System.Reflection.Binder
      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of MemberInfo objects using reflection. If binder is null, the default binder is used. See @'System.Reflection.Binder'.
    - id: target
      type: System.Object
      description: The object on which to invoke the specified member. If the member is static, this parameter is ignored.
    - id: args
      type: System.Object[]
      description: An argument list. This is an array of Objects that contains the number, order, and type of the parameters of the member to be invoked. If there are no parameters this should be null.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: An array of the same length as *args* with elements that represent the attributes associated with the arguments of the member to be invoked. A parameter has attributes associated with it in the metadata. They are used by various interoperability services. See the metadata specs for more details.
    - id: culture
      type: System.Globalization.CultureInfo
      description: An instance of CultureInfo used to govern the coercion of types. If this is null, the CultureInfo for the current thread is used. (Note that this is necessary to, for example, convert a String that represents 1000 to a Double value, since 1000 is represented differently by different cultures.)
    - id: namedParameters
      type: System.String[]
      description: Each parameter in the *namedParameters* array gets the value in the corresponding element in the *args* array. If the length of *args* is greater than the length of *namedParameters*, the remaining argument values are passed in order.
    return:
      type: System.Object
      description: Returns the return value of the invoked member.
  overridden: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.Assembly
  id: Assembly
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: Assembly
  fullName: System.Reflection.Emit.TypeBuilder.Assembly
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1058
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the dynamic assembly that contains this type definition.
  syntax:
    content: public override Assembly Assembly { get; }
    content.vb: Public Overrides ReadOnly Property Assembly As Assembly
    parameters: []
    return:
      type: System.Reflection.Assembly
      description: Read-only. Retrieves the dynamic assembly that contains this type definition.
  overridden: System.Type.Assembly
- uid: System.Reflection.Emit.TypeBuilder.TypeHandle
  id: TypeHandle
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: TypeHandle
  fullName: System.Reflection.Emit.TypeBuilder.TypeHandle
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1063
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Not supported in dynamic modules.
  syntax:
    content: public override RuntimeTypeHandle TypeHandle { get; }
    content.vb: Public Overrides ReadOnly Property TypeHandle As RuntimeTypeHandle
    parameters: []
    return:
      type: System.RuntimeTypeHandle
      description: Read-only.
  overridden: System.Type.TypeHandle
  exceptions:
  - type: System.NotSupportedException
    description: Not supported in dynamic modules.
- uid: System.Reflection.Emit.TypeBuilder.FullName
  id: FullName
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: FullName
  fullName: System.Reflection.Emit.TypeBuilder.FullName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1069
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the full path of this type.
  syntax:
    content: public override string FullName { get; }
    content.vb: Public Overrides ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
      description: Read-only. Retrieves the full path of this type.
  overridden: System.Type.FullName
- uid: System.Reflection.Emit.TypeBuilder.Namespace
  id: Namespace
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: Namespace
  fullName: System.Reflection.Emit.TypeBuilder.Namespace
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1080
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the namespace where this TypeBuilder is defined.
  syntax:
    content: public override string Namespace { get; }
    content.vb: Public Overrides ReadOnly Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: Read-only. Retrieves the namespace where this TypeBuilder is defined.
  overridden: System.Type.Namespace
- uid: System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: AssemblyQualifiedName
  fullName: System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1085
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the full name of this type qualified by the display name of the assembly.
  syntax:
    content: public override string AssemblyQualifiedName { get; }
    content.vb: Public Overrides ReadOnly Property AssemblyQualifiedName As String
    parameters: []
    return:
      type: System.String
      description: Read-only. The full name of this type qualified by the display name of the assembly.
  overridden: System.Type.AssemblyQualifiedName
- uid: System.Reflection.Emit.TypeBuilder.BaseType
  id: BaseType
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: BaseType
  fullName: System.Reflection.Emit.TypeBuilder.BaseType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1093
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the base type of this type.
  syntax:
    content: public override Type BaseType { get; }
    content.vb: Public Overrides ReadOnly Property BaseType As Type
    parameters: []
    return:
      type: System.Type
      description: Read-only. Retrieves the base type of this type.
  overridden: System.Type.BaseType
- uid: System.Reflection.Emit.TypeBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  name.vb: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  fullName: System.Reflection.Emit.TypeBuilder.GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1098
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected override ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
    content.vb: Protected Overrides Function GetConstructorImpl(bindingAttr As BindingFlags, binder As Binder, callConvention As CallingConventions, types As Type(), modifiers As ParameterModifier()) As ConstructorInfo
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: callConvention
      type: System.Reflection.CallingConventions
    - id: types
      type: System.Type[]
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
    return:
      type: System.Reflection.ConstructorInfo
  overridden: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Reflection.Emit.TypeBuilder.GetConstructors(System.Reflection.BindingFlags)
  id: GetConstructors(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetConstructors(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetConstructors(System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1108
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns an array of @'System.Reflection.ConstructorInfo' objects representing the public and non-public constructors defined for this class, as specified.
  syntax:
    content: public override ConstructorInfo[] GetConstructors(BindingFlags bindingAttr)
    content.vb: Public Overrides Function GetConstructors(bindingAttr As BindingFlags) As ConstructorInfo()
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from @'System.Reflection.BindingFlags' as in InvokeMethod, NonPublic, and so on.
    return:
      type: System.Reflection.ConstructorInfo[]
      description: Returns an array of @'System.Reflection.ConstructorInfo' objects representing the specified constructors defined for this class. If no constructors are defined, an empty array is returned.
  overridden: System.Type.GetConstructors(System.Reflection.BindingFlags)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  name.vb: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  fullName: System.Reflection.Emit.TypeBuilder.GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1118
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected override MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
    content.vb: Protected Overrides Function GetMethodImpl(name As String, bindingAttr As BindingFlags, binder As Binder, callConvention As CallingConventions, types As Type(), modifiers As ParameterModifier()) As MethodInfo
    parameters:
    - id: name
      type: System.String
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: callConvention
      type: System.Reflection.CallingConventions
    - id: types
      type: System.Type[]
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
    return:
      type: System.Reflection.MethodInfo
  overridden: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Reflection.Emit.TypeBuilder.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetMethods(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetMethods(System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1135
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns all the public and non-public methods declared or inherited by this type, as specified.
  syntax:
    content: public override MethodInfo[] GetMethods(BindingFlags bindingAttr)
    content.vb: Public Overrides Function GetMethods(bindingAttr As BindingFlags) As MethodInfo()
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from @'System.Reflection.BindingFlags' as in InvokeMethod, NonPublic, and so on.
    return:
      type: System.Reflection.MethodInfo[]
      description: Returns an array of @'System.Reflection.MethodInfo' objects representing the public and non-public methods defined on this type if *nonPublic* is used; otherwise, only the public methods are returned.
  overridden: System.Type.GetMethods(System.Reflection.BindingFlags)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetField(String, BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetField(System.String, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1144
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the field specified by the given name.
  syntax:
    content: public override FieldInfo GetField(string name, BindingFlags bindingAttr)
    content.vb: Public Overrides Function GetField(name As String, bindingAttr As BindingFlags) As FieldInfo
    parameters:
    - id: name
      type: System.String
      description: The name of the field to get.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from @'System.Reflection.BindingFlags' as in InvokeMethod, NonPublic, and so on.
    return:
      type: System.Reflection.FieldInfo
      description: Returns the @'System.Reflection.FieldInfo' object representing the field declared or inherited by this type with the specified name and public or non-public modifier. If there are no matches then null is returned.
  overridden: System.Type.GetField(System.String,System.Reflection.BindingFlags)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetFields(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetFields(System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1153
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the public and non-public fields that are declared by this type.
  syntax:
    content: public override FieldInfo[] GetFields(BindingFlags bindingAttr)
    content.vb: Public Overrides Function GetFields(bindingAttr As BindingFlags) As FieldInfo()
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: 'This must be a bit flag from @''System.Reflection.BindingFlags'' : InvokeMethod, NonPublic, and so on.'
    return:
      type: System.Reflection.FieldInfo[]
      description: Returns an array of @'System.Reflection.FieldInfo' objects representing the public and non-public fields declared or inherited by this type. An empty array is returned if there are no fields, as specified.
  overridden: System.Type.GetFields(System.Reflection.BindingFlags)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetInterface(System.String,System.Boolean)
  id: GetInterface(System.String,System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetInterface(String, Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.GetInterface(System.String, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1162
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the interface implemented (directly or indirectly) by this class with the fully qualified name matching the given interface name.
  syntax:
    content: public override Type GetInterface(string name, bool ignoreCase)
    content.vb: Public Overrides Function GetInterface(name As String, ignoreCase As Boolean) As Type
    parameters:
    - id: name
      type: System.String
      description: The name of the interface.
    - id: ignoreCase
      type: System.Boolean
      description: If true, the search is case-insensitive. If false, the search is case-sensitive.
    return:
      type: System.Type
      description: Returns a @'System.Type' object representing the implemented interface. Returns null if no interface matching name is found.
  overridden: System.Type.GetInterface(System.String,System.Boolean)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetInterfaces
  id: GetInterfaces
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetInterfaces()
  fullName: System.Reflection.Emit.TypeBuilder.GetInterfaces()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1171
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns an array of all the interfaces implemented on this type and its base types.
  syntax:
    content: public override Type[] GetInterfaces()
    content.vb: Public Overrides Function GetInterfaces As Type()
    return:
      type: System.Type[]
      description: Returns an array of @'System.Type' objects representing the implemented interfaces. If none are defined, an empty array is returned.
  overridden: System.Type.GetInterfaces
- uid: System.Reflection.Emit.TypeBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetEvent(String, BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetEvent(System.String, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1186
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the event with the specified name.
  syntax:
    content: public override EventInfo GetEvent(string name, BindingFlags bindingAttr)
    content.vb: Public Overrides Function GetEvent(name As String, bindingAttr As BindingFlags) As EventInfo
    parameters:
    - id: name
      type: System.String
      description: The name of the event to search for.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: A bitwise combination of @'System.Reflection.BindingFlags' values that limits the search.
    return:
      type: System.Reflection.EventInfo
      description: An @'System.Reflection.EventInfo' object representing the event declared or inherited by this type with the specified name, or null if there are no matches.
  overridden: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetEvents
  id: GetEvents
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetEvents()
  fullName: System.Reflection.Emit.TypeBuilder.GetEvents()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1195
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the public events declared or inherited by this type.
  syntax:
    content: public override EventInfo[] GetEvents()
    content.vb: Public Overrides Function GetEvents As EventInfo()
    return:
      type: System.Reflection.EventInfo[]
      description: Returns an array of @'System.Reflection.EventInfo' objects representing the public events declared or inherited by this type. An empty array is returned if there are no public events.
  overridden: System.Type.GetEvents
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  name.vb: GetPropertyImpl(String, BindingFlags, Binder, Type, Type(), ParameterModifier())
  fullName: System.Reflection.Emit.TypeBuilder.GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type(), System.Reflection.ParameterModifier())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1204
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected override PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
    content.vb: Protected Overrides Function GetPropertyImpl(name As String, bindingAttr As BindingFlags, binder As Binder, returnType As Type, types As Type(), modifiers As ParameterModifier()) As PropertyInfo
    parameters:
    - id: name
      type: System.String
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: returnType
      type: System.Type
    - id: types
      type: System.Type[]
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
    return:
      type: System.Reflection.PropertyInfo
  overridden: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
- uid: System.Reflection.Emit.TypeBuilder.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetProperties(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetProperties(System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1210
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns all the public and non-public properties declared or inherited by this type, as specified.
  syntax:
    content: public override PropertyInfo[] GetProperties(BindingFlags bindingAttr)
    content.vb: Public Overrides Function GetProperties(bindingAttr As BindingFlags) As PropertyInfo()
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: 'This invocation attribute. This must be a bit flag from @''System.Reflection.BindingFlags'' : InvokeMethod, NonPublic, and so on.'
    return:
      type: System.Reflection.PropertyInfo[]
      description: Returns an array of PropertyInfo objects representing the public and non-public properties defined on this type if *nonPublic* is used; otherwise, only the public properties are returned.
  overridden: System.Type.GetProperties(System.Reflection.BindingFlags)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  id: GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetNestedTypes(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1219
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the public and non-public nested types that are declared or inherited by this type.
  syntax:
    content: public override Type[] GetNestedTypes(BindingFlags bindingAttr)
    content.vb: Public Overrides Function GetNestedTypes(bindingAttr As BindingFlags) As Type()
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from @'System.Reflection.BindingFlags', as in InvokeMethod, NonPublic, and so on.
    return:
      type: System.Type[]
      description: An array of @'System.Type' objects representing all the types nested within the current @'System.Type' that match the specified binding constraints.An empty array of type @'System.Type', if no types are nested within the current @'System.Type', or if none of the nested types match the binding constraints.
  overridden: System.Type.GetNestedTypes(System.Reflection.BindingFlags)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  id: GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetNestedType(String, BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetNestedType(System.String, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1228
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the public and non-public nested types that are declared by this type.
  syntax:
    content: public override Type GetNestedType(string name, BindingFlags bindingAttr)
    content.vb: Public Overrides Function GetNestedType(name As String, bindingAttr As BindingFlags) As Type
    parameters:
    - id: name
      type: System.String
      description: The @'System.String' containing the name of the nested type to get.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: A bitmask comprised of one or more @'System.Reflection.BindingFlags' that specify how the search is conducted.-or- Zero, to conduct a case-sensitive search for public methods.
    return:
      type: System.Type
      description: A @'System.Type' object representing the nested type that matches the specified requirements, if found; otherwise, null.
  overridden: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetMember(String, MemberTypes, BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetMember(System.String, System.Reflection.MemberTypes, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1237
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns all the public and non-public members declared or inherited by this type, as specified.
  syntax:
    content: public override MemberInfo[] GetMember(string name, MemberTypes type, BindingFlags bindingAttr)
    content.vb: Public Overrides Function GetMember(name As String, type As MemberTypes, bindingAttr As BindingFlags) As MemberInfo()
    parameters:
    - id: name
      type: System.String
      description: The name of the member.
    - id: type
      type: System.Reflection.MemberTypes
      description: The type of the member to return.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from @'System.Reflection.BindingFlags', as in InvokeMethod, NonPublic, and so on.
    return:
      type: System.Reflection.MemberInfo[]
      description: Returns an array of @'System.Reflection.MemberInfo' objects representing the public and non-public members defined on this type if *nonPublic* is used; otherwise, only the public members are returned.
  overridden: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetInterfaceMap(System.Type)
  id: GetInterfaceMap(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetInterfaceMap(Type)
  fullName: System.Reflection.Emit.TypeBuilder.GetInterfaceMap(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1246
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns an interface mapping for the requested interface.
  syntax:
    content: public override InterfaceMapping GetInterfaceMap(Type interfaceType)
    content.vb: Public Overrides Function GetInterfaceMap(interfaceType As Type) As InterfaceMapping
    parameters:
    - id: interfaceType
      type: System.Type
      description: The @'System.Type' of the interface for which the mapping is to be retrieved.
    return:
      type: System.Reflection.InterfaceMapping
      description: Returns the requested interface mapping.
  overridden: System.Type.GetInterfaceMap(System.Type)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetEvents(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetEvents(System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1256
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the public and non-public events that are declared by this type.
  syntax:
    content: public override EventInfo[] GetEvents(BindingFlags bindingAttr)
    content.vb: Public Overrides Function GetEvents(bindingAttr As BindingFlags) As EventInfo()
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: A bitwise combination of @'System.Reflection.BindingFlags' values that limits the search.
    return:
      type: System.Reflection.EventInfo[]
      description: Returns an array of @'System.Reflection.EventInfo' objects representing the events declared or inherited by this type that match the specified binding flags. An empty array is returned if there are no matching events.
  overridden: System.Type.GetEvents(System.Reflection.BindingFlags)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetMembers(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetMembers(System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1265
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the members for the public and non-public members declared or inherited by this type.
  syntax:
    content: public override MemberInfo[] GetMembers(BindingFlags bindingAttr)
    content.vb: Public Overrides Function GetMembers(bindingAttr As BindingFlags) As MemberInfo()
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from @'System.Reflection.BindingFlags', such as InvokeMethod, NonPublic, and so on.
    return:
      type: System.Reflection.MemberInfo[]
      description: Returns an array of @'System.Reflection.MemberInfo' objects representing the public and non-public members declared or inherited by this type. An empty array is returned if there are no matching members.
  overridden: System.Type.GetMembers(System.Reflection.BindingFlags)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not implemented for incomplete types.
- uid: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Type)
  id: IsAssignableFrom(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsAssignableFrom(Type)
  fullName: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1274
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates whether a specified @'System.Type' can be assigned to this object.
  syntax:
    content: public override bool IsAssignableFrom(Type c)
    content.vb: Public Overrides Function IsAssignableFrom(c As Type) As Boolean
    parameters:
    - id: c
      type: System.Type
      description: The object to test.
    return:
      type: System.Boolean
      description: true if the *c* parameter and the current type represent the same type, or if the current type is in the inheritance hierarchy of *c*, or if the current type is an interface that *c* supports. false if none of these conditions are valid, or if *c* is null.
  overridden: System.Type.IsAssignableFrom(System.Type)
- uid: System.Reflection.Emit.TypeBuilder.GetAttributeFlagsImpl
  id: GetAttributeFlagsImpl
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetAttributeFlagsImpl()
  fullName: System.Reflection.Emit.TypeBuilder.GetAttributeFlagsImpl()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1323
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected override TypeAttributes GetAttributeFlagsImpl()
    content.vb: Protected Overrides Function GetAttributeFlagsImpl As TypeAttributes
    return:
      type: System.Reflection.TypeAttributes
  overridden: System.Type.GetAttributeFlagsImpl
- uid: System.Reflection.Emit.TypeBuilder.IsArrayImpl
  id: IsArrayImpl
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsArrayImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsArrayImpl()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1328
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsArrayImpl()
    content.vb: Protected Overrides Function IsArrayImpl As Boolean
    return:
      type: System.Boolean
  overridden: System.Type.IsArrayImpl
- uid: System.Reflection.Emit.TypeBuilder.IsByRefImpl
  id: IsByRefImpl
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsByRefImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsByRefImpl()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1332
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsByRefImpl()
    content.vb: Protected Overrides Function IsByRefImpl As Boolean
    return:
      type: System.Boolean
  overridden: System.Type.IsByRefImpl
- uid: System.Reflection.Emit.TypeBuilder.IsPointerImpl
  id: IsPointerImpl
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsPointerImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsPointerImpl()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1336
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsPointerImpl()
    content.vb: Protected Overrides Function IsPointerImpl As Boolean
    return:
      type: System.Boolean
  overridden: System.Type.IsPointerImpl
- uid: System.Reflection.Emit.TypeBuilder.IsPrimitiveImpl
  id: IsPrimitiveImpl
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsPrimitiveImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsPrimitiveImpl()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1340
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsPrimitiveImpl()
    content.vb: Protected Overrides Function IsPrimitiveImpl As Boolean
    return:
      type: System.Boolean
  overridden: System.Type.IsPrimitiveImpl
- uid: System.Reflection.Emit.TypeBuilder.IsCOMObjectImpl
  id: IsCOMObjectImpl
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsCOMObjectImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsCOMObjectImpl()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1345
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsCOMObjectImpl()
    content.vb: Protected Overrides Function IsCOMObjectImpl As Boolean
    return:
      type: System.Boolean
  overridden: System.Type.IsCOMObjectImpl
- uid: System.Reflection.Emit.TypeBuilder.GetElementType
  id: GetElementType
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetElementType()
  fullName: System.Reflection.Emit.TypeBuilder.GetElementType()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1350
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Calling this method always throws @'System.NotSupportedException'.
  syntax:
    content: public override Type GetElementType()
    content.vb: Public Overrides Function GetElementType As Type
    return:
      type: System.Type
      description: This method is not supported. No value is returned.
  overridden: System.Type.GetElementType
  exceptions:
  - type: System.NotSupportedException
    description: This method is not supported.
- uid: System.Reflection.Emit.TypeBuilder.HasElementTypeImpl
  id: HasElementTypeImpl
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: HasElementTypeImpl()
  fullName: System.Reflection.Emit.TypeBuilder.HasElementTypeImpl()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1357
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool HasElementTypeImpl()
    content.vb: Protected Overrides Function HasElementTypeImpl As Boolean
    return:
      type: System.Boolean
  overridden: System.Type.HasElementTypeImpl
- uid: System.Reflection.Emit.TypeBuilder.IsSecurityCritical
  id: IsSecurityCritical
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsSecurityCritical
  fullName: System.Reflection.Emit.TypeBuilder.IsSecurityCritical
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1362
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates whether the current type is security-critical or security-safe-critical, and therefore can perform critical operations.
  syntax:
    content: public override bool IsSecurityCritical { get; }
    content.vb: Public Overrides ReadOnly Property IsSecurityCritical As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current type is security-critical or security-safe-critical; false if it is transparent.
  overridden: System.Type.IsSecurityCritical
  exceptions:
  - type: System.NotSupportedException
    description: The current dynamic type has not been created by calling the @'System.Reflection.Emit.TypeBuilder.CreateType' method.
- uid: System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical
  id: IsSecuritySafeCritical
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsSecuritySafeCritical
  fullName: System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1374
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates whether the current type is security-safe-critical; that is, whether it can perform critical operations and can be accessed by transparent code.
  syntax:
    content: public override bool IsSecuritySafeCritical { get; }
    content.vb: Public Overrides ReadOnly Property IsSecuritySafeCritical As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current type is security-safe-critical; false if it is security-critical or transparent.
  overridden: System.Type.IsSecuritySafeCritical
  exceptions:
  - type: System.NotSupportedException
    description: The current dynamic type has not been created by calling the @'System.Reflection.Emit.TypeBuilder.CreateType' method.
- uid: System.Reflection.Emit.TypeBuilder.IsSecurityTransparent
  id: IsSecurityTransparent
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsSecurityTransparent
  fullName: System.Reflection.Emit.TypeBuilder.IsSecurityTransparent
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1386
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates whether the current type is transparent, and therefore cannot perform critical operations.
  syntax:
    content: public override bool IsSecurityTransparent { get; }
    content.vb: Public Overrides ReadOnly Property IsSecurityTransparent As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the type is security-transparent; otherwise, false.
  overridden: System.Type.IsSecurityTransparent
  exceptions:
  - type: System.NotSupportedException
    description: The current dynamic type has not been created by calling the @'System.Reflection.Emit.TypeBuilder.CreateType' method.
- uid: System.Reflection.Emit.TypeBuilder.IsSubclassOf(System.Type)
  id: IsSubclassOf(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsSubclassOf(Type)
  fullName: System.Reflection.Emit.TypeBuilder.IsSubclassOf(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1398
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Determines whether this type is derived from a specified type.
  syntax:
    content: public override bool IsSubclassOf(Type c)
    content.vb: Public Overrides Function IsSubclassOf(c As Type) As Boolean
    parameters:
    - id: c
      type: System.Type
      description: A @'System.Type' that is to be checked.
    return:
      type: System.Boolean
      description: Read-only. Returns true if this type is the same as the type *c*, or is a subtype of type *c*; otherwise, false.
  overridden: System.Type.IsSubclassOf(System.Type)
- uid: System.Reflection.Emit.TypeBuilder.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: UnderlyingSystemType
  fullName: System.Reflection.Emit.TypeBuilder.UnderlyingSystemType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1420
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the underlying system type for this TypeBuilder.
  syntax:
    content: public override Type UnderlyingSystemType { get; }
    content.vb: Public Overrides ReadOnly Property UnderlyingSystemType As Type
    parameters: []
    return:
      type: System.Type
      description: Read-only. Returns the underlying system type.
  overridden: System.Type.UnderlyingSystemType
  exceptions:
  - type: System.InvalidOperationException
    description: This type is an enumeration, but there is no underlying system type.
- uid: System.Reflection.Emit.TypeBuilder.MakePointerType
  id: MakePointerType
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: MakePointerType()
  fullName: System.Reflection.Emit.TypeBuilder.MakePointerType()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1441
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a @'System.Type' object that represents the type of an unmanaged pointer to the current type.
  syntax:
    content: public override Type MakePointerType()
    content.vb: Public Overrides Function MakePointerType As Type
    return:
      type: System.Type
      description: A @'System.Type' object that represents the type of an unmanaged pointer to the current type.
  overridden: System.Type.MakePointerType
- uid: System.Reflection.Emit.TypeBuilder.MakeByRefType
  id: MakeByRefType
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: MakeByRefType()
  fullName: System.Reflection.Emit.TypeBuilder.MakeByRefType()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1446
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a @'System.Type' object that represents the current type when passed as a ref parameter (ByRef in Visual Basic).
  syntax:
    content: public override Type MakeByRefType()
    content.vb: Public Overrides Function MakeByRefType As Type
    return:
      type: System.Type
      description: A @'System.Type' object that represents the current type when passed as a ref parameter (ByRef in Visual Basic).
  overridden: System.Type.MakeByRefType
- uid: System.Reflection.Emit.TypeBuilder.MakeArrayType
  id: MakeArrayType
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: MakeArrayType()
  fullName: System.Reflection.Emit.TypeBuilder.MakeArrayType()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1451
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a @'System.Type' object that represents a one-dimensional array of the current type, with a lower bound of zero.
  syntax:
    content: public override Type MakeArrayType()
    content.vb: Public Overrides Function MakeArrayType As Type
    return:
      type: System.Type
      description: A @'System.Type' object representing a one-dimensional array type whose element type is the current type, with a lower bound of zero.
  overridden: System.Type.MakeArrayType
- uid: System.Reflection.Emit.TypeBuilder.MakeArrayType(System.Int32)
  id: MakeArrayType(System.Int32)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: MakeArrayType(Int32)
  fullName: System.Reflection.Emit.TypeBuilder.MakeArrayType(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1456
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a @'System.Type' object that represents an array of the current type, with the specified number of dimensions.
  syntax:
    content: public override Type MakeArrayType(int rank)
    content.vb: Public Overrides Function MakeArrayType(rank As Integer) As Type
    parameters:
    - id: rank
      type: System.Int32
      description: The number of dimensions for the array.
    return:
      type: System.Type
      description: A @'System.Type' object that represents a one-dimensional array of the current type.
  overridden: System.Type.MakeArrayType(System.Int32)
  exceptions:
  - type: System.IndexOutOfRangeException
    description: '*rank* is not a valid array dimension.'
- uid: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1480
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns all the custom attributes defined for this type.
  syntax:
    content: public override object[] GetCustomAttributes(bool inherit)
    content.vb: Public Overrides Function GetCustomAttributes(inherit As Boolean) As Object()
    parameters:
    - id: inherit
      type: System.Boolean
      description: Specifies whether to search this member's inheritance chain to find the attributes.
    return:
      type: System.Object[]
      description: Returns an array of objects representing all the custom attributes of this type.
  overridden: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported for incomplete types. Retrieve the type using @'System.Type.GetType' and call @'System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)' on the returned @'System.Type'.
- uid: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1490
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns all the custom attributes of the current type that are assignable to a specified type.
  syntax:
    content: public override object[] GetCustomAttributes(Type attributeType, bool inherit)
    content.vb: Public Overrides Function GetCustomAttributes(attributeType As Type, inherit As Boolean) As Object()
    parameters:
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for. Only attributes that are assignable to this type are returned.
    - id: inherit
      type: System.Boolean
      description: Specifies whether to search this member's inheritance chain to find the attributes.
    return:
      type: System.Object[]
      description: An array of custom attributes defined on the current type.
  overridden: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported for incomplete types. Retrieve the type using @'System.Type.GetType' and call @'System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)' on the returned @'System.Type'.
  - type: System.ArgumentNullException
    description: '*attributeType* is null.'
  - type: System.ArgumentException
    description: The type must be a type provided by the underlying runtime system.
- uid: System.Reflection.Emit.TypeBuilder.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsDefined(Type, Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.IsDefined(System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1508
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Determines whether a custom attribute is applied to the current type.
  syntax:
    content: public override bool IsDefined(Type attributeType, bool inherit)
    content.vb: Public Overrides Function IsDefined(attributeType As Type, inherit As Boolean) As Boolean
    parameters:
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for. Only attributes that are assignable to this type are returned.
    - id: inherit
      type: System.Boolean
      description: Specifies whether to search this member's inheritance chain to find the attributes.
    return:
      type: System.Boolean
      description: true if one or more instances of *attributeType*, or an attribute derived from *attributeType*, is defined on this type; otherwise, false.
  overridden: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  exceptions:
  - type: System.NotSupportedException
    description: This method is not currently supported for incomplete types. Retrieve the type using @'System.Type.GetType' and call @'System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)' on the returned @'System.Type'.
  - type: System.ArgumentException
    description: '*attributeType* is not defined.'
  - type: System.ArgumentNullException
    description: '*attributeType* is null.'
- uid: System.Reflection.Emit.TypeBuilder.GenericParameterAttributes
  id: GenericParameterAttributes
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GenericParameterAttributes
  fullName: System.Reflection.Emit.TypeBuilder.GenericParameterAttributes
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1531
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates the covariance and special constraints of the current generic type parameter.
  syntax:
    content: public override GenericParameterAttributes GenericParameterAttributes { get; }
    content.vb: Public Overrides ReadOnly Property GenericParameterAttributes As GenericParameterAttributes
    parameters: []
    return:
      type: System.Reflection.GenericParameterAttributes
      description: A bitwise combination of @'System.Reflection.GenericParameterAttributes' values that describes the covariance and special constraints of the current generic type parameter.
  overridden: System.Type.GenericParameterAttributes
- uid: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])
  id: DefineGenericParameters(System.String[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineGenericParameters(String[])
  name.vb: DefineGenericParameters(String())
  fullName: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1545
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines the generic type parameters for the current type, specifying their number and their names, and returns an array of @'System.Reflection.Emit.GenericTypeParameterBuilder' objects that can be used to set their constraints.
  syntax:
    content: public GenericTypeParameterBuilder[] DefineGenericParameters(params string[] names)
    content.vb: Public Function DefineGenericParameters(ParamArray names As String()) As GenericTypeParameterBuilder()
    parameters:
    - id: names
      type: System.String[]
      description: An array of names for the generic type parameters.
    return:
      type: System.Reflection.Emit.GenericTypeParameterBuilder[]
      description: An array of @'System.Reflection.Emit.GenericTypeParameterBuilder' objects that can be used to define the constraints of the generic type parameters for the current type.
  exceptions:
  - type: System.InvalidOperationException
    description: Generic type parameters have already been defined for this type.
  - type: System.ArgumentNullException
    description: '*names* is null.-or-An element of *names* is null.'
  - type: System.ArgumentException
    description: '*names* is an empty array.'
- uid: System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])
  id: MakeGenericType(System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: MakeGenericType(Type[])
  name.vb: MakeGenericType(Type())
  fullName: System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1569
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Substitutes the elements of an array of types for the type parameters of the current generic type definition, and returns the resulting constructed type.
  syntax:
    content: public override Type MakeGenericType(params Type[] typeArguments)
    content.vb: Public Overrides Function MakeGenericType(ParamArray typeArguments As Type()) As Type
    parameters:
    - id: typeArguments
      type: System.Type[]
      description: An array of types to be substituted for the type parameters of the current generic type definition.
    return:
      type: System.Type
      description: A @'System.Type' representing the constructed type formed by substituting the elements of *typeArguments* for the type parameters of the current generic type.
  overridden: System.Type.MakeGenericType(System.Type[])
  exceptions:
  - type: System.InvalidOperationException
    description: The current type does not represent the definition of a generic type. That is, @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' returns false.
  - type: System.ArgumentNullException
    description: '*typeArguments* is null.-or- Any element of *typeArguments* is null.'
  - type: System.ArgumentException
    description: The @'System.Type.Module' property of any element of *typeArguments* is null. -or- The @'System.Reflection.Module.Assembly' property of the module of any element of *typeArguments* is null.
- uid: System.Reflection.Emit.TypeBuilder.GetGenericArguments
  id: GetGenericArguments
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetGenericArguments()
  fullName: System.Reflection.Emit.TypeBuilder.GetGenericArguments()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1576
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns an array of @'System.Type' objects representing the type arguments of a generic type or the type parameters of a generic type definition.
  syntax:
    content: public override Type[] GetGenericArguments()
    content.vb: Public Overrides Function GetGenericArguments As Type()
    return:
      type: System.Type[]
      description: An array of @'System.Type' objects. The elements of the array represent the type arguments of a generic type or the type parameters of a generic type definition.
  overridden: System.Type.GetGenericArguments
- uid: System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition
  id: IsGenericTypeDefinition
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsGenericTypeDefinition
  fullName: System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1579
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value indicating whether the current @'System.Reflection.Emit.TypeBuilder' represents a generic type definition from which other generic types can be constructed.
  syntax:
    content: public override bool IsGenericTypeDefinition { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericTypeDefinition As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this @'System.Reflection.Emit.TypeBuilder' object represents a generic type definition; otherwise, false.
  overridden: System.Type.IsGenericTypeDefinition
- uid: System.Reflection.Emit.TypeBuilder.IsGenericType
  id: IsGenericType
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsGenericType
  fullName: System.Reflection.Emit.TypeBuilder.IsGenericType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1580
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value indicating whether the current type is a generic type.
  syntax:
    content: public override bool IsGenericType { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericType As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the type represented by the current @'System.Reflection.Emit.TypeBuilder' object is generic; otherwise, false.
  overridden: System.Type.IsGenericType
- uid: System.Reflection.Emit.TypeBuilder.IsGenericParameter
  id: IsGenericParameter
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsGenericParameter
  fullName: System.Reflection.Emit.TypeBuilder.IsGenericParameter
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1581
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value indicating whether the current type is a generic type parameter.
  syntax:
    content: public override bool IsGenericParameter { get; }
    content.vb: Public Overrides ReadOnly Property IsGenericParameter As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current @'System.Reflection.Emit.TypeBuilder' object represents a generic type parameter; otherwise, false.
  overridden: System.Type.IsGenericParameter
- uid: System.Reflection.Emit.TypeBuilder.IsConstructedGenericType
  id: IsConstructedGenericType
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: IsConstructedGenericType
  fullName: System.Reflection.Emit.TypeBuilder.IsConstructedGenericType
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1582
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates whether this object represents a constructed generic type.
  syntax:
    content: public override bool IsConstructedGenericType { get; }
    content.vb: Public Overrides ReadOnly Property IsConstructedGenericType As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this object represents a constructed generic type; otherwise, false.
  overridden: System.Type.IsConstructedGenericType
- uid: System.Reflection.Emit.TypeBuilder.GenericParameterPosition
  id: GenericParameterPosition
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GenericParameterPosition
  fullName: System.Reflection.Emit.TypeBuilder.GenericParameterPosition
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1584
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the position of a type parameter in the type parameter list of the generic type that declared the parameter.
  syntax:
    content: public override int GenericParameterPosition { get; }
    content.vb: Public Overrides ReadOnly Property GenericParameterPosition As Integer
    parameters: []
    return:
      type: System.Int32
      description: If the current @'System.Reflection.Emit.TypeBuilder' object represents a generic type parameter, the position of the type parameter in the type parameter list of the generic type that declared the parameter; otherwise, undefined.
  overridden: System.Type.GenericParameterPosition
- uid: System.Reflection.Emit.TypeBuilder.DeclaringMethod
  id: DeclaringMethod
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DeclaringMethod
  fullName: System.Reflection.Emit.TypeBuilder.DeclaringMethod
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1585
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the method that declared the current generic type parameter.
  syntax:
    content: public override MethodBase DeclaringMethod { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringMethod As MethodBase
    parameters: []
    return:
      type: System.Reflection.MethodBase
      description: A @'System.Reflection.MethodBase' that represents the method that declared the current type, if the current type is a generic type parameter; otherwise, null.
  overridden: System.Type.DeclaringMethod
- uid: System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition
  id: GetGenericTypeDefinition
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: GetGenericTypeDefinition()
  fullName: System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1586
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a @'System.Type' object that represents a generic type definition from which the current type can be obtained.
  syntax:
    content: public override Type GetGenericTypeDefinition()
    content.vb: Public Overrides Function GetGenericTypeDefinition As Type
    return:
      type: System.Type
      description: A @'System.Type' object representing a generic type definition from which the current type can be obtained.
  overridden: System.Type.GetGenericTypeDefinition
  exceptions:
  - type: System.InvalidOperationException
    description: The current type is not generic. That is, @'System.Reflection.Emit.TypeBuilder.IsGenericType' returns false.
- uid: System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)
  id: DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineMethodOverride(MethodInfo, MethodInfo)
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1590
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Specifies a given method body that implements a given method declaration, potentially with a different name.
  syntax:
    content: public void DefineMethodOverride(MethodInfo methodInfoBody, MethodInfo methodInfoDeclaration)
    content.vb: Public Sub DefineMethodOverride(methodInfoBody As MethodInfo, methodInfoDeclaration As MethodInfo)
    parameters:
    - id: methodInfoBody
      type: System.Reflection.MethodInfo
      description: The method body to be used. This should be a MethodBuilder object.
    - id: methodInfoDeclaration
      type: System.Reflection.MethodInfo
      description: The method whose declaration is to be used.
  exceptions:
  - type: System.ArgumentException
    description: '*methodInfoBody* does not belong to this class.'
  - type: System.ArgumentNullException
    description: '*methodInfoBody* or *methodInfoDeclaration* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.-or- The declaring type of *methodInfoBody* is not the type represented by this @'System.Reflection.Emit.TypeBuilder'.
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineMethod(String, MethodAttributes, Type, Type[])
  name.vb: DefineMethod(String, MethodAttributes, Type, Type())
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Type, System.Type[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Type, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1624
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new method to the type, with the specified name, method attributes, and method signature.
  syntax:
    content: public MethodBuilder DefineMethod(string name, MethodAttributes attributes, Type returnType, Type[] parameterTypes)
    content.vb: Public Function DefineMethod(name As String, attributes As MethodAttributes, returnType As Type, parameterTypes As Type()) As MethodBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the method. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the method.
    - id: returnType
      type: System.Type
      description: The return type of the method.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the parameters of the method.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: The defined method.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.-or- The type of the parent of this method is an interface, and this method is not virtual (Overridable in Visual Basic).
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.-or-For the current dynamic type, the @'System.Reflection.Emit.TypeBuilder.IsGenericType' property is true, but the @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' property is false.
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)
  id: DefineMethod(System.String,System.Reflection.MethodAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineMethod(String, MethodAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1631
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new method to the type, with the specified name and method attributes.
  syntax:
    content: public MethodBuilder DefineMethod(string name, MethodAttributes attributes)
    content.vb: Public Function DefineMethod(name As String, attributes As MethodAttributes) As MethodBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the method. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the method.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: A @'System.Reflection.Emit.MethodBuilder' representing the newly defined method.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.-or- The type of the parent of this method is an interface, and this method is not virtual (Overridable in Visual Basic).
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.-or-For the current dynamic type, the @'System.Reflection.Emit.TypeBuilder.IsGenericType' property is true, but the @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' property is false.
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)
  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineMethod(String, MethodAttributes, CallingConventions)
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1638
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new method to the type, with the specified name, method attributes, and calling convention.
  syntax:
    content: public MethodBuilder DefineMethod(string name, MethodAttributes attributes, CallingConventions callingConvention)
    content.vb: Public Function DefineMethod(name As String, attributes As MethodAttributes, callingConvention As CallingConventions) As MethodBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the method. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the method.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention of the method.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: A @'System.Reflection.Emit.MethodBuilder' representing the newly defined method.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.-or- The type of the parent of this method is an interface and this method is not virtual (Overridable in Visual Basic).
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.-or-For the current dynamic type, the @'System.Reflection.Emit.TypeBuilder.IsGenericType' property is true, but the @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' property is false.
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineMethod(String, MethodAttributes, CallingConventions, Type, Type[])
  name.vb: DefineMethod(String, MethodAttributes, CallingConventions, Type, Type())
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1645
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new method to the type, with the specified name, method attributes, calling convention, and method signature.
  syntax:
    content: public MethodBuilder DefineMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)
    content.vb: Public Function DefineMethod(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the method. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the method.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention of the method.
    - id: returnType
      type: System.Type
      description: The return type of the method.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the parameters of the method.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: A @'System.Reflection.Emit.MethodBuilder' representing the newly defined method.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.-or- The type of the parent of this method is an interface, and this method is not virtual (Overridable in Visual Basic).
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.-or-For the current dynamic type, the @'System.Reflection.Emit.TypeBuilder.IsGenericType' property is true, but the @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' property is false.
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])
  name.vb: DefineMethod(String, MethodAttributes, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1653
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new method to the type, with the specified name, method attributes, calling convention, method signature, and custom modifiers.
  syntax:
    content: public MethodBuilder DefineMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers)
    content.vb: Public Function DefineMethod(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()()) As MethodBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the method. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the method.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention of the method.
    - id: returnType
      type: System.Type
      description: The return type of the method.
    - id: returnTypeRequiredCustomModifiers
      type: System.Type[]
      description: An array of types representing the required custom modifiers, such as @'System.Runtime.CompilerServices.IsConst', for the return type of the method. If the return type has no required custom modifiers, specify null.
    - id: returnTypeOptionalCustomModifiers
      type: System.Type[]
      description: An array of types representing the optional custom modifiers, such as @'System.Runtime.CompilerServices.IsConst', for the return type of the method. If the return type has no optional custom modifiers, specify null.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the parameters of the method.
    - id: parameterTypeRequiredCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter, such as @'System.Runtime.CompilerServices.IsConst'. If a particular parameter has no required custom modifiers, specify null instead of an array of types. If none of the parameters have required custom modifiers, specify null instead of an array of arrays.
    - id: parameterTypeOptionalCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter, such as @'System.Runtime.CompilerServices.IsConst'. If a particular parameter has no optional custom modifiers, specify null instead of an array of types. If none of the parameters have optional custom modifiers, specify null instead of an array of arrays.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: A @'System.Reflection.Emit.MethodBuilder' object representing the newly added method.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.-or- The type of the parent of this method is an interface, and this method is not virtual (Overridable in Visual Basic). -or-The size of *parameterTypeRequiredCustomModifiers* or *parameterTypeOptionalCustomModifiers* does not equal the size of *parameterTypes*.
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.-or-For the current dynamic type, the @'System.Reflection.Emit.TypeBuilder.IsGenericType' property is true, but the @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' property is false.
- uid: System.Reflection.Emit.TypeBuilder.DefineTypeInitializer
  id: DefineTypeInitializer
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineTypeInitializer()
  fullName: System.Reflection.Emit.TypeBuilder.DefineTypeInitializer()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1726
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines the initializer for this type.
  syntax:
    content: public ConstructorBuilder DefineTypeInitializer()
    content.vb: Public Function DefineTypeInitializer As ConstructorBuilder
    return:
      type: System.Reflection.Emit.ConstructorBuilder
      description: Returns a type initializer.
  exceptions:
  - type: System.InvalidOperationException
    description: The containing type has been previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)
  id: DefineDefaultConstructor(System.Reflection.MethodAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineDefaultConstructor(MethodAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1750
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines the default constructor. The constructor defined here will simply call the default constructor of the parent.
  syntax:
    content: public ConstructorBuilder DefineDefaultConstructor(MethodAttributes attributes)
    content.vb: Public Function DefineDefaultConstructor(attributes As MethodAttributes) As ConstructorBuilder
    parameters:
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: A MethodAttributes object representing the attributes to be applied to the constructor.
    return:
      type: System.Reflection.Emit.ConstructorBuilder
      description: Returns the constructor.
  exceptions:
  - type: System.NotSupportedException
    description: The parent type (base type) does not have a default constructor.
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.-or-For the current dynamic type, the @'System.Reflection.Emit.TypeBuilder.IsGenericType' property is true, but the @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' property is false.
- uid: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])
  id: DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineConstructor(MethodAttributes, CallingConventions, Type[])
  name.vb: DefineConstructor(MethodAttributes, CallingConventions, Type())
  fullName: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1818
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new constructor to the type, with the given attributes and signature.
  syntax:
    content: public ConstructorBuilder DefineConstructor(MethodAttributes attributes, CallingConventions callingConvention, Type[] parameterTypes)
    content.vb: Public Function DefineConstructor(attributes As MethodAttributes, callingConvention As CallingConventions, parameterTypes As Type()) As ConstructorBuilder
    parameters:
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the constructor.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention of the constructor.
    - id: parameterTypes
      type: System.Type[]
      description: The parameter types of the constructor.
    return:
      type: System.Reflection.Emit.ConstructorBuilder
      description: The defined constructor.
  exceptions:
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])
  id: DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineConstructor(MethodAttributes, CallingConventions, Type[], Type[][], Type[][])
  name.vb: DefineConstructor(MethodAttributes, CallingConventions, Type(), Type()(), Type()())
  fullName: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type[], System.Type[][], System.Type[][])
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type(), System.Type()(), System.Type()())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1824
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new constructor to the type, with the given attributes, signature, and custom modifiers.
  syntax:
    content: public ConstructorBuilder DefineConstructor(MethodAttributes attributes, CallingConventions callingConvention, Type[] parameterTypes, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers)
    content.vb: Public Function DefineConstructor(attributes As MethodAttributes, callingConvention As CallingConventions, parameterTypes As Type(), requiredCustomModifiers As Type()(), optionalCustomModifiers As Type()()) As ConstructorBuilder
    parameters:
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the constructor.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention of the constructor.
    - id: parameterTypes
      type: System.Type[]
      description: The parameter types of the constructor.
    - id: requiredCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter, such as @'System.Runtime.CompilerServices.IsConst'. If a particular parameter has no required custom modifiers, specify null instead of an array of types. If none of the parameters have required custom modifiers, specify null instead of an array of arrays.
    - id: optionalCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter, such as @'System.Runtime.CompilerServices.IsConst'. If a particular parameter has no optional custom modifiers, specify null instead of an array of types. If none of the parameters have optional custom modifiers, specify null instead of an array of arrays.
    return:
      type: System.Reflection.Emit.ConstructorBuilder
      description: The defined constructor.
  exceptions:
  - type: System.ArgumentException
    description: The size of *requiredCustomModifiers* or *optionalCustomModifiers* does not equal the size of *parameterTypes*.
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.-or-For the current dynamic type, the @'System.Reflection.Emit.TypeBuilder.IsGenericType' property is true, but the @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' property is false.
- uid: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  id: DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefinePInvokeMethod(String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)
  name.vb: DefinePInvokeMethod(String, String, MethodAttributes, CallingConventions, Type, Type(), CallingConvention, CharSet)
  fullName: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String, System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String, System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1876
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a PInvoke method given its name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the PInvoke flags.
  syntax:
    content: public MethodBuilder DefinePInvokeMethod(string name, string dllName, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, CallingConvention nativeCallConv, CharSet nativeCharSet)
    content.vb: Public Function DefinePInvokeMethod(name As String, dllName As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type(), nativeCallConv As CallingConvention, nativeCharSet As CharSet) As MethodBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the PInvoke method. *name* cannot contain embedded nulls.
    - id: dllName
      type: System.String
      description: The name of the DLL in which the PInvoke method is defined.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the method.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The method's calling convention.
    - id: returnType
      type: System.Type
      description: The method's return type.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the method's parameters.
    - id: nativeCallConv
      type: System.Runtime.InteropServices.CallingConvention
      description: The native calling convention.
    - id: nativeCharSet
      type: System.Runtime.InteropServices.CharSet
      description: The method's native character set.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: The defined PInvoke method.
  exceptions:
  - type: System.ArgumentException
    description: The method is not static.-or- The parent type is an interface.-or- The method is abstract.-or- The method was previously defined.-or- The length of *name* or *dllName* is zero.
  - type: System.ArgumentNullException
    description: '*name* or *dllName* is null.'
  - type: System.InvalidOperationException
    description: The containing type has been previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  id: DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefinePInvokeMethod(String, String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)
  name.vb: DefinePInvokeMethod(String, String, String, MethodAttributes, CallingConventions, Type, Type(), CallingConvention, CharSet)
  fullName: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String, System.String, System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String, System.String, System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1891
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a PInvoke method given its name, the name of the DLL in which the method is defined, the name of the entry point, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the PInvoke flags.
  syntax:
    content: public MethodBuilder DefinePInvokeMethod(string name, string dllName, string entryName, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, CallingConvention nativeCallConv, CharSet nativeCharSet)
    content.vb: Public Function DefinePInvokeMethod(name As String, dllName As String, entryName As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type(), nativeCallConv As CallingConvention, nativeCharSet As CharSet) As MethodBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the PInvoke method. *name* cannot contain embedded nulls.
    - id: dllName
      type: System.String
      description: The name of the DLL in which the PInvoke method is defined.
    - id: entryName
      type: System.String
      description: The name of the entry point in the DLL.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the method.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The method's calling convention.
    - id: returnType
      type: System.Type
      description: The method's return type.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the method's parameters.
    - id: nativeCallConv
      type: System.Runtime.InteropServices.CallingConvention
      description: The native calling convention.
    - id: nativeCharSet
      type: System.Runtime.InteropServices.CharSet
      description: The method's native character set.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: The defined PInvoke method.
  exceptions:
  - type: System.ArgumentException
    description: The method is not static.-or- The parent type is an interface.-or- The method is abstract.-or- The method was previously defined.-or- The length of *name*, *dllName*, or *entryName* is zero.
  - type: System.ArgumentNullException
    description: '*name*, *dllName*, or *entryName* is null.'
  - type: System.InvalidOperationException
    description: The containing type has been previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  id: DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefinePInvokeMethod(String, String, String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][], CallingConvention, CharSet)
  name.vb: DefinePInvokeMethod(String, String, String, MethodAttributes, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()(), CallingConvention, CharSet)
  fullName: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String, System.String, System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String, System.String, System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()(), System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1906
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a PInvoke method given its name, the name of the DLL in which the method is defined, the name of the entry point, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, the PInvoke flags, and custom modifiers for the parameters and return type.
  syntax:
    content: public MethodBuilder DefinePInvokeMethod(string name, string dllName, string entryName, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers, CallingConvention nativeCallConv, CharSet nativeCharSet)
    content.vb: Public Function DefinePInvokeMethod(name As String, dllName As String, entryName As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()(), nativeCallConv As CallingConvention, nativeCharSet As CharSet) As MethodBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the PInvoke method. *name* cannot contain embedded nulls.
    - id: dllName
      type: System.String
      description: The name of the DLL in which the PInvoke method is defined.
    - id: entryName
      type: System.String
      description: The name of the entry point in the DLL.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: The attributes of the method.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The method's calling convention.
    - id: returnType
      type: System.Type
      description: The method's return type.
    - id: returnTypeRequiredCustomModifiers
      type: System.Type[]
      description: An array of types representing the required custom modifiers, such as @'System.Runtime.CompilerServices.IsConst', for the return type of the method. If the return type has no required custom modifiers, specify null.
    - id: returnTypeOptionalCustomModifiers
      type: System.Type[]
      description: An array of types representing the optional custom modifiers, such as @'System.Runtime.CompilerServices.IsConst', for the return type of the method. If the return type has no optional custom modifiers, specify null.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the method's parameters.
    - id: parameterTypeRequiredCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter, such as @'System.Runtime.CompilerServices.IsConst'. If a particular parameter has no required custom modifiers, specify null instead of an array of types. If none of the parameters have required custom modifiers, specify null instead of an array of arrays.
    - id: parameterTypeOptionalCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter, such as @'System.Runtime.CompilerServices.IsConst'. If a particular parameter has no optional custom modifiers, specify null instead of an array of types. If none of the parameters have optional custom modifiers, specify null instead of an array of arrays.
    - id: nativeCallConv
      type: System.Runtime.InteropServices.CallingConvention
      description: The native calling convention.
    - id: nativeCharSet
      type: System.Runtime.InteropServices.CharSet
      description: The method's native character set.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: A @'System.Reflection.Emit.MethodBuilder' representing the defined PInvoke method.
  exceptions:
  - type: System.ArgumentException
    description: The method is not static.-or- The parent type is an interface.-or- The method is abstract.-or- The method was previously defined.-or- The length of *name*, *dllName*, or *entryName* is zero. -or-The size of *parameterTypeRequiredCustomModifiers* or *parameterTypeOptionalCustomModifiers* does not equal the size of *parameterTypes*.
  - type: System.ArgumentNullException
    description: '*name*, *dllName*, or *entryName* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.-or-For the current dynamic type, the @'System.Reflection.Emit.TypeBuilder.IsGenericType' property is true, but the @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' property is false.
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)
  id: DefineNestedType(System.String)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineNestedType(String)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1925
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a nested type, given its name.
  syntax:
    content: public TypeBuilder DefineNestedType(string name)
    content.vb: Public Function DefineNestedType(name As String) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The short name of the type. *name* cannot contain embedded nulls.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: The defined nested type.
  exceptions:
  - type: System.ArgumentException
    description: Length of *name* is zero or greater than 1023. -or-This operation would create a type with a duplicate @'System.Reflection.Emit.TypeBuilder.FullName' in the current assembly.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineNestedType(String, TypeAttributes, Type, Type[])
  name.vb: DefineNestedType(String, TypeAttributes, Type, Type())
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Type[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1934
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a nested type, given its name, attributes, the type that it extends, and the interfaces that it implements.
  syntax:
    content: public TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, Type[] interfaces)
    content.vb: Public Function DefineNestedType(name As String, attr As TypeAttributes, parent As Type, interfaces As Type()) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The short name of the type. *name* cannot contain embedded nulls.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attributes of the type.
    - id: parent
      type: System.Type
      description: The type that the nested type extends.
    - id: interfaces
      type: System.Type[]
      description: The interfaces that the nested type implements.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: The defined nested type.
  exceptions:
  - type: System.ArgumentException
    description: The nested attribute is not specified.-or- This type is sealed.-or- This type is an array.-or- This type is an interface, but the nested type is not an interface.-or- The length of *name* is zero or greater than 1023. -or-This operation would create a type with a duplicate @'System.Reflection.Emit.TypeBuilder.FullName' in the current assembly.
  - type: System.ArgumentNullException
    description: '*name* is null.-or-An element of the *interfaces* array is null.'
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineNestedType(String, TypeAttributes, Type)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1948
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a nested type, given its name, attributes, and the type that it extends.
  syntax:
    content: public TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent)
    content.vb: Public Function DefineNestedType(name As String, attr As TypeAttributes, parent As Type) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The short name of the type. *name* cannot contain embedded nulls.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attributes of the type.
    - id: parent
      type: System.Type
      description: The type that the nested type extends.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: The defined nested type.
  exceptions:
  - type: System.ArgumentException
    description: The nested attribute is not specified.-or- This type is sealed.-or- This type is an array.-or- This type is an interface, but the nested type is not an interface.-or- The length of *name* is zero or greater than 1023. -or-This operation would create a type with a duplicate @'System.Reflection.Emit.TypeBuilder.FullName' in the current assembly.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes)
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineNestedType(String, TypeAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1957
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a nested type, given its name and attributes.
  syntax:
    content: public TypeBuilder DefineNestedType(string name, TypeAttributes attr)
    content.vb: Public Function DefineNestedType(name As String, attr As TypeAttributes) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The short name of the type. *name* cannot contain embedded nulls.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attributes of the type.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: The defined nested type.
  exceptions:
  - type: System.ArgumentException
    description: The nested attribute is not specified.-or- This type is sealed.-or- This type is an array.-or- This type is an interface, but the nested type is not an interface.-or- The length of *name* is zero or greater than 1023. -or-This operation would create a type with a duplicate @'System.Reflection.Emit.TypeBuilder.FullName' in the current assembly.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineNestedType(String, TypeAttributes, Type, Int32)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1967
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a nested type, given its name, attributes, the total size of the type, and the type that it extends.
  syntax:
    content: public TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, int typeSize)
    content.vb: Public Function DefineNestedType(name As String, attr As TypeAttributes, parent As Type, typeSize As Integer) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The short name of the type. *name* cannot contain embedded nulls.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attributes of the type.
    - id: parent
      type: System.Type
      description: The type that the nested type extends.
    - id: typeSize
      type: System.Int32
      description: The total size of the type.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: The defined nested type.
  exceptions:
  - type: System.ArgumentException
    description: The nested attribute is not specified.-or- This type is sealed.-or- This type is an array.-or- This type is an interface, but the nested type is not an interface.-or- The length of *name* is zero or greater than 1023. -or-This operation would create a type with a duplicate @'System.Reflection.Emit.TypeBuilder.FullName' in the current assembly.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineNestedType(String, TypeAttributes, Type, PackingSize)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1980
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a nested type, given its name, attributes, the type that it extends, and the packing size.
  syntax:
    content: public TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, PackingSize packSize)
    content.vb: Public Function DefineNestedType(name As String, attr As TypeAttributes, parent As Type, packSize As PackingSize) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The short name of the type. *name* cannot contain embedded nulls.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attributes of the type.
    - id: parent
      type: System.Type
      description: The type that the nested type extends.
    - id: packSize
      type: System.Reflection.Emit.PackingSize
      description: The packing size of the type.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: The defined nested type.
  exceptions:
  - type: System.ArgumentException
    description: The nested attribute is not specified.-or- This type is sealed.-or- This type is an array.-or- This type is an interface, but the nested type is not an interface.-or- The length of *name* is zero or greater than 1023. -or-This operation would create a type with a duplicate @'System.Reflection.Emit.TypeBuilder.FullName' in the current assembly.
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineNestedType(String, TypeAttributes, Type, PackingSize, Int32)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 1993
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a nested type, given its name, attributes, size, and the type that it extends.
  syntax:
    content: public TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, PackingSize packSize, int typeSize)
    content.vb: Public Function DefineNestedType(name As String, attr As TypeAttributes, parent As Type, packSize As PackingSize, typeSize As Integer) As TypeBuilder
    parameters:
    - id: name
      type: System.String
      description: The short name of the type. *name* cannot contain embedded null values.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: The attributes of the type.
    - id: parent
      type: System.Type
      description: The type that the nested type extends.
    - id: packSize
      type: System.Reflection.Emit.PackingSize
      description: The packing size of the type.
    - id: typeSize
      type: System.Int32
      description: The total size of the type.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: The defined nested type.
- uid: System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)
  id: DefineField(System.String,System.Type,System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineField(String, Type, FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineField(System.String, System.Type, System.Reflection.FieldAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2014
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new field to the type, with the given name, attributes, and field type.
  syntax:
    content: public FieldBuilder DefineField(string fieldName, Type type, FieldAttributes attributes)
    content.vb: Public Function DefineField(fieldName As String, type As Type, attributes As FieldAttributes) As FieldBuilder
    parameters:
    - id: fieldName
      type: System.String
      description: The name of the field. *fieldName* cannot contain embedded nulls.
    - id: type
      type: System.Type
      description: The type of the field
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: The attributes of the field.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: The defined field.
  exceptions:
  - type: System.ArgumentException
    description: The length of *fieldName* is zero.-or- *type* is System.Void.-or- A total size was specified for the parent class of this field.
  - type: System.ArgumentNullException
    description: '*fieldName* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)
  id: DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineField(String, Type, Type[], Type[], FieldAttributes)
  name.vb: DefineField(String, Type, Type(), Type(), FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineField(System.String, System.Type, System.Type[], System.Type[], System.Reflection.FieldAttributes)
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineField(System.String, System.Type, System.Type(), System.Type(), System.Reflection.FieldAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2019
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new field to the type, with the given name, attributes, field type, and custom modifiers.
  syntax:
    content: public FieldBuilder DefineField(string fieldName, Type type, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers, FieldAttributes attributes)
    content.vb: Public Function DefineField(fieldName As String, type As Type, requiredCustomModifiers As Type(), optionalCustomModifiers As Type(), attributes As FieldAttributes) As FieldBuilder
    parameters:
    - id: fieldName
      type: System.String
      description: The name of the field. *fieldName* cannot contain embedded nulls.
    - id: type
      type: System.Type
      description: The type of the field
    - id: requiredCustomModifiers
      type: System.Type[]
      description: An array of types representing the required custom modifiers for the field, such as @'Microsoft.VisualC.IsConstModifier'.
    - id: optionalCustomModifiers
      type: System.Type[]
      description: An array of types representing the optional custom modifiers for the field, such as @'Microsoft.VisualC.IsConstModifier'.
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: The attributes of the field.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: The defined field.
  exceptions:
  - type: System.ArgumentException
    description: The length of *fieldName* is zero.-or- *type* is System.Void.-or- A total size was specified for the parent class of this field.
  - type: System.ArgumentNullException
    description: '*fieldName* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  id: DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineInitializedData(String, Byte[], FieldAttributes)
  name.vb: DefineInitializedData(String, Byte(), FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String, System.Byte[], System.Reflection.FieldAttributes)
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String, System.Byte(), System.Reflection.FieldAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2050
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines initialized data field in the .sdata section of the portable executable (PE) file.
  syntax:
    content: public FieldBuilder DefineInitializedData(string name, byte[] data, FieldAttributes attributes)
    content.vb: Public Function DefineInitializedData(name As String, data As Byte(), attributes As FieldAttributes) As FieldBuilder
    parameters:
    - id: name
      type: System.String
      description: The name used to refer to the data. *name* cannot contain embedded nulls.
    - id: data
      type: System.Byte[]
      description: The blob of data.
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: The attributes for the field.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: A field to reference the data.
  exceptions:
  - type: System.ArgumentException
    description: Length of *name* is zero.-or- The size of the data is less than or equal to zero, or greater than or equal to 0x3f0000.
  - type: System.ArgumentNullException
    description: '*name* or *data* is null.'
  - type: System.InvalidOperationException
    description: '@''System.Reflection.Emit.TypeBuilder.CreateType'' has been previously called.'
- uid: System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  id: DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineUninitializedData(String, Int32, FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String, System.Int32, System.Reflection.FieldAttributes)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2077
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.
  syntax:
    content: public FieldBuilder DefineUninitializedData(string name, int size, FieldAttributes attributes)
    content.vb: Public Function DefineUninitializedData(name As String, size As Integer, attributes As FieldAttributes) As FieldBuilder
    parameters:
    - id: name
      type: System.String
      description: The name used to refer to the data. *name* cannot contain embedded nulls.
    - id: size
      type: System.Int32
      description: The size of the data field.
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: The attributes for the field.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: A field to reference the data.
  exceptions:
  - type: System.ArgumentException
    description: Length of *name* is zero.-or- *size* is less than or equal to zero, or greater than or equal to 0x003f0000.
  - type: System.ArgumentNullException
    description: '*name* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])
  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineProperty(String, PropertyAttributes, Type, Type[])
  name.vb: DefineProperty(String, PropertyAttributes, Type, Type())
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Type, System.Type[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Type, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2101
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new property to the type, with the given name and property signature.
  syntax:
    content: public PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, Type returnType, Type[] parameterTypes)
    content.vb: Public Function DefineProperty(name As String, attributes As PropertyAttributes, returnType As Type, parameterTypes As Type()) As PropertyBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the property. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.PropertyAttributes
      description: The attributes of the property.
    - id: returnType
      type: System.Type
      description: The return type of the property.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the parameters of the property.
    return:
      type: System.Reflection.Emit.PropertyBuilder
      description: The defined property.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.
  - type: System.ArgumentNullException
    description: '*name* is null. -or- Any of the elements of the *parameterTypes* array is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type[])
  name.vb: DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type())
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Reflection.CallingConventions, System.Type, System.Type[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Reflection.CallingConventions, System.Type, System.Type())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2106
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new property to the type, with the given name, attributes, calling convention, and property signature.
  syntax:
    content: public PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)
    content.vb: Public Function DefineProperty(name As String, attributes As PropertyAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As PropertyBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the property. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.PropertyAttributes
      description: The attributes of the property.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention of the property accessors.
    - id: returnType
      type: System.Type
      description: The return type of the property.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the parameters of the property.
    return:
      type: System.Reflection.Emit.PropertyBuilder
      description: The defined property.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.
  - type: System.ArgumentNullException
    description: '*name* is null. -or- Any of the elements of the *parameterTypes* array is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineProperty(String, PropertyAttributes, Type, Type[], Type[], Type[], Type[][], Type[][])
  name.vb: DefineProperty(String, PropertyAttributes, Type, Type(), Type(), Type(), Type()(), Type()())
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2113
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new property to the type, with the given name, property signature, and custom modifiers.
  syntax:
    content: public PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers)
    content.vb: Public Function DefineProperty(name As String, attributes As PropertyAttributes, returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()()) As PropertyBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the property. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.PropertyAttributes
      description: The attributes of the property.
    - id: returnType
      type: System.Type
      description: The return type of the property.
    - id: returnTypeRequiredCustomModifiers
      type: System.Type[]
      description: An array of types representing the required custom modifiers, such as @'System.Runtime.CompilerServices.IsConst', for the return type of the property. If the return type has no required custom modifiers, specify null.
    - id: returnTypeOptionalCustomModifiers
      type: System.Type[]
      description: An array of types representing the optional custom modifiers, such as @'System.Runtime.CompilerServices.IsConst', for the return type of the property. If the return type has no optional custom modifiers, specify null.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the parameters of the property.
    - id: parameterTypeRequiredCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter, such as @'System.Runtime.CompilerServices.IsConst'. If a particular parameter has no required custom modifiers, specify null instead of an array of types. If none of the parameters have required custom modifiers, specify null instead of an array of arrays.
    - id: parameterTypeOptionalCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter, such as @'System.Runtime.CompilerServices.IsConst'. If a particular parameter has no optional custom modifiers, specify null instead of an array of types. If none of the parameters have optional custom modifiers, specify null instead of an array of arrays.
    return:
      type: System.Reflection.Emit.PropertyBuilder
      description: The defined property.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.
  - type: System.ArgumentNullException
    description: '*name* is null-or- Any of the elements of the *parameterTypes* array is null'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])
  name.vb: DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])
  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2122
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new property to the type, with the given name, calling convention, property signature, and custom modifiers.
  syntax:
    content: public PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers)
    content.vb: Public Function DefineProperty(name As String, attributes As PropertyAttributes, callingConvention As CallingConventions, returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()()) As PropertyBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the property. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.PropertyAttributes
      description: The attributes of the property.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: The calling convention of the property accessors.
    - id: returnType
      type: System.Type
      description: The return type of the property.
    - id: returnTypeRequiredCustomModifiers
      type: System.Type[]
      description: An array of types representing the required custom modifiers, such as @'System.Runtime.CompilerServices.IsConst', for the return type of the property. If the return type has no required custom modifiers, specify null.
    - id: returnTypeOptionalCustomModifiers
      type: System.Type[]
      description: An array of types representing the optional custom modifiers, such as @'System.Runtime.CompilerServices.IsConst', for the return type of the property. If the return type has no optional custom modifiers, specify null.
    - id: parameterTypes
      type: System.Type[]
      description: The types of the parameters of the property.
    - id: parameterTypeRequiredCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter, such as @'System.Runtime.CompilerServices.IsConst'. If a particular parameter has no required custom modifiers, specify null instead of an array of types. If none of the parameters have required custom modifiers, specify null instead of an array of arrays.
    - id: parameterTypeOptionalCustomModifiers
      type: System.Type[][]
      description: An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter, such as @'System.Runtime.CompilerServices.IsConst'. If a particular parameter has no optional custom modifiers, specify null instead of an array of types. If none of the parameters have optional custom modifiers, specify null instead of an array of arrays.
    return:
      type: System.Reflection.Emit.PropertyBuilder
      description: The defined property.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.
  - type: System.ArgumentNullException
    description: '*name* is null. -or- Any of the elements of the *parameterTypes* array is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)
  id: DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: DefineEvent(String, EventAttributes, Type)
  fullName: System.Reflection.Emit.TypeBuilder.DefineEvent(System.String, System.Reflection.EventAttributes, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2184
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds a new event to the type, with the given name, attributes and event type.
  syntax:
    content: public EventBuilder DefineEvent(string name, EventAttributes attributes, Type eventtype)
    content.vb: Public Function DefineEvent(name As String, attributes As EventAttributes, eventtype As Type) As EventBuilder
    parameters:
    - id: name
      type: System.String
      description: The name of the event. *name* cannot contain embedded nulls.
    - id: attributes
      type: System.Reflection.EventAttributes
      description: The attributes of the event.
    - id: eventtype
      type: System.Type
      description: The type of the event.
    return:
      type: System.Reflection.Emit.EventBuilder
      description: The defined event.
  exceptions:
  - type: System.ArgumentException
    description: The length of *name* is zero.
  - type: System.ArgumentNullException
    description: '*name* is null.-or- *eventtype* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.CreateTypeInfo
  id: CreateTypeInfo
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: CreateTypeInfo()
  fullName: System.Reflection.Emit.TypeBuilder.CreateTypeInfo()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2235
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a @'System.Reflection.TypeInfo' object that represents this type.
  syntax:
    content: public TypeInfo CreateTypeInfo()
    content.vb: Public Function CreateTypeInfo As TypeInfo
    return:
      type: System.Reflection.TypeInfo
      description: An object that represents this type.
- uid: System.Reflection.Emit.TypeBuilder.CreateType
  id: CreateType
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: CreateType()
  fullName: System.Reflection.Emit.TypeBuilder.CreateType()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2244
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Creates a @'System.Type' object for the class. After defining fields and methods on the class, CreateType is called in order to load its Type object.
  syntax:
    content: public Type CreateType()
    content.vb: Public Function CreateType As Type
    return:
      type: System.Type
      description: Returns the new @'System.Type' object for this class.
  exceptions:
  - type: System.InvalidOperationException
    description: The enclosing type has not been created.-or- This type is non-abstract and contains an abstract method.-or- This type is not an abstract class or an interface and has a method without a method body.
  - type: System.NotSupportedException
    description: The type contains invalid Microsoft intermediate language (MSIL) code.-or- The branch target is specified using a 1-byte offset, but the target is at a distance greater than 127 bytes from the branch.
  - type: System.TypeLoadException
    description: The type cannot be loaded. For example, it contains a static method that has the calling convention @'System.Reflection.CallingConventions.HasThis'.
- uid: System.Reflection.Emit.TypeBuilder.Size
  id: Size
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: Size
  fullName: System.Reflection.Emit.TypeBuilder.Size
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2447
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the total size of a type.
  syntax:
    content: public int Size { get; }
    content.vb: Public ReadOnly Property Size As Integer
    parameters: []
    return:
      type: System.Int32
      description: "Read-only. Retrieves this type’s total size."
- uid: System.Reflection.Emit.TypeBuilder.PackingSize
  id: PackingSize
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: PackingSize
  fullName: System.Reflection.Emit.TypeBuilder.PackingSize
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2452
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the packing size of this type.
  syntax:
    content: public PackingSize PackingSize { get; }
    content.vb: Public ReadOnly Property PackingSize As PackingSize
    parameters: []
    return:
      type: System.Reflection.Emit.PackingSize
      description: Read-only. Retrieves the packing size of this type.
- uid: System.Reflection.Emit.TypeBuilder.SetParent(System.Type)
  id: SetParent(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: SetParent(Type)
  fullName: System.Reflection.Emit.TypeBuilder.SetParent(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2457
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the base type of the type currently under construction.
  syntax:
    content: public void SetParent(Type parent)
    content.vb: Public Sub SetParent(parent As Type)
    parameters:
    - id: parent
      type: System.Type
      description: The new base type.
  exceptions:
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.-or-*parent* is null, and the current instance represents an interface whose attributes do not include @'System.Reflection.TypeAttributes.Abstract'.-or-For the current dynamic type, the @'System.Reflection.Emit.TypeBuilder.IsGenericType' property is true, but the @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' property is false.
  - type: System.ArgumentException
    description: '*parent* is an interface. This exception condition is new in the .NET Framework version 2.0.'
- uid: System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)
  id: AddInterfaceImplementation(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: AddInterfaceImplementation(Type)
  fullName: System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2487
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds an interface that this type implements.
  syntax:
    content: public void AddInterfaceImplementation(Type interfaceType)
    content.vb: Public Sub AddInterfaceImplementation(interfaceType As Type)
    parameters:
    - id: interfaceType
      type: System.Type
      description: The interface that this type implements.
  exceptions:
  - type: System.ArgumentNullException
    description: '*interfaceType* is null.'
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.TypeToken
  id: TypeToken
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: TypeToken
  fullName: System.Reflection.Emit.TypeBuilder.TypeToken
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2551
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the type token of this type.
  syntax:
    content: public TypeToken TypeToken { get; }
    content.vb: Public ReadOnly Property TypeToken As TypeToken
    parameters: []
    return:
      type: System.Reflection.Emit.TypeToken
      description: Read-only. Returns the TypeToken of this type.
  exceptions:
  - type: System.InvalidOperationException
    description: The type was previously created using @'System.Reflection.Emit.TypeBuilder.CreateType'.
- uid: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
  fullName: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  fullName.vb: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2564
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets a custom attribute using a specified custom attribute blob.
  syntax:
    content: public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte blob representing the attributes.
  exceptions:
  - type: System.ArgumentNullException
    description: '*con* or *binaryAttribute* is null.'
  - type: System.InvalidOperationException
    description: For the current dynamic type, the @'System.Reflection.Emit.TypeBuilder.IsGenericType' property is true, but the @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' property is false.
- uid: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.TypeBuilder
  href: System.Reflection.Emit.TypeBuilder.yml
  name: SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 2582
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a custom attribute builder.
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class to define the custom attribute.
  exceptions:
  - type: System.ArgumentNullException
    description: '*customBuilder* is null.'
  - type: System.InvalidOperationException
    description: For the current dynamic type, the @'System.Reflection.Emit.TypeBuilder.IsGenericType' property is true, but the @'System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition' property is false.
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: MemberInfo
  fullName: System.Reflection.MemberInfo
  type: Class
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
  type: Class
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: TypeInfo
  fullName: System.Reflection.TypeInfo
  type: Class
- uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: IReflectableType.GetTypeInfo()
  name.vb: System.Reflection.IReflectableType.GetTypeInfo()
  fullName: System.Reflection.TypeInfo.System.Reflection.IReflectableType.GetTypeInfo()
  spec.csharp:
  - uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
    name: IReflectableType.GetTypeInfo
    fullName: System.Reflection.TypeInfo.System.Reflection.IReflectableType.GetTypeInfo
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
    name: System.Reflection.IReflectableType.GetTypeInfo
    fullName: System.Reflection.TypeInfo.System.Reflection.IReflectableType.GetTypeInfo
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.TypeInfo.AsType
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: AsType()
  fullName: System.Reflection.TypeInfo.AsType()
  spec.csharp:
  - uid: System.Reflection.TypeInfo.AsType
    name: AsType
    fullName: System.Reflection.TypeInfo.AsType
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.AsType
    name: AsType
    fullName: System.Reflection.TypeInfo.AsType
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.TypeInfo.GenericTypeParameters
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: GenericTypeParameters
  fullName: System.Reflection.TypeInfo.GenericTypeParameters
- uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: GetDeclaredEvent(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
    name: GetDeclaredEvent
    fullName: System.Reflection.TypeInfo.GetDeclaredEvent
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
    name: GetDeclaredEvent
    fullName: System.Reflection.TypeInfo.GetDeclaredEvent
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: GetDeclaredField(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredField(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)
    name: GetDeclaredField
    fullName: System.Reflection.TypeInfo.GetDeclaredField
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)
    name: GetDeclaredField
    fullName: System.Reflection.TypeInfo.GetDeclaredField
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: GetDeclaredMethod(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
    name: GetDeclaredMethod
    fullName: System.Reflection.TypeInfo.GetDeclaredMethod
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
    name: GetDeclaredMethod
    fullName: System.Reflection.TypeInfo.GetDeclaredMethod
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: GetDeclaredMethods(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
    name: GetDeclaredMethods
    fullName: System.Reflection.TypeInfo.GetDeclaredMethods
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
    name: GetDeclaredMethods
    fullName: System.Reflection.TypeInfo.GetDeclaredMethods
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: GetDeclaredNestedType(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
    name: GetDeclaredNestedType
    fullName: System.Reflection.TypeInfo.GetDeclaredNestedType
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
    name: GetDeclaredNestedType
    fullName: System.Reflection.TypeInfo.GetDeclaredNestedType
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: GetDeclaredProperty(String)
  fullName: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
    name: GetDeclaredProperty
    fullName: System.Reflection.TypeInfo.GetDeclaredProperty
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
    name: GetDeclaredProperty
    fullName: System.Reflection.TypeInfo.GetDeclaredProperty
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Reflection.TypeInfo.DeclaredConstructors
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: DeclaredConstructors
  fullName: System.Reflection.TypeInfo.DeclaredConstructors
- uid: System.Reflection.TypeInfo.DeclaredEvents
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: DeclaredEvents
  fullName: System.Reflection.TypeInfo.DeclaredEvents
- uid: System.Reflection.TypeInfo.DeclaredFields
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: DeclaredFields
  fullName: System.Reflection.TypeInfo.DeclaredFields
- uid: System.Reflection.TypeInfo.DeclaredMembers
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: DeclaredMembers
  fullName: System.Reflection.TypeInfo.DeclaredMembers
- uid: System.Reflection.TypeInfo.DeclaredMethods
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: DeclaredMethods
  fullName: System.Reflection.TypeInfo.DeclaredMethods
- uid: System.Reflection.TypeInfo.DeclaredNestedTypes
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: DeclaredNestedTypes
  fullName: System.Reflection.TypeInfo.DeclaredNestedTypes
- uid: System.Reflection.TypeInfo.DeclaredProperties
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: DeclaredProperties
  fullName: System.Reflection.TypeInfo.DeclaredProperties
- uid: System.Reflection.TypeInfo.ImplementedInterfaces
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: ImplementedInterfaces
  fullName: System.Reflection.TypeInfo.ImplementedInterfaces
- uid: System.Type.FilterAttribute
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: FilterAttribute
  fullName: System.Type.FilterAttribute
- uid: System.Type.FilterName
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: FilterName
  fullName: System.Type.FilterName
- uid: System.Type.FilterNameIgnoreCase
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: FilterNameIgnoreCase
  fullName: System.Type.FilterNameIgnoreCase
- uid: System.Type.Missing
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: Missing
  fullName: System.Type.Missing
- uid: System.Type.Delimiter
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: Delimiter
  fullName: System.Type.Delimiter
- uid: System.Type.EmptyTypes
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: EmptyTypes
  fullName: System.Type.EmptyTypes
- uid: System.Type.MemberType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: MemberType
  fullName: System.Type.MemberType
- uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetType(String, Boolean, Boolean)
  fullName: System.Type.GetType(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Type.GetType(System.String,System.Boolean)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetType(String, Boolean)
  fullName: System.Type.GetType(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetType(System.String,System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetType(System.String,System.Boolean)
    name: GetType
    fullName: System.Type.GetType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Type.GetType(System.String)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetType(String)
  fullName: System.Type.GetType(System.String)
  spec.csharp:
  - uid: System.Type.GetType(System.String)
    name: GetType
    fullName: System.Type.GetType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetType(System.String)
    name: GetType
    fullName: System.Type.GetType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: ReflectionOnlyGetType(String, Boolean, Boolean)
  fullName: System.Type.ReflectionOnlyGetType(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
    name: ReflectionOnlyGetType
    fullName: System.Type.ReflectionOnlyGetType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
    name: ReflectionOnlyGetType
    fullName: System.Type.ReflectionOnlyGetType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Type.StructLayoutAttribute
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: StructLayoutAttribute
  fullName: System.Type.StructLayoutAttribute
- uid: System.Type.GetTypeFromProgID(System.String)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeFromProgID(String)
  fullName: System.Type.GetTypeFromProgID(System.String)
  spec.csharp:
  - uid: System.Type.GetTypeFromProgID(System.String)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromProgID(System.String)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Type.GetTypeFromProgID(System.String,System.Boolean)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeFromProgID(String, Boolean)
  fullName: System.Type.GetTypeFromProgID(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetTypeFromProgID(System.String,System.Boolean)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromProgID(System.String,System.Boolean)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Type.GetTypeFromProgID(System.String,System.String)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeFromProgID(String, String)
  fullName: System.Type.GetTypeFromProgID(System.String, System.String)
  spec.csharp:
  - uid: System.Type.GetTypeFromProgID(System.String,System.String)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromProgID(System.String,System.String)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeFromProgID(String, String, Boolean)
  fullName: System.Type.GetTypeFromProgID(System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
    name: GetTypeFromProgID
    fullName: System.Type.GetTypeFromProgID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Type.GetTypeFromCLSID(System.Guid)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeFromCLSID(Guid)
  fullName: System.Type.GetTypeFromCLSID(System.Guid)
  spec.csharp:
  - uid: System.Type.GetTypeFromCLSID(System.Guid)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    href: System.Guid.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromCLSID(System.Guid)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    href: System.Guid.yml
  - name: )
    fullName: )
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeFromCLSID(Guid, Boolean)
  fullName: System.Type.GetTypeFromCLSID(System.Guid, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    href: System.Guid.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    href: System.Guid.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.String)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeFromCLSID(Guid, String)
  fullName: System.Type.GetTypeFromCLSID(System.Guid, System.String)
  spec.csharp:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    href: System.Guid.yml
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    href: System.Guid.yml
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeFromCLSID(Guid, String, Boolean)
  fullName: System.Type.GetTypeFromCLSID(System.Guid, System.String, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    href: System.Guid.yml
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
    name: GetTypeFromCLSID
    fullName: System.Type.GetTypeFromCLSID
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    href: System.Guid.yml
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Type.GetTypeCode(System.Type)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeCode(Type)
  fullName: System.Type.GetTypeCode(System.Type)
  spec.csharp:
  - uid: System.Type.GetTypeCode(System.Type)
    name: GetTypeCode
    fullName: System.Type.GetTypeCode
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeCode(System.Type)
    name: GetTypeCode
    fullName: System.Type.GetTypeCode
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
- uid: System.Type.GetTypeCodeImpl
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeCodeImpl()
  fullName: System.Type.GetTypeCodeImpl()
  spec.csharp:
  - uid: System.Type.GetTypeCodeImpl
    name: GetTypeCodeImpl
    fullName: System.Type.GetTypeCodeImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeCodeImpl
    name: GetTypeCodeImpl
    fullName: System.Type.GetTypeCodeImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.DefaultBinder
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: DefaultBinder
  fullName: System.Type.DefaultBinder
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)
  name.vb: InvokeMember(String, BindingFlags, Binder, Object, Object(), CultureInfo)
  fullName: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Globalization.CultureInfo)
  fullName.vb: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object(), System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
    name: InvokeMember
    fullName: System.Type.InvokeMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    href: System.Globalization.CultureInfo.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
    name: InvokeMember
    fullName: System.Type.InvokeMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    href: System.Globalization.CultureInfo.yml
  - name: )
    fullName: )
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: InvokeMember(String, BindingFlags, Binder, Object, Object[])
  name.vb: InvokeMember(String, BindingFlags, Binder, Object, Object())
  fullName: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[])
  fullName.vb: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object())
  spec.csharp:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
    name: InvokeMember
    fullName: System.Type.InvokeMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
    name: InvokeMember
    fullName: System.Type.InvokeMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetTypeHandle(System.Object)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeHandle(Object)
  fullName: System.Type.GetTypeHandle(System.Object)
  spec.csharp:
  - uid: System.Type.GetTypeHandle(System.Object)
    name: GetTypeHandle
    fullName: System.Type.GetTypeHandle
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeHandle(System.Object)
    name: GetTypeHandle
    fullName: System.Type.GetTypeHandle
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  parent: System.Type
  isExternal: true
  href: System.RuntimeTypeHandle.yml
  name: GetTypeFromHandle(RuntimeTypeHandle)
  fullName: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  spec.csharp:
  - uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
    name: GetTypeFromHandle
    fullName: System.Type.GetTypeFromHandle
    isExternal: true
  - name: (
    fullName: (
  - uid: System.RuntimeTypeHandle
    name: RuntimeTypeHandle
    fullName: System.RuntimeTypeHandle
    href: System.RuntimeTypeHandle.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
    name: GetTypeFromHandle
    fullName: System.Type.GetTypeFromHandle
    isExternal: true
  - name: (
    fullName: (
  - uid: System.RuntimeTypeHandle
    name: RuntimeTypeHandle
    fullName: System.RuntimeTypeHandle
    href: System.RuntimeTypeHandle.yml
  - name: )
    fullName: )
- uid: System.Type.GetArrayRank
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetArrayRank()
  fullName: System.Type.GetArrayRank()
  spec.csharp:
  - uid: System.Type.GetArrayRank
    name: GetArrayRank
    fullName: System.Type.GetArrayRank
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetArrayRank
    name: GetArrayRank
    fullName: System.Type.GetArrayRank
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  name.vb: GetConstructor(BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  fullName: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    href: System.Reflection.CallingConventions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    href: System.Reflection.CallingConventions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])
  name.vb: GetConstructor(BindingFlags, Binder, Type(), ParameterModifier())
  fullName: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type(), System.Reflection.ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetConstructor(System.Type[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetConstructor(Type[])
  name.vb: GetConstructor(Type())
  fullName: System.Type.GetConstructor(System.Type[])
  fullName.vb: System.Type.GetConstructor(System.Type())
  spec.csharp:
  - uid: System.Type.GetConstructor(System.Type[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructor(System.Type[])
    name: GetConstructor
    fullName: System.Type.GetConstructor
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetConstructors
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetConstructors()
  fullName: System.Type.GetConstructors()
  spec.csharp:
  - uid: System.Type.GetConstructors
    name: GetConstructors
    fullName: System.Type.GetConstructors
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructors
    name: GetConstructors
    fullName: System.Type.GetConstructors
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.TypeInitializer
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: TypeInitializer
  fullName: System.Type.TypeInitializer
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  name.vb: GetMethod(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  fullName: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    href: System.Reflection.CallingConventions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    href: System.Reflection.CallingConventions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])
  name.vb: GetMethod(String, BindingFlags, Binder, Type(), ParameterModifier())
  fullName: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type(), System.Reflection.ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMethod(String, Type[], ParameterModifier[])
  name.vb: GetMethod(String, Type(), ParameterModifier())
  fullName: System.Type.GetMethod(System.String, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Type.GetMethod(System.String, System.Type(), System.Reflection.ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetMethod(System.String,System.Type[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMethod(String, Type[])
  name.vb: GetMethod(String, Type())
  fullName: System.Type.GetMethod(System.String, System.Type[])
  fullName.vb: System.Type.GetMethod(System.String, System.Type())
  spec.csharp:
  - uid: System.Type.GetMethod(System.String,System.Type[])
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String,System.Type[])
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMethod(String, BindingFlags)
  fullName: System.Type.GetMethod(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Type.GetMethod(System.String)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMethod(String)
  fullName: System.Type.GetMethod(System.String)
  spec.csharp:
  - uid: System.Type.GetMethod(System.String)
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethod(System.String)
    name: GetMethod
    fullName: System.Type.GetMethod
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Type.GetMethods
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMethods()
  fullName: System.Type.GetMethods()
  spec.csharp:
  - uid: System.Type.GetMethods
    name: GetMethods
    fullName: System.Type.GetMethods
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethods
    name: GetMethods
    fullName: System.Type.GetMethods
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.GetField(System.String)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetField(String)
  fullName: System.Type.GetField(System.String)
  spec.csharp:
  - uid: System.Type.GetField(System.String)
    name: GetField
    fullName: System.Type.GetField
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetField(System.String)
    name: GetField
    fullName: System.Type.GetField
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Type.GetFields
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetFields()
  fullName: System.Type.GetFields()
  spec.csharp:
  - uid: System.Type.GetFields
    name: GetFields
    fullName: System.Type.GetFields
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetFields
    name: GetFields
    fullName: System.Type.GetFields
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.GetInterface(System.String)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetInterface(String)
  fullName: System.Type.GetInterface(System.String)
  spec.csharp:
  - uid: System.Type.GetInterface(System.String)
    name: GetInterface
    fullName: System.Type.GetInterface
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetInterface(System.String)
    name: GetInterface
    fullName: System.Type.GetInterface
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: FindInterfaces(TypeFilter, Object)
  fullName: System.Type.FindInterfaces(System.Reflection.TypeFilter, System.Object)
  spec.csharp:
  - uid: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
    name: FindInterfaces
    fullName: System.Type.FindInterfaces
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.TypeFilter
    name: TypeFilter
    fullName: System.Reflection.TypeFilter
    href: System.Reflection.TypeFilter.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
    name: FindInterfaces
    fullName: System.Type.FindInterfaces
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.TypeFilter
    name: TypeFilter
    fullName: System.Reflection.TypeFilter
    href: System.Reflection.TypeFilter.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Type.GetEvent(System.String)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetEvent(String)
  fullName: System.Type.GetEvent(System.String)
  spec.csharp:
  - uid: System.Type.GetEvent(System.String)
    name: GetEvent
    fullName: System.Type.GetEvent
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEvent(System.String)
    name: GetEvent
    fullName: System.Type.GetEvent
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  name.vb: GetProperty(String, BindingFlags, Binder, Type, Type(), ParameterModifier())
  fullName: System.Type.GetProperty(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Type.GetProperty(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type(), System.Reflection.ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetProperty(String, Type, Type[], ParameterModifier[])
  name.vb: GetProperty(String, Type, Type(), ParameterModifier())
  fullName: System.Type.GetProperty(System.String, System.Type, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Type.GetProperty(System.String, System.Type, System.Type(), System.Reflection.ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetProperty(String, BindingFlags)
  fullName: System.Type.GetProperty(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Type.GetProperty(System.String,System.Type,System.Type[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetProperty(String, Type, Type[])
  name.vb: GetProperty(String, Type, Type())
  fullName: System.Type.GetProperty(System.String, System.Type, System.Type[])
  fullName.vb: System.Type.GetProperty(System.String, System.Type, System.Type())
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[])
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[])
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetProperty(System.String,System.Type[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetProperty(String, Type[])
  name.vb: GetProperty(String, Type())
  fullName: System.Type.GetProperty(System.String, System.Type[])
  fullName.vb: System.Type.GetProperty(System.String, System.Type())
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Type[])
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Type[])
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetProperty(System.String,System.Type)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetProperty(String, Type)
  fullName: System.Type.GetProperty(System.String, System.Type)
  spec.csharp:
  - uid: System.Type.GetProperty(System.String,System.Type)
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String,System.Type)
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
- uid: System.Type.GetProperty(System.String)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetProperty(String)
  fullName: System.Type.GetProperty(System.String)
  spec.csharp:
  - uid: System.Type.GetProperty(System.String)
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperty(System.String)
    name: GetProperty
    fullName: System.Type.GetProperty
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Type.GetProperties
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetProperties()
  fullName: System.Type.GetProperties()
  spec.csharp:
  - uid: System.Type.GetProperties
    name: GetProperties
    fullName: System.Type.GetProperties
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperties
    name: GetProperties
    fullName: System.Type.GetProperties
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.GetNestedTypes
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetNestedTypes()
  fullName: System.Type.GetNestedTypes()
  spec.csharp:
  - uid: System.Type.GetNestedTypes
    name: GetNestedTypes
    fullName: System.Type.GetNestedTypes
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetNestedTypes
    name: GetNestedTypes
    fullName: System.Type.GetNestedTypes
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.GetNestedType(System.String)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetNestedType(String)
  fullName: System.Type.GetNestedType(System.String)
  spec.csharp:
  - uid: System.Type.GetNestedType(System.String)
    name: GetNestedType
    fullName: System.Type.GetNestedType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetNestedType(System.String)
    name: GetNestedType
    fullName: System.Type.GetNestedType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Type.GetMember(System.String)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMember(String)
  fullName: System.Type.GetMember(System.String)
  spec.csharp:
  - uid: System.Type.GetMember(System.String)
    name: GetMember
    fullName: System.Type.GetMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMember(System.String)
    name: GetMember
    fullName: System.Type.GetMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: )
    fullName: )
- uid: System.Type.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMember(String, BindingFlags)
  fullName: System.Type.GetMember(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetMember(System.String,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Type.GetMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMember(System.String,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Type.GetMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Type.GetMembers
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMembers()
  fullName: System.Type.GetMembers()
  spec.csharp:
  - uid: System.Type.GetMembers
    name: GetMembers
    fullName: System.Type.GetMembers
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMembers
    name: GetMembers
    fullName: System.Type.GetMembers
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.GetDefaultMembers
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetDefaultMembers()
  fullName: System.Type.GetDefaultMembers()
  spec.csharp:
  - uid: System.Type.GetDefaultMembers
    name: GetDefaultMembers
    fullName: System.Type.GetDefaultMembers
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetDefaultMembers
    name: GetDefaultMembers
    fullName: System.Type.GetDefaultMembers
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)
  fullName: System.Type.FindMembers(System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, System.Object)
  spec.csharp:
  - uid: System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
    name: FindMembers
    fullName: System.Type.FindMembers
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.MemberTypes
    name: MemberTypes
    fullName: System.Reflection.MemberTypes
    href: System.Reflection.MemberTypes.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberFilter
    name: MemberFilter
    fullName: System.Reflection.MemberFilter
    href: System.Reflection.MemberFilter.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
    name: FindMembers
    fullName: System.Type.FindMembers
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.MemberTypes
    name: MemberTypes
    fullName: System.Reflection.MemberTypes
    href: System.Reflection.MemberTypes.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberFilter
    name: MemberFilter
    fullName: System.Reflection.MemberFilter
    href: System.Reflection.MemberFilter.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Type.IsNested
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsNested
  fullName: System.Type.IsNested
- uid: System.Type.Attributes
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: Attributes
  fullName: System.Type.Attributes
- uid: System.Type.IsVisible
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsVisible
  fullName: System.Type.IsVisible
- uid: System.Type.IsNotPublic
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsNotPublic
  fullName: System.Type.IsNotPublic
- uid: System.Type.IsPublic
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsPublic
  fullName: System.Type.IsPublic
- uid: System.Type.IsNestedPublic
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsNestedPublic
  fullName: System.Type.IsNestedPublic
- uid: System.Type.IsNestedPrivate
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsNestedPrivate
  fullName: System.Type.IsNestedPrivate
- uid: System.Type.IsNestedFamily
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsNestedFamily
  fullName: System.Type.IsNestedFamily
- uid: System.Type.IsNestedAssembly
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsNestedAssembly
  fullName: System.Type.IsNestedAssembly
- uid: System.Type.IsNestedFamANDAssem
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsNestedFamANDAssem
  fullName: System.Type.IsNestedFamANDAssem
- uid: System.Type.IsNestedFamORAssem
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsNestedFamORAssem
  fullName: System.Type.IsNestedFamORAssem
- uid: System.Type.IsAutoLayout
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsAutoLayout
  fullName: System.Type.IsAutoLayout
- uid: System.Type.IsLayoutSequential
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsLayoutSequential
  fullName: System.Type.IsLayoutSequential
- uid: System.Type.IsExplicitLayout
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsExplicitLayout
  fullName: System.Type.IsExplicitLayout
- uid: System.Type.IsClass
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsClass
  fullName: System.Type.IsClass
- uid: System.Type.IsInterface
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsInterface
  fullName: System.Type.IsInterface
- uid: System.Type.IsValueType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsValueType
  fullName: System.Type.IsValueType
- uid: System.Type.IsAbstract
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsAbstract
  fullName: System.Type.IsAbstract
- uid: System.Type.IsSealed
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsSealed
  fullName: System.Type.IsSealed
- uid: System.Type.IsEnum
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsEnum
  fullName: System.Type.IsEnum
- uid: System.Type.IsSpecialName
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsSpecialName
  fullName: System.Type.IsSpecialName
- uid: System.Type.IsImport
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsImport
  fullName: System.Type.IsImport
- uid: System.Type.IsSerializable
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsSerializable
  fullName: System.Type.IsSerializable
- uid: System.Type.IsAnsiClass
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsAnsiClass
  fullName: System.Type.IsAnsiClass
- uid: System.Type.IsUnicodeClass
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsUnicodeClass
  fullName: System.Type.IsUnicodeClass
- uid: System.Type.IsAutoClass
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsAutoClass
  fullName: System.Type.IsAutoClass
- uid: System.Type.IsArray
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsArray
  fullName: System.Type.IsArray
- uid: System.Type.ContainsGenericParameters
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: ContainsGenericParameters
  fullName: System.Type.ContainsGenericParameters
- uid: System.Type.GetGenericParameterConstraints
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetGenericParameterConstraints()
  fullName: System.Type.GetGenericParameterConstraints()
  spec.csharp:
  - uid: System.Type.GetGenericParameterConstraints
    name: GetGenericParameterConstraints
    fullName: System.Type.GetGenericParameterConstraints
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetGenericParameterConstraints
    name: GetGenericParameterConstraints
    fullName: System.Type.GetGenericParameterConstraints
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.IsByRef
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsByRef
  fullName: System.Type.IsByRef
- uid: System.Type.IsPointer
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsPointer
  fullName: System.Type.IsPointer
- uid: System.Type.IsPrimitive
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsPrimitive
  fullName: System.Type.IsPrimitive
- uid: System.Type.IsCOMObject
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsCOMObject
  fullName: System.Type.IsCOMObject
- uid: System.Type.HasElementType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: HasElementType
  fullName: System.Type.HasElementType
- uid: System.Type.IsContextful
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsContextful
  fullName: System.Type.IsContextful
- uid: System.Type.IsMarshalByRef
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsMarshalByRef
  fullName: System.Type.IsMarshalByRef
- uid: System.Type.IsValueTypeImpl
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsValueTypeImpl()
  fullName: System.Type.IsValueTypeImpl()
  spec.csharp:
  - uid: System.Type.IsValueTypeImpl
    name: IsValueTypeImpl
    fullName: System.Type.IsValueTypeImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsValueTypeImpl
    name: IsValueTypeImpl
    fullName: System.Type.IsValueTypeImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.IsContextfulImpl
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsContextfulImpl()
  fullName: System.Type.IsContextfulImpl()
  spec.csharp:
  - uid: System.Type.IsContextfulImpl
    name: IsContextfulImpl
    fullName: System.Type.IsContextfulImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsContextfulImpl
    name: IsContextfulImpl
    fullName: System.Type.IsContextfulImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.IsMarshalByRefImpl
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsMarshalByRefImpl()
  fullName: System.Type.IsMarshalByRefImpl()
  spec.csharp:
  - uid: System.Type.IsMarshalByRefImpl
    name: IsMarshalByRefImpl
    fullName: System.Type.IsMarshalByRefImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsMarshalByRefImpl
    name: IsMarshalByRefImpl
    fullName: System.Type.IsMarshalByRefImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.GenericTypeArguments
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GenericTypeArguments
  fullName: System.Type.GenericTypeArguments
- uid: System.Type.GetEnumNames
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetEnumNames()
  fullName: System.Type.GetEnumNames()
  spec.csharp:
  - uid: System.Type.GetEnumNames
    name: GetEnumNames
    fullName: System.Type.GetEnumNames
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEnumNames
    name: GetEnumNames
    fullName: System.Type.GetEnumNames
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.GetEnumValues
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetEnumValues()
  fullName: System.Type.GetEnumValues()
  spec.csharp:
  - uid: System.Type.GetEnumValues
    name: GetEnumValues
    fullName: System.Type.GetEnumValues
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEnumValues
    name: GetEnumValues
    fullName: System.Type.GetEnumValues
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.GetEnumUnderlyingType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetEnumUnderlyingType()
  fullName: System.Type.GetEnumUnderlyingType()
  spec.csharp:
  - uid: System.Type.GetEnumUnderlyingType
    name: GetEnumUnderlyingType
    fullName: System.Type.GetEnumUnderlyingType
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEnumUnderlyingType
    name: GetEnumUnderlyingType
    fullName: System.Type.GetEnumUnderlyingType
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.IsEnumDefined(System.Object)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsEnumDefined(Object)
  fullName: System.Type.IsEnumDefined(System.Object)
  spec.csharp:
  - uid: System.Type.IsEnumDefined(System.Object)
    name: IsEnumDefined
    fullName: System.Type.IsEnumDefined
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsEnumDefined(System.Object)
    name: IsEnumDefined
    fullName: System.Type.IsEnumDefined
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Type.GetEnumName(System.Object)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetEnumName(Object)
  fullName: System.Type.GetEnumName(System.Object)
  spec.csharp:
  - uid: System.Type.GetEnumName(System.Object)
    name: GetEnumName
    fullName: System.Type.GetEnumName
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEnumName(System.Object)
    name: GetEnumName
    fullName: System.Type.GetEnumName
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Type.IsInstanceOfType(System.Object)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsInstanceOfType(Object)
  fullName: System.Type.IsInstanceOfType(System.Object)
  spec.csharp:
  - uid: System.Type.IsInstanceOfType(System.Object)
    name: IsInstanceOfType
    fullName: System.Type.IsInstanceOfType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsInstanceOfType(System.Object)
    name: IsInstanceOfType
    fullName: System.Type.IsInstanceOfType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Type.IsEquivalentTo(System.Type)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsEquivalentTo(Type)
  fullName: System.Type.IsEquivalentTo(System.Type)
  spec.csharp:
  - uid: System.Type.IsEquivalentTo(System.Type)
    name: IsEquivalentTo
    fullName: System.Type.IsEquivalentTo
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsEquivalentTo(System.Type)
    name: IsEquivalentTo
    fullName: System.Type.IsEquivalentTo
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
- uid: System.Type.GetTypeArray(System.Object[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetTypeArray(Object[])
  name.vb: GetTypeArray(Object())
  fullName: System.Type.GetTypeArray(System.Object[])
  fullName.vb: System.Type.GetTypeArray(System.Object())
  spec.csharp:
  - uid: System.Type.GetTypeArray(System.Object[])
    name: GetTypeArray
    fullName: System.Type.GetTypeArray
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetTypeArray(System.Object[])
    name: GetTypeArray
    fullName: System.Type.GetTypeArray
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.Equals(System.Object)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: Equals(Object)
  fullName: System.Type.Equals(System.Object)
  spec.csharp:
  - uid: System.Type.Equals(System.Object)
    name: Equals
    fullName: System.Type.Equals
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.Equals(System.Object)
    name: Equals
    fullName: System.Type.Equals
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Type.Equals(System.Type)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: Equals(Type)
  fullName: System.Type.Equals(System.Type)
  spec.csharp:
  - uid: System.Type.Equals(System.Type)
    name: Equals
    fullName: System.Type.Equals
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.Equals(System.Type)
    name: Equals
    fullName: System.Type.Equals
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
- uid: System.Type.GetHashCode
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetHashCode()
  fullName: System.Type.GetHashCode()
  spec.csharp:
  - uid: System.Type.GetHashCode
    name: GetHashCode
    fullName: System.Type.GetHashCode
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetHashCode
    name: GetHashCode
    fullName: System.Type.GetHashCode
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: CustomAttributes
  fullName: System.Reflection.MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.GetCustomAttributesData
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: GetCustomAttributesData()
  fullName: System.Reflection.MemberInfo.GetCustomAttributesData()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributesData
    name: GetCustomAttributesData
    fullName: System.Reflection.MemberInfo.GetCustomAttributesData
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributesData
    name: GetCustomAttributesData
    fullName: System.Reflection.MemberInfo.GetCustomAttributesData
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.MetadataToken
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: MetadataToken
  fullName: System.Reflection.MemberInfo.MetadataToken
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  type: Namespace
- uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.TypeInfo
  isExternal: false
  href: System.Reflection.TypeInfo.yml
  name: IsAssignableFrom(TypeInfo)
  fullName: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)
  spec.csharp:
  - uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)
    name: IsAssignableFrom
    fullName: System.Reflection.TypeInfo.IsAssignableFrom
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    href: System.Reflection.TypeInfo.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)
    name: IsAssignableFrom
    fullName: System.Reflection.TypeInfo.IsAssignableFrom
    href: System.Reflection.TypeInfo.yml
  - name: (
    fullName: (
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    fullName: System.Reflection.TypeInfo
    href: System.Reflection.TypeInfo.yml
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MethodInfo.yml
  name: MethodInfo
  fullName: System.Reflection.MethodInfo
  type: Class
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
  type: Class
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.FieldInfo.yml
  name: FieldInfo
  fullName: System.Reflection.FieldInfo
  type: Class
- uid: System.Type.ToString
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: ToString()
  fullName: System.Type.ToString()
  spec.csharp:
  - uid: System.Type.ToString
    name: ToString
    fullName: System.Type.ToString
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.ToString
    name: ToString
    fullName: System.Type.ToString
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Type.DeclaringType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: DeclaringType
  fullName: System.Type.DeclaringType
- uid: System.Type.ReflectedType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: ReflectedType
  fullName: System.Type.ReflectedType
- uid: System.Reflection.MemberInfo.Name
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: Name
  fullName: System.Reflection.MemberInfo.Name
- uid: System.Type.Module
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: Module
  fullName: System.Type.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Module.yml
  name: Module
  fullName: System.Reflection.Module
  type: Class
- uid: System.Type.GUID
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GUID
  fullName: System.Type.GUID
- uid: System.Guid
  parent: System
  isExternal: false
  href: System.Guid.yml
  name: Guid
  fullName: System.Guid
  type: Struct
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  name.vb: InvokeMember(String, BindingFlags, Binder, Object, Object(), ParameterModifier(), CultureInfo, String())
  fullName: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])
  fullName.vb: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object(), System.Reflection.ParameterModifier(), System.Globalization.CultureInfo, System.String())
  spec.csharp:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
    name: InvokeMember
    fullName: System.Type.InvokeMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    href: System.Globalization.CultureInfo.yml
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
    name: InvokeMember
    fullName: System.Type.InvokeMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    href: System.Globalization.CultureInfo.yml
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.BindingFlags.yml
  name: BindingFlags
  fullName: System.Reflection.BindingFlags
  type: Enum
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Binder.yml
  name: Binder
  fullName: System.Reflection.Binder
  type: Class
- uid: System.Object[]
  isExternal: false
  href: System.Object.yml
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
- uid: System.Reflection.ParameterModifier[]
  isExternal: false
  href: System.Reflection.ParameterModifier.yml
  name: ParameterModifier[]
  name.vb: ParameterModifier()
  fullName: System.Reflection.ParameterModifier[]
  fullName.vb: System.Reflection.ParameterModifier()
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  href: System.Globalization.CultureInfo.yml
  name: CultureInfo
  fullName: System.Globalization.CultureInfo
  type: Class
- uid: System.String[]
  isExternal: false
  href: System.String.yml
  name: String[]
  name.vb: String()
  fullName: System.String[]
  fullName.vb: System.String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ()
    fullName: ()
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
  type: Namespace
- uid: System.Type.Assembly
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: Assembly
  fullName: System.Type.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Assembly.yml
  name: Assembly
  fullName: System.Reflection.Assembly
  type: Class
- uid: System.Type.TypeHandle
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: TypeHandle
  fullName: System.Type.TypeHandle
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  href: System.RuntimeTypeHandle.yml
  name: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
  type: Struct
- uid: System.Type.FullName
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: FullName
  fullName: System.Type.FullName
- uid: System.Type.Namespace
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: Namespace
  fullName: System.Type.Namespace
- uid: System.Type.AssemblyQualifiedName
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: AssemblyQualifiedName
  fullName: System.Type.AssemblyQualifiedName
- uid: System.Type.BaseType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: BaseType
  fullName: System.Type.BaseType
- uid: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  name.vb: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  fullName: System.Type.GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Type.GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructorImpl
    fullName: System.Type.GetConstructorImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    href: System.Reflection.CallingConventions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetConstructorImpl
    fullName: System.Type.GetConstructorImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    href: System.Reflection.CallingConventions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.CallingConventions.yml
  name: CallingConventions
  fullName: System.Reflection.CallingConventions
  type: Enum
- uid: System.Type[]
  isExternal: false
  href: System.Type.yml
  name: Type[]
  name.vb: Type()
  fullName: System.Type[]
  fullName.vb: System.Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
- uid: System.Type.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetConstructors(BindingFlags)
  fullName: System.Type.GetConstructors(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetConstructors(System.Reflection.BindingFlags)
    name: GetConstructors
    fullName: System.Type.GetConstructors
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetConstructors(System.Reflection.BindingFlags)
    name: GetConstructors
    fullName: System.Type.GetConstructors
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Reflection.ConstructorInfo[]
  isExternal: false
  href: System.Reflection.ConstructorInfo.yml
  name: ConstructorInfo[]
  name.vb: ConstructorInfo()
  fullName: System.Reflection.ConstructorInfo[]
  fullName.vb: System.Reflection.ConstructorInfo()
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    href: System.Reflection.ConstructorInfo.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    href: System.Reflection.ConstructorInfo.yml
  - name: ()
    fullName: ()
- uid: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  name.vb: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())
  fullName: System.Type.GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Type.GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethodImpl
    fullName: System.Type.GetMethodImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    href: System.Reflection.CallingConventions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
    name: GetMethodImpl
    fullName: System.Type.GetMethodImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.CallingConventions
    name: CallingConventions
    fullName: System.Reflection.CallingConventions
    href: System.Reflection.CallingConventions.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetMethods(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMethods(BindingFlags)
  fullName: System.Type.GetMethods(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetMethods(System.Reflection.BindingFlags)
    name: GetMethods
    fullName: System.Type.GetMethods
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMethods(System.Reflection.BindingFlags)
    name: GetMethods
    fullName: System.Type.GetMethods
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Reflection.MethodInfo[]
  isExternal: false
  href: System.Reflection.MethodInfo.yml
  name: MethodInfo[]
  name.vb: MethodInfo()
  fullName: System.Reflection.MethodInfo[]
  fullName.vb: System.Reflection.MethodInfo()
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    href: System.Reflection.MethodInfo.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    href: System.Reflection.MethodInfo.yml
  - name: ()
    fullName: ()
- uid: System.Type.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetField(String, BindingFlags)
  fullName: System.Type.GetField(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetField(System.String,System.Reflection.BindingFlags)
    name: GetField
    fullName: System.Type.GetField
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetField(System.String,System.Reflection.BindingFlags)
    name: GetField
    fullName: System.Type.GetField
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Type.GetFields(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetFields(BindingFlags)
  fullName: System.Type.GetFields(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetFields(System.Reflection.BindingFlags)
    name: GetFields
    fullName: System.Type.GetFields
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetFields(System.Reflection.BindingFlags)
    name: GetFields
    fullName: System.Type.GetFields
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo[]
  isExternal: false
  href: System.Reflection.FieldInfo.yml
  name: FieldInfo[]
  name.vb: FieldInfo()
  fullName: System.Reflection.FieldInfo[]
  fullName.vb: System.Reflection.FieldInfo()
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    fullName: System.Reflection.FieldInfo
    href: System.Reflection.FieldInfo.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    fullName: System.Reflection.FieldInfo
    href: System.Reflection.FieldInfo.yml
  - name: ()
    fullName: ()
- uid: System.Type.GetInterface(System.String,System.Boolean)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetInterface(String, Boolean)
  fullName: System.Type.GetInterface(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Type.GetInterface(System.String,System.Boolean)
    name: GetInterface
    fullName: System.Type.GetInterface
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetInterface(System.String,System.Boolean)
    name: GetInterface
    fullName: System.Type.GetInterface
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Type.GetInterfaces
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetInterfaces()
  fullName: System.Type.GetInterfaces()
  spec.csharp:
  - uid: System.Type.GetInterfaces
    name: GetInterfaces
    fullName: System.Type.GetInterfaces
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetInterfaces
    name: GetInterfaces
    fullName: System.Type.GetInterfaces
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetEvent(String, BindingFlags)
  fullName: System.Type.GetEvent(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
    name: GetEvent
    fullName: System.Type.GetEvent
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
    name: GetEvent
    fullName: System.Type.GetEvent
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.EventInfo.yml
  name: EventInfo
  fullName: System.Reflection.EventInfo
  type: Class
- uid: System.Type.GetEvents
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetEvents()
  fullName: System.Type.GetEvents()
  spec.csharp:
  - uid: System.Type.GetEvents
    name: GetEvents
    fullName: System.Type.GetEvents
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEvents
    name: GetEvents
    fullName: System.Type.GetEvents
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.EventInfo[]
  isExternal: false
  href: System.Reflection.EventInfo.yml
  name: EventInfo[]
  name.vb: EventInfo()
  fullName: System.Reflection.EventInfo[]
  fullName.vb: System.Reflection.EventInfo()
  spec.csharp:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    fullName: System.Reflection.EventInfo
    href: System.Reflection.EventInfo.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    fullName: System.Reflection.EventInfo
    href: System.Reflection.EventInfo.yml
  - name: ()
    fullName: ()
- uid: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  name.vb: GetPropertyImpl(String, BindingFlags, Binder, Type, Type(), ParameterModifier())
  fullName: System.Type.GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])
  fullName.vb: System.Type.GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type(), System.Reflection.ParameterModifier())
  spec.csharp:
  - uid: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetPropertyImpl
    fullName: System.Type.GetPropertyImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
    name: GetPropertyImpl
    fullName: System.Type.GetPropertyImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    href: System.Reflection.Binder.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    fullName: System.Reflection.ParameterModifier
    href: System.Reflection.ParameterModifier.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.PropertyInfo.yml
  name: PropertyInfo
  fullName: System.Reflection.PropertyInfo
  type: Class
- uid: System.Type.GetProperties(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetProperties(BindingFlags)
  fullName: System.Type.GetProperties(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    fullName: System.Type.GetProperties
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    fullName: System.Type.GetProperties
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Reflection.PropertyInfo[]
  isExternal: false
  href: System.Reflection.PropertyInfo.yml
  name: PropertyInfo[]
  name.vb: PropertyInfo()
  fullName: System.Reflection.PropertyInfo[]
  fullName.vb: System.Reflection.PropertyInfo()
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    href: System.Reflection.PropertyInfo.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    href: System.Reflection.PropertyInfo.yml
  - name: ()
    fullName: ()
- uid: System.Type.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetNestedTypes(BindingFlags)
  fullName: System.Type.GetNestedTypes(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetNestedTypes(System.Reflection.BindingFlags)
    name: GetNestedTypes
    fullName: System.Type.GetNestedTypes
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetNestedTypes(System.Reflection.BindingFlags)
    name: GetNestedTypes
    fullName: System.Type.GetNestedTypes
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetNestedType(String, BindingFlags)
  fullName: System.Type.GetNestedType(System.String, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
    name: GetNestedType
    fullName: System.Type.GetNestedType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
    name: GetNestedType
    fullName: System.Type.GetNestedType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMember(String, MemberTypes, BindingFlags)
  fullName: System.Type.GetMember(System.String, System.Reflection.MemberTypes, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Type.GetMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberTypes
    name: MemberTypes
    fullName: System.Reflection.MemberTypes
    href: System.Reflection.MemberTypes.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
    name: GetMember
    fullName: System.Type.GetMember
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberTypes
    name: MemberTypes
    fullName: System.Reflection.MemberTypes
    href: System.Reflection.MemberTypes.yml
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MemberTypes.yml
  name: MemberTypes
  fullName: System.Reflection.MemberTypes
  type: Enum
- uid: System.Reflection.MemberInfo[]
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: MemberInfo[]
  name.vb: MemberInfo()
  fullName: System.Reflection.MemberInfo[]
  fullName.vb: System.Reflection.MemberInfo()
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    href: System.Reflection.MemberInfo.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    href: System.Reflection.MemberInfo.yml
  - name: ()
    fullName: ()
- uid: System.Type.GetInterfaceMap(System.Type)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetInterfaceMap(Type)
  fullName: System.Type.GetInterfaceMap(System.Type)
  spec.csharp:
  - uid: System.Type.GetInterfaceMap(System.Type)
    name: GetInterfaceMap
    fullName: System.Type.GetInterfaceMap
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetInterfaceMap(System.Type)
    name: GetInterfaceMap
    fullName: System.Type.GetInterfaceMap
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
- uid: System.Reflection.InterfaceMapping
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.InterfaceMapping.yml
  name: InterfaceMapping
  fullName: System.Reflection.InterfaceMapping
  type: Struct
- uid: System.Type.GetEvents(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetEvents(BindingFlags)
  fullName: System.Type.GetEvents(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetEvents(System.Reflection.BindingFlags)
    name: GetEvents
    fullName: System.Type.GetEvents
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetEvents(System.Reflection.BindingFlags)
    name: GetEvents
    fullName: System.Type.GetEvents
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Type.GetMembers(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetMembers(BindingFlags)
  fullName: System.Type.GetMembers(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: System.Type.GetMembers(System.Reflection.BindingFlags)
    name: GetMembers
    fullName: System.Type.GetMembers
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetMembers(System.Reflection.BindingFlags)
    name: GetMembers
    fullName: System.Type.GetMembers
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    href: System.Reflection.BindingFlags.yml
  - name: )
    fullName: )
- uid: System.Type.IsAssignableFrom(System.Type)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsAssignableFrom(Type)
  fullName: System.Type.IsAssignableFrom(System.Type)
  spec.csharp:
  - uid: System.Type.IsAssignableFrom(System.Type)
    name: IsAssignableFrom
    fullName: System.Type.IsAssignableFrom
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsAssignableFrom(System.Type)
    name: IsAssignableFrom
    fullName: System.Type.IsAssignableFrom
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
- uid: System.Type.GetAttributeFlagsImpl
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetAttributeFlagsImpl()
  fullName: System.Type.GetAttributeFlagsImpl()
  spec.csharp:
  - uid: System.Type.GetAttributeFlagsImpl
    name: GetAttributeFlagsImpl
    fullName: System.Type.GetAttributeFlagsImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetAttributeFlagsImpl
    name: GetAttributeFlagsImpl
    fullName: System.Type.GetAttributeFlagsImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.TypeAttributes.yml
  name: TypeAttributes
  fullName: System.Reflection.TypeAttributes
  type: Enum
- uid: System.Type.IsArrayImpl
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsArrayImpl()
  fullName: System.Type.IsArrayImpl()
  spec.csharp:
  - uid: System.Type.IsArrayImpl
    name: IsArrayImpl
    fullName: System.Type.IsArrayImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsArrayImpl
    name: IsArrayImpl
    fullName: System.Type.IsArrayImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.IsByRefImpl
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsByRefImpl()
  fullName: System.Type.IsByRefImpl()
  spec.csharp:
  - uid: System.Type.IsByRefImpl
    name: IsByRefImpl
    fullName: System.Type.IsByRefImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsByRefImpl
    name: IsByRefImpl
    fullName: System.Type.IsByRefImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.IsPointerImpl
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsPointerImpl()
  fullName: System.Type.IsPointerImpl()
  spec.csharp:
  - uid: System.Type.IsPointerImpl
    name: IsPointerImpl
    fullName: System.Type.IsPointerImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsPointerImpl
    name: IsPointerImpl
    fullName: System.Type.IsPointerImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.IsPrimitiveImpl
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsPrimitiveImpl()
  fullName: System.Type.IsPrimitiveImpl()
  spec.csharp:
  - uid: System.Type.IsPrimitiveImpl
    name: IsPrimitiveImpl
    fullName: System.Type.IsPrimitiveImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsPrimitiveImpl
    name: IsPrimitiveImpl
    fullName: System.Type.IsPrimitiveImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.IsCOMObjectImpl
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsCOMObjectImpl()
  fullName: System.Type.IsCOMObjectImpl()
  spec.csharp:
  - uid: System.Type.IsCOMObjectImpl
    name: IsCOMObjectImpl
    fullName: System.Type.IsCOMObjectImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsCOMObjectImpl
    name: IsCOMObjectImpl
    fullName: System.Type.IsCOMObjectImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.GetElementType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetElementType()
  fullName: System.Type.GetElementType()
  spec.csharp:
  - uid: System.Type.GetElementType
    name: GetElementType
    fullName: System.Type.GetElementType
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetElementType
    name: GetElementType
    fullName: System.Type.GetElementType
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.HasElementTypeImpl
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: HasElementTypeImpl()
  fullName: System.Type.HasElementTypeImpl()
  spec.csharp:
  - uid: System.Type.HasElementTypeImpl
    name: HasElementTypeImpl
    fullName: System.Type.HasElementTypeImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.HasElementTypeImpl
    name: HasElementTypeImpl
    fullName: System.Type.HasElementTypeImpl
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.IsSecurityCritical
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsSecurityCritical
  fullName: System.Type.IsSecurityCritical
- uid: System.Type.IsSecuritySafeCritical
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsSecuritySafeCritical
  fullName: System.Type.IsSecuritySafeCritical
- uid: System.Type.IsSecurityTransparent
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsSecurityTransparent
  fullName: System.Type.IsSecurityTransparent
- uid: System.Type.IsSubclassOf(System.Type)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsSubclassOf(Type)
  fullName: System.Type.IsSubclassOf(System.Type)
  spec.csharp:
  - uid: System.Type.IsSubclassOf(System.Type)
    name: IsSubclassOf
    fullName: System.Type.IsSubclassOf
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.IsSubclassOf(System.Type)
    name: IsSubclassOf
    fullName: System.Type.IsSubclassOf
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: )
    fullName: )
- uid: System.Type.UnderlyingSystemType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: UnderlyingSystemType
  fullName: System.Type.UnderlyingSystemType
- uid: System.Type.MakePointerType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: MakePointerType()
  fullName: System.Type.MakePointerType()
  spec.csharp:
  - uid: System.Type.MakePointerType
    name: MakePointerType
    fullName: System.Type.MakePointerType
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.MakePointerType
    name: MakePointerType
    fullName: System.Type.MakePointerType
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.MakeByRefType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: MakeByRefType()
  fullName: System.Type.MakeByRefType()
  spec.csharp:
  - uid: System.Type.MakeByRefType
    name: MakeByRefType
    fullName: System.Type.MakeByRefType
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.MakeByRefType
    name: MakeByRefType
    fullName: System.Type.MakeByRefType
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.MakeArrayType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: MakeArrayType()
  fullName: System.Type.MakeArrayType()
  spec.csharp:
  - uid: System.Type.MakeArrayType
    name: MakeArrayType
    fullName: System.Type.MakeArrayType
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.MakeArrayType
    name: MakeArrayType
    fullName: System.Type.MakeArrayType
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.MakeArrayType(System.Int32)
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: MakeArrayType(Int32)
  fullName: System.Type.MakeArrayType(System.Int32)
  spec.csharp:
  - uid: System.Type.MakeArrayType(System.Int32)
    name: MakeArrayType
    fullName: System.Type.MakeArrayType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    href: System.Int32.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.MakeArrayType(System.Int32)
    name: MakeArrayType
    fullName: System.Type.MakeArrayType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    href: System.Int32.yml
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: GetCustomAttributes(Boolean)
  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  href: System.Reflection.MemberInfo.yml
  name: IsDefined(Type, Boolean)
  fullName: System.Reflection.MemberInfo.IsDefined(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.MemberInfo.IsDefined
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.MemberInfo.IsDefined
    href: System.Reflection.MemberInfo.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Type.GenericParameterAttributes
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GenericParameterAttributes
  fullName: System.Type.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.GenericParameterAttributes.yml
  name: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
  type: Enum
- uid: System.Reflection.Emit.GenericTypeParameterBuilder[]
  isExternal: false
  href: System.Reflection.Emit.GenericTypeParameterBuilder.yml
  name: GenericTypeParameterBuilder[]
  name.vb: GenericTypeParameterBuilder()
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder[]
  fullName.vb: System.Reflection.Emit.GenericTypeParameterBuilder()
  spec.csharp:
  - uid: System.Reflection.Emit.GenericTypeParameterBuilder
    name: GenericTypeParameterBuilder
    fullName: System.Reflection.Emit.GenericTypeParameterBuilder
    href: System.Reflection.Emit.GenericTypeParameterBuilder.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.Emit.GenericTypeParameterBuilder
    name: GenericTypeParameterBuilder
    fullName: System.Reflection.Emit.GenericTypeParameterBuilder
    href: System.Reflection.Emit.GenericTypeParameterBuilder.yml
  - name: ()
    fullName: ()
- uid: System.Type.MakeGenericType(System.Type[])
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: MakeGenericType(Type[])
  name.vb: MakeGenericType(Type())
  fullName: System.Type.MakeGenericType(System.Type[])
  fullName.vb: System.Type.MakeGenericType(System.Type())
  spec.csharp:
  - uid: System.Type.MakeGenericType(System.Type[])
    name: MakeGenericType
    fullName: System.Type.MakeGenericType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.MakeGenericType(System.Type[])
    name: MakeGenericType
    fullName: System.Type.MakeGenericType
    href: System.Type.yml
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Type.GetGenericArguments
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetGenericArguments()
  fullName: System.Type.GetGenericArguments()
  spec.csharp:
  - uid: System.Type.GetGenericArguments
    name: GetGenericArguments
    fullName: System.Type.GetGenericArguments
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetGenericArguments
    name: GetGenericArguments
    fullName: System.Type.GetGenericArguments
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type.IsGenericTypeDefinition
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsGenericTypeDefinition
  fullName: System.Type.IsGenericTypeDefinition
- uid: System.Type.IsGenericType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsGenericType
  fullName: System.Type.IsGenericType
- uid: System.Type.IsGenericParameter
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsGenericParameter
  fullName: System.Type.IsGenericParameter
- uid: System.Type.IsConstructedGenericType
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: IsConstructedGenericType
  fullName: System.Type.IsConstructedGenericType
- uid: System.Type.GenericParameterPosition
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GenericParameterPosition
  fullName: System.Type.GenericParameterPosition
- uid: System.Type.DeclaringMethod
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: DeclaringMethod
  fullName: System.Type.DeclaringMethod
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MethodBase.yml
  name: MethodBase
  fullName: System.Reflection.MethodBase
  type: Class
- uid: System.Type.GetGenericTypeDefinition
  parent: System.Type
  isExternal: false
  href: System.Type.yml
  name: GetGenericTypeDefinition()
  fullName: System.Type.GetGenericTypeDefinition()
  spec.csharp:
  - uid: System.Type.GetGenericTypeDefinition
    name: GetGenericTypeDefinition
    fullName: System.Type.GetGenericTypeDefinition
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Type.GetGenericTypeDefinition
    name: GetGenericTypeDefinition
    fullName: System.Type.GetGenericTypeDefinition
    href: System.Type.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.MethodAttributes.yml
  name: MethodAttributes
  fullName: System.Reflection.MethodAttributes
  type: Enum
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.MethodBuilder.yml
  name: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
  type: Class
- uid: System.Type[][]
  isExternal: false
  href: System.Type.yml
  name: Type[][]
  name.vb: Type()()
  fullName: System.Type[][]
  fullName.vb: System.Type()()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
  - name: ()
    fullName: ()
- uid: System.Reflection.Emit.ConstructorBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.ConstructorBuilder.yml
  name: ConstructorBuilder
  fullName: System.Reflection.Emit.ConstructorBuilder
  type: Class
- uid: System.Runtime.InteropServices.CallingConvention
  parent: System.Runtime.InteropServices
  isExternal: false
  href: System.Runtime.InteropServices.CallingConvention.yml
  name: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
  type: Enum
- uid: System.Runtime.InteropServices.CharSet
  parent: System.Runtime.InteropServices
  isExternal: false
  href: System.Runtime.InteropServices.CharSet.yml
  name: CharSet
  fullName: System.Runtime.InteropServices.CharSet
  type: Enum
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
  type: Namespace
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.TypeBuilder.yml
  name: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
  type: Class
- uid: System.Reflection.Emit.PackingSize
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.PackingSize.yml
  name: PackingSize
  fullName: System.Reflection.Emit.PackingSize
  type: Enum
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.FieldAttributes.yml
  name: FieldAttributes
  fullName: System.Reflection.FieldAttributes
  type: Enum
- uid: System.Reflection.Emit.FieldBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.FieldBuilder.yml
  name: FieldBuilder
  fullName: System.Reflection.Emit.FieldBuilder
  type: Class
- uid: System.Byte[]
  isExternal: false
  href: System.Byte.yml
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: ()
    fullName: ()
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.PropertyAttributes.yml
  name: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
  type: Enum
- uid: System.Reflection.Emit.PropertyBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.PropertyBuilder.yml
  name: PropertyBuilder
  fullName: System.Reflection.Emit.PropertyBuilder
  type: Class
- uid: System.Reflection.EventAttributes
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.EventAttributes.yml
  name: EventAttributes
  fullName: System.Reflection.EventAttributes
  type: Enum
- uid: System.Reflection.Emit.EventBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.EventBuilder.yml
  name: EventBuilder
  fullName: System.Reflection.Emit.EventBuilder
  type: Class
- uid: System.Reflection.Emit.TypeToken
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.TypeToken.yml
  name: TypeToken
  fullName: System.Reflection.Emit.TypeToken
  type: Struct
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  href: System.Reflection.Emit.CustomAttributeBuilder.yml
  name: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
  type: Class
