items:
- uid: System.Security.Cryptography.RijndaelManagedTransform
  id: RijndaelManagedTransform
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
  - System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
  - System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
  - System.Security.Cryptography.RijndaelManagedTransform.Clear
  - System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
  - System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
  - System.Security.Cryptography.RijndaelManagedTransform.Reset
  - System.Security.Cryptography.RijndaelManagedTransform.System#IDisposable#Dispose
  - System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  href: System.Security.Cryptography.RijndaelManagedTransform.yml
  name: RijndaelManagedTransform
  fullName: System.Security.Cryptography.RijndaelManagedTransform
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
    startLine: 12
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Performs a cryptographic transformation of data using the Rijndael algorithm. This class cannot be inherited.
  syntax:
    content: 'public sealed class RijndaelManagedTransform : ICryptoTransform, IDisposable'
    content.vb: Public NotInheritable Class RijndaelManagedTransform Implements ICryptoTransform, IDisposable
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICryptoTransform
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.Cryptography.RijndaelManagedTransform.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  parent: System.Security.Cryptography.RijndaelManagedTransform
  href: System.Security.Cryptography.RijndaelManagedTransform.yml
  name: IDisposable.Dispose()
  name.vb: System.IDisposable.Dispose()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.System.IDisposable.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
    startLine: 151
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: void IDisposable.Dispose()
    content.vb: Sub System.IDisposable.Dispose Implements IDisposable.Dispose
- uid: System.Security.Cryptography.RijndaelManagedTransform.Clear
  id: Clear
  parent: System.Security.Cryptography.RijndaelManagedTransform
  href: System.Security.Cryptography.RijndaelManagedTransform.yml
  name: Clear()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Clear()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
    startLine: 159
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Releases all resources used by the @'System.Security.Cryptography.RijndaelManagedTransform' class.
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
- uid: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
  id: BlockSizeValue
  parent: System.Security.Cryptography.RijndaelManagedTransform
  href: System.Security.Cryptography.RijndaelManagedTransform.yml
  name: BlockSizeValue
  fullName: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
    startLine: 197
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Gets the block size.
  syntax:
    content: public int BlockSizeValue { get; }
    content.vb: Public ReadOnly Property BlockSizeValue As Integer
    parameters: []
    return:
      type: System.Int32
      description: The size of the data blocks in bytes.
- uid: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.RijndaelManagedTransform
  href: System.Security.Cryptography.RijndaelManagedTransform.yml
  name: InputBlockSize
  fullName: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
    startLine: 203
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Gets the input block size.
  syntax:
    content: public int InputBlockSize { get; }
    content.vb: Public ReadOnly Property InputBlockSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The size of the input data blocks in bytes.
- uid: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.RijndaelManagedTransform
  href: System.Security.Cryptography.RijndaelManagedTransform.yml
  name: OutputBlockSize
  fullName: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
    startLine: 209
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Gets the output block size.
  syntax:
    content: public int OutputBlockSize { get; }
    content.vb: Public ReadOnly Property OutputBlockSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The size of the output data blocks in bytes.
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.RijndaelManagedTransform
  href: System.Security.Cryptography.RijndaelManagedTransform.yml
  name: CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
    startLine: 215
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Gets a value indicating whether multiple blocks can be transformed.
  syntax:
    content: public bool CanTransformMultipleBlocks { get; }
    content.vb: Public ReadOnly Property CanTransformMultipleBlocks As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if multiple blocks can be transformed; otherwise, false.
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.RijndaelManagedTransform
  href: System.Security.Cryptography.RijndaelManagedTransform.yml
  name: CanReuseTransform
  fullName: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
    startLine: 221
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Gets a value indicating whether the current transform can be reused.
  syntax:
    content: public bool CanReuseTransform { get; }
    content.vb: Public ReadOnly Property CanReuseTransform As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Always true.
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.RijndaelManagedTransform
  href: System.Security.Cryptography.RijndaelManagedTransform.yml
  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)
  name.vb: TransformBlock(Byte(), Int32, Int32, Byte(), Int32)
  fullName: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)
  fullName.vb: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
    startLine: 227
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.
  syntax:
    content: public int TransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset)
    content.vb: Public Function TransformBlock(inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: The input to perform the operation on.
    - id: inputOffset
      type: System.Int32
      description: The offset into the input byte array to begin using data from.
    - id: inputCount
      type: System.Int32
      description: The number of bytes in the input byte array to use as data.
    - id: outputBuffer
      type: System.Byte[]
      description: The output to write the data to.
    - id: outputOffset
      type: System.Int32
      description: The offset into the output byte array to begin writing data from.
    return:
      type: System.Int32
      description: The number of bytes written.
  exceptions:
  - type: System.ArgumentNullException
    description: The *inputBuffer* parameter is null.-or- The *outputBuffer* parameter is null.
  - type: System.ArgumentException
    description: The length of the input buffer is less than the sum of the input offset and the input count. -or-The value of the *inputCount* parameter is less than or equal to 0.-or-The value of the *inputCount* parameter is greater than the length of the *inputBuffer* parameter.-or-The length of the *inputCount* parameter is not evenly devisable by input block size.
  - type: System.ArgumentOutOfRangeException
    description: The value of the *inputOffset* parameter is negative.
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.RijndaelManagedTransform
  href: System.Security.Cryptography.RijndaelManagedTransform.yml
  name: TransformFinalBlock(Byte[], Int32, Int32)
  name.vb: TransformFinalBlock(Byte(), Int32, Int32)
  fullName: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[], System.Int32, System.Int32)
  fullName.vb: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
    startLine: 300
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Computes the transformation for the specified region of the specified byte array.
  syntax:
    content: public byte[] TransformFinalBlock(byte[] inputBuffer, int inputOffset, int inputCount)
    content.vb: Public Function TransformFinalBlock(inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: The input to perform the operation on.
    - id: inputOffset
      type: System.Int32
      description: The offset into the byte array to begin using data from.
    - id: inputCount
      type: System.Int32
      description: The number of bytes in the byte array to use as data.
    return:
      type: System.Byte[]
      description: The computed transformation.
  exceptions:
  - type: System.ArgumentNullException
    description: The *inputBuffer* parameter is null.
  - type: System.ArgumentException
    description: The value of the *inputCount* parameter is less than 0.-or-The value of the *inputCount* parameter is grater than the length of *inputBuffer* parameter.
  - type: System.ArgumentOutOfRangeException
    description: The value of the *inputOffset* parameter is negative.
  - type: System.Security.Cryptography.CryptographicException
    description: The length of the *inputCount* parameter is not evenly devisable by input block size.
- uid: System.Security.Cryptography.RijndaelManagedTransform.Reset
  id: Reset
  parent: System.Security.Cryptography.RijndaelManagedTransform
  href: System.Security.Cryptography.RijndaelManagedTransform.yml
  name: Reset()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Reset()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/RijndaelManagedTransform.cs
    startLine: 357
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Resets the internal state of @'System.Security.Cryptography.RijndaelManagedTransform' so it can be used again to do a different encryption or decryption.
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Byte[]
  isExternal: false
  href: System.Byte.yml
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: ()
    fullName: ()
