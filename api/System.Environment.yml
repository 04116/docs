items:
- uid: System.Environment
  id: Environment
  parent: System
  children:
  - System.Environment.CurrentDirectory
  - System.Environment.CurrentManagedThreadId
  - System.Environment.Exit(System.Int32)
  - System.Environment.ExitCode
  - System.Environment.ExpandEnvironmentVariables(System.String)
  - System.Environment.FailFast(System.String)
  - System.Environment.FailFast(System.String,System.Exception)
  - System.Environment.GetEnvironmentVariable(System.String)
  - System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)
  - System.Environment.GetEnvironmentVariables
  - System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)
  - System.Environment.GetFolderPath(System.Environment.SpecialFolder)
  - System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)
  - System.Environment.GetLogicalDrives
  - System.Environment.HasShutdownStarted
  - System.Environment.Is64BitOperatingSystem
  - System.Environment.Is64BitProcess
  - System.Environment.MachineName
  - System.Environment.NewLine
  - System.Environment.OSVersion
  - System.Environment.ProcessorCount
  - System.Environment.SetEnvironmentVariable(System.String,System.String)
  - System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)
  - System.Environment.StackTrace
  - System.Environment.SystemDirectory
  - System.Environment.SystemPageSize
  - System.Environment.TickCount
  - System.Environment.UserDomainName
  - System.Environment.UserInteractive
  - System.Environment.UserName
  - System.Environment.Version
  - System.Environment.WorkingSet
  href: System.Environment.yml
  name: Environment
  fullName: System.Environment
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Environment.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Environment.cs
    startLine: 40
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides information about, and means to manipulate, the current environment and platform. This class cannot be inherited.
  syntax:
    content: public class Environment
    content.vb: Public Class Environment
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Environment.TickCount
  id: TickCount
  parent: System.Environment
  href: System.Environment.yml
  name: TickCount
  fullName: System.Environment.TickCount
  type: Property
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the number of milliseconds elapsed since the system started.
  syntax:
    content: public static int TickCount { get; }
    content.vb: Public Shared ReadOnly Property TickCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer containing the amount of time in milliseconds that has passed since the last time the computer was started.
- uid: System.Environment.Exit(System.Int32)
  id: Exit(System.Int32)
  parent: System.Environment
  href: System.Environment.yml
  name: Exit(Int32)
  fullName: System.Environment.Exit(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 271
  assemblies:
  - mscorlib
  namespace: System
  summary: Terminates this process and returns an exit code to the operating system.
  syntax:
    content: public static void Exit(int exitCode)
    content.vb: Public Shared Sub Exit(exitCode As Integer)
    parameters:
    - id: exitCode
      type: System.Int32
      description: The exit code to return to the operating system. Use 0 (zero) to indicate that the process completed successfully.
  exceptions:
  - type: System.Security.SecurityException
    description: The caller does not have sufficient security permission to perform this function.
- uid: System.Environment.ExitCode
  id: ExitCode
  parent: System.Environment
  href: System.Environment.yml
  name: ExitCode
  fullName: System.Environment.ExitCode
  type: Property
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets or sets the exit code of the process.
  syntax:
    content: public static int ExitCode { get; set; }
    content.vb: Public Shared Property ExitCode As Integer
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer containing the exit code. The default value is 0 (zero), which indicates that the process completed successfully.
- uid: System.Environment.FailFast(System.String)
  id: FailFast(System.String)
  parent: System.Environment
  href: System.Environment.yml
  name: FailFast(String)
  fullName: System.Environment.FailFast(System.String)
  type: Method
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - mscorlib
  namespace: System
  summary: Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message in error reporting to Microsoft.
  syntax:
    content: public static void FailFast(string message)
    content.vb: Public Shared Sub FailFast(message As String)
    parameters:
    - id: message
      type: System.String
      description: A message that explains why the process was terminated, or null if no explanation is provided.
- uid: System.Environment.FailFast(System.String,System.Exception)
  id: FailFast(System.String,System.Exception)
  parent: System.Environment
  href: System.Environment.yml
  name: FailFast(String, Exception)
  fullName: System.Environment.FailFast(System.String, System.Exception)
  type: Method
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - mscorlib
  namespace: System
  summary: Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message and exception information in error reporting to Microsoft.
  syntax:
    content: public static void FailFast(string message, Exception exception)
    content.vb: Public Shared Sub FailFast(message As String, exception As Exception)
    parameters:
    - id: message
      type: System.String
      description: A message that explains why the process was terminated, or null if no explanation is provided.
    - id: exception
      type: System.Exception
      description: An exception that represents the error that caused the termination. This is typically the exception in a catch block.
- uid: System.Environment.CurrentDirectory
  id: CurrentDirectory
  parent: System.Environment
  href: System.Environment.yml
  name: CurrentDirectory
  fullName: System.Environment.CurrentDirectory
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 359
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets or sets the fully qualified path of the current working directory.
  syntax:
    content: public static string CurrentDirectory { get; set; }
    content.vb: Public Shared Property CurrentDirectory As String
    parameters: []
    return:
      type: System.String
      description: A string containing a directory path.
  exceptions:
  - type: System.ArgumentException
    description: Attempted to set to an empty string ("").
  - type: System.ArgumentNullException
    description: Attempted to set to null.
  - type: System.IO.IOException
    description: An I/O error occurred.
  - type: System.IO.DirectoryNotFoundException
    description: Attempted to set a local path that cannot be found.
  - type: System.Security.SecurityException
    description: The caller does not have the appropriate permission.
- uid: System.Environment.SystemDirectory
  id: SystemDirectory
  parent: System.Environment
  href: System.Environment.yml
  name: SystemDirectory
  fullName: System.Environment.SystemDirectory
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 374
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the fully qualified path of the system directory.
  syntax:
    content: public static string SystemDirectory { get; }
    content.vb: Public Shared ReadOnly Property SystemDirectory As String
    parameters: []
    return:
      type: System.String
      description: A string containing a directory path.
- uid: System.Environment.ExpandEnvironmentVariables(System.String)
  id: ExpandEnvironmentVariables(System.String)
  parent: System.Environment
  href: System.Environment.yml
  name: ExpandEnvironmentVariables(String)
  fullName: System.Environment.ExpandEnvironmentVariables(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 411
  assemblies:
  - mscorlib
  namespace: System
  summary: Replaces the name of each environment variable embedded in the specified string with the string equivalent of the value of the variable, then returns the resulting string.
  syntax:
    content: public static string ExpandEnvironmentVariables(string name)
    content.vb: Public Shared Function ExpandEnvironmentVariables(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: A string containing the names of zero or more environment variables. Each environment variable is quoted with the percent sign character (%).
    return:
      type: System.String
      description: A string with each environment variable replaced by its value.
  exceptions:
  - type: System.ArgumentNullException
    description: '*name* is null.'
- uid: System.Environment.MachineName
  id: MachineName
  parent: System.Environment
  href: System.Environment.yml
  name: MachineName
  fullName: System.Environment.MachineName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 530
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the NetBIOS name of this local computer.
  syntax:
    content: public static string MachineName { get; }
    content.vb: Public Shared ReadOnly Property MachineName As String
    parameters: []
    return:
      type: System.String
      description: A string containing the name of this computer.
  exceptions:
  - type: System.InvalidOperationException
    description: The name of this computer cannot be obtained.
- uid: System.Environment.ProcessorCount
  id: ProcessorCount
  parent: System.Environment
  href: System.Environment.yml
  name: ProcessorCount
  fullName: System.Environment.ProcessorCount
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 549
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the number of processors on the current machine.
  syntax:
    content: public static int ProcessorCount { get; }
    content.vb: Public Shared ReadOnly Property ProcessorCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The 32-bit signed integer that specifies the number of processors on the current machine. There is no default. If the current machine contains multiple processor groups, this property returns the number of logical processors that are available for use by the common language runtime (CLR).
- uid: System.Environment.SystemPageSize
  id: SystemPageSize
  parent: System.Environment
  href: System.Environment.yml
  name: SystemPageSize
  fullName: System.Environment.SystemPageSize
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 556
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the number of bytes in the operating system's memory page.
  syntax:
    content: public static int SystemPageSize { get; }
    content.vb: Public Shared ReadOnly Property SystemPageSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of bytes in the system memory page.
- uid: System.Environment.GetEnvironmentVariable(System.String)
  id: GetEnvironmentVariable(System.String)
  parent: System.Environment
  href: System.Environment.yml
  name: GetEnvironmentVariable(String)
  fullName: System.Environment.GetEnvironmentVariable(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 599
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves the value of an environment variable from the current process.
  syntax:
    content: public static string GetEnvironmentVariable(string variable)
    content.vb: Public Shared Function GetEnvironmentVariable(variable As String) As String
    parameters:
    - id: variable
      type: System.String
      description: The name of the environment variable.
    return:
      type: System.String
      description: The value of the environment variable specified by *variable*, or null if the environment variable is not found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*variable* is null.'
  - type: System.Security.SecurityException
    description: The caller does not have the required permission to perform this operation.
- uid: System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)
  id: GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)
  parent: System.Environment
  href: System.Environment.yml
  name: GetEnvironmentVariable(String, EnvironmentVariableTarget)
  fullName: System.Environment.GetEnvironmentVariable(System.String, System.EnvironmentVariableTarget)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 634
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves the value of an environment variable from the current process or from the Windows operating system registry key for the current user or local machine.
  syntax:
    content: public static string GetEnvironmentVariable(string variable, EnvironmentVariableTarget target)
    content.vb: Public Shared Function GetEnvironmentVariable(variable As String, target As EnvironmentVariableTarget) As String
    parameters:
    - id: variable
      type: System.String
      description: The name of an environment variable.
    - id: target
      type: System.EnvironmentVariableTarget
      description: One of the @'System.EnvironmentVariableTarget' values.
    return:
      type: System.String
      description: The value of the environment variable specified by the *variable* and *target* parameters, or null if the environment variable is not found.
  exceptions:
  - type: System.ArgumentNullException
    description: '*variable* is null.'
  - type: System.ArgumentException
    description: '*target* is not a valid @''System.EnvironmentVariableTarget'' value.'
  - type: System.Security.SecurityException
    description: The caller does not have the required permission to perform this operation.
- uid: System.Environment.GetEnvironmentVariables
  id: GetEnvironmentVariables
  parent: System.Environment
  href: System.Environment.yml
  name: GetEnvironmentVariables()
  fullName: System.Environment.GetEnvironmentVariables()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 735
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves all environment variable names and their values from the current process.
  syntax:
    content: public static IDictionary GetEnvironmentVariables()
    content.vb: Public Shared Function GetEnvironmentVariables As IDictionary
    return:
      type: System.Collections.IDictionary
      description: A dictionary that contains all environment variable names and their values; otherwise, an empty dictionary if no environment variables are found.
  exceptions:
  - type: System.Security.SecurityException
    description: The caller does not have the required permission to perform this operation.
  - type: System.OutOfMemoryException
    description: The buffer is out of memory.
- uid: System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)
  id: GetEnvironmentVariables(System.EnvironmentVariableTarget)
  parent: System.Environment
  href: System.Environment.yml
  name: GetEnvironmentVariables(EnvironmentVariableTarget)
  fullName: System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 835
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves all environment variable names and their values from the current process, or from the Windows operating system registry key for the current user or local machine.
  syntax:
    content: public static IDictionary GetEnvironmentVariables(EnvironmentVariableTarget target)
    content.vb: Public Shared Function GetEnvironmentVariables(target As EnvironmentVariableTarget) As IDictionary
    parameters:
    - id: target
      type: System.EnvironmentVariableTarget
      description: One of the @'System.EnvironmentVariableTarget' values.
    return:
      type: System.Collections.IDictionary
      description: A dictionary that contains all environment variable names and their values from the source specified by the *target* parameter; otherwise, an empty dictionary if no environment variables are found.
  exceptions:
  - type: System.Security.SecurityException
    description: The caller does not have the required permission to perform this operation for the specified value of *target*.
  - type: System.ArgumentException
    description: '*target* contains an illegal value.'
- uid: System.Environment.SetEnvironmentVariable(System.String,System.String)
  id: SetEnvironmentVariable(System.String,System.String)
  parent: System.Environment
  href: System.Environment.yml
  name: SetEnvironmentVariable(String, String)
  fullName: System.Environment.SetEnvironmentVariable(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 864
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates, modifies, or deletes an environment variable stored in the current process.
  syntax:
    content: public static void SetEnvironmentVariable(string variable, string value)
    content.vb: Public Shared Sub SetEnvironmentVariable(variable As String, value As String)
    parameters:
    - id: variable
      type: System.String
      description: The name of an environment variable.
    - id: value
      type: System.String
      description: A value to assign to *variable*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*variable* is null.'
  - type: System.ArgumentException
    description: '*variable* contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("="). -or-The length of *variable* or *value* is greater than or equal to 32,767 characters.-or-An error occurred during the execution of this operation.'
  - type: System.Security.SecurityException
    description: The caller does not have the required permission to perform this operation.
- uid: System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)
  id: SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)
  parent: System.Environment
  href: System.Environment.yml
  name: SetEnvironmentVariable(String, String, EnvironmentVariableTarget)
  fullName: System.Environment.SetEnvironmentVariable(System.String, System.String, System.EnvironmentVariableTarget)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 931
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates, modifies, or deletes an environment variable stored in the current process or in the Windows operating system registry key reserved for the current user or local machine.
  syntax:
    content: public static void SetEnvironmentVariable(string variable, string value, EnvironmentVariableTarget target)
    content.vb: Public Shared Sub SetEnvironmentVariable(variable As String, value As String, target As EnvironmentVariableTarget)
    parameters:
    - id: variable
      type: System.String
      description: The name of an environment variable.
    - id: value
      type: System.String
      description: A value to assign to *variable*.
    - id: target
      type: System.EnvironmentVariableTarget
      description: One of the enumeration values that specifies the location of the environment variable.
  exceptions:
  - type: System.ArgumentNullException
    description: '*variable* is null.'
  - type: System.ArgumentException
    description: '*variable* contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("="). -or-The length of *variable* is greater than or equal to 32,767 characters.-or-*target* is not a member of the @''System.EnvironmentVariableTarget'' enumeration. -or-*target* is @''System.EnvironmentVariableTarget.Machine'' or @''System.EnvironmentVariableTarget.User'', and the length of *variable* is greater than or equal to 255.-or-*target* is @''System.EnvironmentVariableTarget.Process'' and the length of *value* is greater than or equal to 32,767 characters. -or-An error occurred during the execution of this operation.'
  - type: System.Security.SecurityException
    description: The caller does not have the required permission to perform this operation.
- uid: System.Environment.GetLogicalDrives
  id: GetLogicalDrives
  parent: System.Environment
  href: System.Environment.yml
  name: GetLogicalDrives()
  fullName: System.Environment.GetLogicalDrives()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1003
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns an array of string containing the names of the logical drives on the current computer.
  syntax:
    content: public static string[] GetLogicalDrives()
    content.vb: Public Shared Function GetLogicalDrives As String()
    return:
      type: System.String[]
      description: An array of strings where each element contains the name of a logical drive. For example, if the computer's hard drive is the first logical drive, the first element returned is "C:\".
  exceptions:
  - type: System.IO.IOException
    description: An I/O error occurs.
  - type: System.Security.SecurityException
    description: The caller does not have the required permissions.
- uid: System.Environment.NewLine
  id: NewLine
  parent: System.Environment
  href: System.Environment.yml
  name: NewLine
  fullName: System.Environment.NewLine
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1037
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the newline string defined for this environment.
  syntax:
    content: public static string NewLine { get; }
    content.vb: Public Shared ReadOnly Property NewLine As String
    parameters: []
    return:
      type: System.String
      description: A string containing "\r\n" for non-Unix platforms, or a string containing "\n" for Unix platforms.
- uid: System.Environment.Version
  id: Version
  parent: System.Environment
  href: System.Environment.yml
  name: Version
  fullName: System.Environment.Version
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1055
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a @'System.Version' object that describes the major, minor, build, and revision numbers of the common language runtime.
  syntax:
    content: public static Version Version { get; }
    content.vb: Public Shared ReadOnly Property Version As Version
    parameters: []
    return:
      type: System.Version
      description: An object that displays the version of the common language runtime.
- uid: System.Environment.WorkingSet
  id: WorkingSet
  parent: System.Environment
  href: System.Environment.yml
  name: WorkingSet
  fullName: System.Environment.WorkingSet
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1077
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the amount of physical memory mapped to the process context.
  syntax:
    content: public static long WorkingSet { get; }
    content.vb: Public Shared ReadOnly Property WorkingSet As Long
    parameters: []
    return:
      type: System.Int64
      description: A 64-bit signed integer containing the number of bytes of physical memory mapped to the process context.
- uid: System.Environment.OSVersion
  id: OSVersion
  parent: System.Environment
  href: System.Environment.yml
  name: OSVersion
  fullName: System.Environment.OSVersion
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1092
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets an @'System.OperatingSystem' object that contains the current platform identifier and version number.
  syntax:
    content: public static OperatingSystem OSVersion { get; }
    content.vb: Public Shared ReadOnly Property OSVersion As OperatingSystem
    parameters: []
    return:
      type: System.OperatingSystem
      description: An object that contains the platform identifier and version number.
  exceptions:
  - type: System.InvalidOperationException
    description: This property was unable to obtain the system version.-or- The obtained platform identifier is not a member of @'System.PlatformID'
- uid: System.Environment.StackTrace
  id: StackTrace
  parent: System.Environment
  href: System.Environment.yml
  name: StackTrace
  fullName: System.Environment.StackTrace
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1205
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets current stack trace information.
  syntax:
    content: public static string StackTrace { get; }
    content.vb: Public Shared ReadOnly Property StackTrace As String
    parameters: []
    return:
      type: System.String
      description: A string containing stack trace information. This value can be @'System.String.Empty'.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: The requested stack trace information is out of range.
- uid: System.Environment.Is64BitProcess
  id: Is64BitProcess
  parent: System.Environment
  href: System.Environment.yml
  name: Is64BitProcess
  fullName: System.Environment.Is64BitProcess
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1319
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether the current process is a 64-bit process.
  syntax:
    content: public static bool Is64BitProcess { get; }
    content.vb: Public Shared ReadOnly Property Is64BitProcess As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the process is 64-bit; otherwise, false.
- uid: System.Environment.Is64BitOperatingSystem
  id: Is64BitOperatingSystem
  parent: System.Environment
  href: System.Environment.yml
  name: Is64BitOperatingSystem
  fullName: System.Environment.Is64BitOperatingSystem
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1329
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether the current operating system is a 64-bit operating system.
  syntax:
    content: public static bool Is64BitOperatingSystem { get; }
    content.vb: Public Shared ReadOnly Property Is64BitOperatingSystem As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the operating system is 64-bit; otherwise, false.
- uid: System.Environment.HasShutdownStarted
  id: HasShutdownStarted
  parent: System.Environment
  href: System.Environment.yml
  name: HasShutdownStarted
  fullName: System.Environment.HasShutdownStarted
  type: Property
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a value that indicates whether the current application domain is being unloaded or the common language runtime (CLR) is shutting down.
  syntax:
    content: public static bool HasShutdownStarted { get; }
    content.vb: Public Shared ReadOnly Property HasShutdownStarted As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current application domain is being unloaded or the CLR is shutting down; otherwise, false.
- uid: System.Environment.UserName
  id: UserName
  parent: System.Environment
  href: System.Environment.yml
  name: UserName
  fullName: System.Environment.UserName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1357
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the user name of the person who is currently logged on to the Windows operating system.
  syntax:
    content: public static string UserName { get; }
    content.vb: Public Shared ReadOnly Property UserName As String
    parameters: []
    return:
      type: System.String
      description: The user name of the person who is logged on to Windows.
- uid: System.Environment.UserInteractive
  id: UserInteractive
  parent: System.Environment
  href: System.Environment.yml
  name: UserInteractive
  fullName: System.Environment.UserInteractive
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1381
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a value indicating whether the current process is running in user interactive mode.
  syntax:
    content: public static bool UserInteractive { get; }
    content.vb: Public Shared ReadOnly Property UserInteractive As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current process is running in user interactive mode; otherwise, false.
- uid: System.Environment.GetFolderPath(System.Environment.SpecialFolder)
  id: GetFolderPath(System.Environment.SpecialFolder)
  parent: System.Environment
  href: System.Environment.yml
  name: GetFolderPath(Environment.SpecialFolder)
  fullName: System.Environment.GetFolderPath(System.Environment.SpecialFolder)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1405
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the path to the system special folder that is identified by the specified enumeration.
  syntax:
    content: public static string GetFolderPath(Environment.SpecialFolder folder)
    content.vb: Public Shared Function GetFolderPath(folder As Environment.SpecialFolder) As String
    parameters:
    - id: folder
      type: System.Environment.SpecialFolder
      description: An enumerated constant that identifies a system special folder.
    return:
      type: System.String
      description: The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.
  exceptions:
  - type: System.ArgumentException
    description: '*folder* is not a member of @''System.Environment.SpecialFolder''.'
  - type: System.PlatformNotSupportedException
    description: The current platform is not supported.
- uid: System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)
  id: GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)
  parent: System.Environment
  href: System.Environment.yml
  name: GetFolderPath(Environment.SpecialFolder, Environment.SpecialFolderOption)
  fullName: System.Environment.GetFolderPath(System.Environment.SpecialFolder, System.Environment.SpecialFolderOption)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1414
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the path to the system special folder that is identified by the specified enumeration, and uses a specified option for accessing special folders.
  syntax:
    content: public static string GetFolderPath(Environment.SpecialFolder folder, Environment.SpecialFolderOption option)
    content.vb: Public Shared Function GetFolderPath(folder As Environment.SpecialFolder, option As Environment.SpecialFolderOption) As String
    parameters:
    - id: folder
      type: System.Environment.SpecialFolder
      description: An enumerated constant that identifies a system special folder.
    - id: option
      type: System.Environment.SpecialFolderOption
      description: Specifies options to use for accessing a special folder.
    return:
      type: System.String
      description: The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.
  exceptions:
  - type: System.ArgumentException
    description: '*folder* is not a member of @''System.Environment.SpecialFolder'''
  - type: System.PlatformNotSupportedException
    description: '@''System.PlatformNotSupportedException'''
- uid: System.Environment.UserDomainName
  id: UserDomainName
  parent: System.Environment
  href: System.Environment.yml
  name: UserDomainName
  fullName: System.Environment.UserDomainName
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1512
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the network domain name associated with the current user.
  syntax:
    content: public static string UserDomainName { get; }
    content.vb: Public Shared ReadOnly Property UserDomainName As String
    parameters: []
    return:
      type: System.String
      description: The network domain name associated with the current user.
  exceptions:
  - type: System.PlatformNotSupportedException
    description: The operating system does not support retrieving the network domain name.
  - type: System.InvalidOperationException
    description: The network domain name cannot be retrieved.
- uid: System.Environment.CurrentManagedThreadId
  id: CurrentManagedThreadId
  parent: System.Environment
  href: System.Environment.yml
  name: CurrentManagedThreadId
  fullName: System.Environment.CurrentManagedThreadId
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Environment.cs
    startLine: 1752
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a unique identifier for the current managed thread.
  syntax:
    content: public static int CurrentManagedThreadId { get; }
    content.vb: Public Shared ReadOnly Property CurrentManagedThreadId As Integer
    parameters: []
    return:
      type: System.Int32
      description: An integer that represents a unique identifier for this managed thread.
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Exception
  parent: System
  isExternal: false
  href: System.Exception.yml
  name: Exception
  fullName: System.Exception
  type: Class
- uid: System.EnvironmentVariableTarget
  parent: System
  isExternal: false
  href: System.EnvironmentVariableTarget.yml
  name: EnvironmentVariableTarget
  fullName: System.EnvironmentVariableTarget
  type: Enum
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  href: System.Collections.IDictionary.yml
  name: IDictionary
  fullName: System.Collections.IDictionary
  type: Interface
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  type: Namespace
- uid: System.String[]
  isExternal: false
  href: System.String.yml
  name: String[]
  name.vb: String()
  fullName: System.String[]
  fullName.vb: System.String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ()
    fullName: ()
- uid: System.Version
  parent: System
  isExternal: false
  href: System.Version.yml
  name: Version
  fullName: System.Version
  type: Class
- uid: System.Int64
  parent: System
  isExternal: false
  href: System.Int64.yml
  name: Int64
  fullName: System.Int64
  type: Struct
- uid: System.OperatingSystem
  parent: System
  isExternal: false
  href: System.OperatingSystem.yml
  name: OperatingSystem
  fullName: System.OperatingSystem
  type: Class
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Environment.SpecialFolder
  parent: System
  isExternal: false
  href: System.Environment.SpecialFolder.yml
  name: Environment.SpecialFolder
  fullName: System.Environment.SpecialFolder
  type: Enum
- uid: System.Environment.SpecialFolderOption
  parent: System
  isExternal: false
  href: System.Environment.SpecialFolderOption.yml
  name: Environment.SpecialFolderOption
  fullName: System.Environment.SpecialFolderOption
  type: Enum
- uid: System.Security.SecurityException
  isExternal: false
  href: System.Security.SecurityException.yml
  name: SecurityException
  fullName: System.Security.SecurityException
  type: Class
  summary: The exception that is thrown when a security error is detected.
- uid: System.ArgumentException
  parent: System
  isExternal: false
  href: System.ArgumentException.yml
  name: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  summary: The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  href: System.IO.IOException.yml
  name: IOException
  fullName: System.IO.IOException
  type: Class
  summary: The exception that is thrown when an I/O error occurs.
- uid: System.IO.DirectoryNotFoundException
  isExternal: false
  href: System.IO.DirectoryNotFoundException.yml
  name: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
  type: Class
  summary: The exception that is thrown when part of a file or directory cannot be found.
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  type: Class
  summary: The exception that is thrown when a method call is invalid for the object's current state.
- uid: System.OutOfMemoryException
  parent: System
  isExternal: false
  href: System.OutOfMemoryException.yml
  name: OutOfMemoryException
  fullName: System.OutOfMemoryException
  type: Class
  summary: The exception that is thrown when there is not enough memory to continue the execution of a program.
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
  summary: The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
- uid: System.PlatformNotSupportedException
  isExternal: false
  href: System.PlatformNotSupportedException.yml
  name: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
  type: Class
  summary: The exception that is thrown when a feature does not run on a particular platform.
