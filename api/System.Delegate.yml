items:
- uid: System.Delegate
  id: Delegate
  parent: System
  children:
  - System.Delegate.#ctor(System.Object,System.String)
  - System.Delegate.#ctor(System.Type,System.String)
  - System.Delegate.Clone
  - System.Delegate.Combine(System.Delegate,System.Delegate)
  - System.Delegate.Combine(System.Delegate[])
  - System.Delegate.CombineImpl(System.Delegate)
  - System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)
  - System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)
  - System.Delegate.CreateDelegate(System.Type,System.Object,System.String)
  - System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean)
  - System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)
  - System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo)
  - System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)
  - System.Delegate.CreateDelegate(System.Type,System.Type,System.String)
  - System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean)
  - System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)
  - System.Delegate.DynamicInvoke(System.Object[])
  - System.Delegate.DynamicInvokeImpl(System.Object[])
  - System.Delegate.Equals(System.Object)
  - System.Delegate.GetHashCode
  - System.Delegate.GetInvocationList
  - System.Delegate.GetMethodImpl
  - System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Delegate.Method
  - System.Delegate.op_Equality(System.Delegate,System.Delegate)
  - System.Delegate.op_Inequality(System.Delegate,System.Delegate)
  - System.Delegate.Remove(System.Delegate,System.Delegate)
  - System.Delegate.RemoveAll(System.Delegate,System.Delegate)
  - System.Delegate.RemoveImpl(System.Delegate)
  - System.Delegate.Target
  href: System.Delegate.yml
  name: Delegate
  fullName: System.Delegate
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Delegate.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 15
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents a delegate, which is a data structure that refers to a static method or to a class instance and an instance method of that class.
  syntax:
    content: 'public abstract class Delegate : ICloneable, ISerializable'
    content.vb: Public MustInherit Class Delegate Implements ICloneable, ISerializable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Delegate.#ctor(System.Object,System.String)
  id: '#ctor(System.Object,System.String)'
  parent: System.Delegate
  href: System.Delegate.yml
  name: Delegate(Object, String)
  fullName: System.Delegate.Delegate(System.Object, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 43
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a delegate that invokes the specified instance method on the specified class instance.
  syntax:
    content: protected Delegate(object target, string method)
    content.vb: Protected Sub New(target As Object, method As String)
    parameters:
    - id: target
      type: System.Object
      description: The class instance on which the delegate invokes *method*.
    - id: method
      type: System.String
      description: The name of the instance method that the delegate represents.
  exceptions:
  - type: System.ArgumentNullException
    description: '*target* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: There was an error binding to the target method.
- uid: System.Delegate.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Delegate
  href: System.Delegate.yml
  name: Delegate(Type, String)
  fullName: System.Delegate.Delegate(System.Type, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 68
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a delegate that invokes the specified static method from the specified class.
  syntax:
    content: protected Delegate(Type target, string method)
    content.vb: Protected Sub New(target As Type, method As String)
    parameters:
    - id: target
      type: System.Type
      description: The @'System.Type' representing the class that defines *method*.
    - id: method
      type: System.String
      description: The name of the static method that the delegate represents.
  exceptions:
  - type: System.ArgumentNullException
    description: '*target* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: '*target* is not a RuntimeType. See Runtime Types in Reflection.-or-*target* represents an open generic type.'
- uid: System.Delegate.DynamicInvoke(System.Object[])
  id: DynamicInvoke(System.Object[])
  parent: System.Delegate
  href: System.Delegate.yml
  name: DynamicInvoke(Object[])
  name.vb: DynamicInvoke(Object())
  fullName: System.Delegate.DynamicInvoke(System.Object[])
  fullName.vb: System.Delegate.DynamicInvoke(System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 103
  assemblies:
  - mscorlib
  namespace: System
  summary: Dynamically invokes (late-bound) the method represented by the current delegate.
  syntax:
    content: public object DynamicInvoke(params object[] args)
    content.vb: Public Function DynamicInvoke(ParamArray args As Object()) As Object
    parameters:
    - id: args
      type: System.Object[]
      description: An array of objects that are the arguments to pass to the method represented by the current delegate.-or- null, if the method represented by the current delegate does not require arguments.
    return:
      type: System.Object
      description: The object returned by the method represented by the delegate.
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).-or- The number, order, or type of parameters listed in *args* is invalid.
  - type: System.ArgumentException
    description: The method represented by the delegate is invoked on an object or a class that does not support it.
  - type: System.Reflection.TargetInvocationException
    description: The method represented by the delegate is an instance method and the target object is null.-or- One of the encapsulated methods throws an exception.
- uid: System.Delegate.DynamicInvokeImpl(System.Object[])
  id: DynamicInvokeImpl(System.Object[])
  parent: System.Delegate
  href: System.Delegate.yml
  name: DynamicInvokeImpl(Object[])
  name.vb: DynamicInvokeImpl(Object())
  fullName: System.Delegate.DynamicInvokeImpl(System.Object[])
  fullName.vb: System.Delegate.DynamicInvokeImpl(System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 114
  assemblies:
  - mscorlib
  namespace: System
  summary: Dynamically invokes (late-bound) the method represented by the current delegate.
  syntax:
    content: protected virtual object DynamicInvokeImpl(object[] args)
    content.vb: Protected Overridable Function DynamicInvokeImpl(args As Object()) As Object
    parameters:
    - id: args
      type: System.Object[]
      description: An array of objects that are the arguments to pass to the method represented by the current delegate.-or- null, if the method represented by the current delegate does not require arguments.
    return:
      type: System.Object
      description: The object returned by the method represented by the delegate.
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).-or- The number, order, or type of parameters listed in *args* is invalid.
  - type: System.ArgumentException
    description: The method represented by the delegate is invoked on an object or a class that does not support it.
  - type: System.Reflection.TargetInvocationException
    description: The method represented by the delegate is an instance method and the target object is null.-or- One of the encapsulated methods throws an exception.
- uid: System.Delegate.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Delegate
  href: System.Delegate.yml
  name: Equals(Object)
  fullName: System.Delegate.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 124
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether the specified object and the current delegate are of the same type and share the same targets, methods, and invocation list.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current delegate.
    return:
      type: System.Boolean
      description: true if *obj* and the current delegate have the same targets, methods, and invocation list; otherwise, false.
  overridden: System.Object.Equals(System.Object)
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).
- uid: System.Delegate.GetHashCode
  id: GetHashCode
  parent: System.Delegate
  href: System.Delegate.yml
  name: GetHashCode()
  fullName: System.Delegate.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 176
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a hash code for the delegate.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A hash code for the delegate.
  overridden: System.Object.GetHashCode
- uid: System.Delegate.Combine(System.Delegate,System.Delegate)
  id: Combine(System.Delegate,System.Delegate)
  parent: System.Delegate
  href: System.Delegate.yml
  name: Combine(Delegate, Delegate)
  fullName: System.Delegate.Combine(System.Delegate, System.Delegate)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 191
  assemblies:
  - mscorlib
  namespace: System
  summary: Concatenates the invocation lists of two delegates.
  syntax:
    content: public static Delegate Combine(Delegate a, Delegate b)
    content.vb: Public Shared Function Combine(a As Delegate, b As Delegate) As
    parameters:
    - id: a
      type: System.Delegate
      description: The delegate whose invocation list comes first.
    - id: b
      type: System.Delegate
      description: The delegate whose invocation list comes last.
    return:
      type: System.Delegate
      description: A new delegate with an invocation list that concatenates the invocation lists of *a* and *b* in that order. Returns *a* if *b* is null, returns *b* if *a* is a null reference, and returns a null reference if both *a* and *b* are null references.
  exceptions:
  - type: System.ArgumentException
    description: Both *a* and *b* are not null, and *a* and *b* are not instances of the same delegate type.
- uid: System.Delegate.Combine(System.Delegate[])
  id: Combine(System.Delegate[])
  parent: System.Delegate
  href: System.Delegate.yml
  name: Combine(Delegate[])
  name.vb: Combine(Delegate())
  fullName: System.Delegate.Combine(System.Delegate[])
  fullName.vb: System.Delegate.Combine(System.Delegate())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 199
  assemblies:
  - mscorlib
  namespace: System
  summary: Concatenates the invocation lists of an array of delegates.
  syntax:
    content: public static Delegate Combine(params Delegate[] delegates)
    content.vb: Public Shared Function Combine(ParamArray delegates As Delegate ()) As
    parameters:
    - id: delegates
      type: System.Delegate[]
      description: The array of delegates to combine.
    return:
      type: System.Delegate
      description: A new delegate with an invocation list that concatenates the invocation lists of the delegates in the *delegates* array. Returns null if *delegates* is null, if *delegates* contains zero elements, or if every entry in *delegates* is null.
  exceptions:
  - type: System.ArgumentException
    description: Not all the non-null entries in *delegates* are instances of the same delegate type.
- uid: System.Delegate.GetInvocationList
  id: GetInvocationList
  parent: System.Delegate
  href: System.Delegate.yml
  name: GetInvocationList()
  fullName: System.Delegate.GetInvocationList()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 212
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the invocation list of the delegate.
  syntax:
    content: public virtual Delegate[] GetInvocationList()
    content.vb: Public Overridable Function GetInvocationList As
    return:
      type: System.Delegate[]
      description: An array of delegates representing the invocation list of the current delegate.
- uid: System.Delegate.Method
  id: Method
  parent: System.Delegate
  href: System.Delegate.yml
  name: Method
  fullName: System.Delegate.Method
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 220
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the method represented by the delegate.
  syntax:
    content: public MethodInfo Method { get; }
    content.vb: Public ReadOnly Property Method As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: A @'System.Reflection.MethodInfo' describing the method represented by the delegate.
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).
- uid: System.Delegate.GetMethodImpl
  id: GetMethodImpl
  parent: System.Delegate
  href: System.Delegate.yml
  name: GetMethodImpl()
  fullName: System.Delegate.GetMethodImpl()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 228
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the static method represented by the current delegate.
  syntax:
    content: protected virtual MethodInfo GetMethodImpl()
    content.vb: Protected Overridable Function GetMethodImpl As MethodInfo
    return:
      type: System.Reflection.MethodInfo
      description: A @'System.Reflection.MethodInfo' describing the static method represented by the current delegate.
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).
- uid: System.Delegate.Target
  id: Target
  parent: System.Delegate
  href: System.Delegate.yml
  name: Target
  fullName: System.Delegate.Target
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 284
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the class instance on which the current delegate invokes the instance method.
  syntax:
    content: public object Target { get; }
    content.vb: Public ReadOnly Property Target As Object
    parameters: []
    return:
      type: System.Object
      description: The object on which the current delegate invokes the instance method, if the delegate represents an instance method; null if the delegate represents a static method.
- uid: System.Delegate.Remove(System.Delegate,System.Delegate)
  id: Remove(System.Delegate,System.Delegate)
  parent: System.Delegate
  href: System.Delegate.yml
  name: Remove(Delegate, Delegate)
  fullName: System.Delegate.Remove(System.Delegate, System.Delegate)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 293
  assemblies:
  - mscorlib
  namespace: System
  summary: Removes the last occurrence of the invocation list of a delegate from the invocation list of another delegate.
  syntax:
    content: public static Delegate Remove(Delegate source, Delegate value)
    content.vb: Public Shared Function Remove(source As Delegate, value As Delegate) As
    parameters:
    - id: source
      type: System.Delegate
      description: The delegate from which to remove the invocation list of *value*.
    - id: value
      type: System.Delegate
      description: The delegate that supplies the invocation list to remove from the invocation list of *source*.
    return:
      type: System.Delegate
      description: A new delegate with an invocation list formed by taking the invocation list of *source* and removing the last occurrence of the invocation list of *value*, if the invocation list of *value* is found within the invocation list of *source*. Returns *source* if *value* is null or if the invocation list of *value* is not found within the invocation list of *source*. Returns a null reference if the invocation list of *value* is equal to the invocation list of *source* or if *source* is a null reference.
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).
  - type: System.ArgumentException
    description: The delegate types do not match.
- uid: System.Delegate.RemoveAll(System.Delegate,System.Delegate)
  id: RemoveAll(System.Delegate,System.Delegate)
  parent: System.Delegate
  href: System.Delegate.yml
  name: RemoveAll(Delegate, Delegate)
  fullName: System.Delegate.RemoveAll(System.Delegate, System.Delegate)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 308
  assemblies:
  - mscorlib
  namespace: System
  summary: Removes all occurrences of the invocation list of a delegate from the invocation list of another delegate.
  syntax:
    content: public static Delegate RemoveAll(Delegate source, Delegate value)
    content.vb: Public Shared Function RemoveAll(source As Delegate, value As Delegate) As
    parameters:
    - id: source
      type: System.Delegate
      description: The delegate from which to remove the invocation list of *value*.
    - id: value
      type: System.Delegate
      description: The delegate that supplies the invocation list to remove from the invocation list of *source*.
    return:
      type: System.Delegate
      description: A new delegate with an invocation list formed by taking the invocation list of *source* and removing all occurrences of the invocation list of *value*, if the invocation list of *value* is found within the invocation list of *source*. Returns *source* if *value* is null or if the invocation list of *value* is not found within the invocation list of *source*. Returns a null reference if the invocation list of *value* is equal to the invocation list of *source*, if *source* contains only a series of invocation lists that are equal to the invocation list of *value*, or if *source* is a null reference.
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).
  - type: System.ArgumentException
    description: The delegate types do not match.
- uid: System.Delegate.CombineImpl(System.Delegate)
  id: CombineImpl(System.Delegate)
  parent: System.Delegate
  href: System.Delegate.yml
  name: CombineImpl(Delegate)
  fullName: System.Delegate.CombineImpl(System.Delegate)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 322
  assemblies:
  - mscorlib
  namespace: System
  summary: Concatenates the invocation lists of the specified multicast (combinable) delegate and the current multicast (combinable) delegate.
  syntax:
    content: protected virtual Delegate CombineImpl(Delegate d)
    content.vb: Protected Overridable Function CombineImpl(d As Delegate) As
    parameters:
    - id: d
      type: System.Delegate
      description: The multicast (combinable) delegate whose invocation list to append to the end of the invocation list of the current multicast (combinable) delegate.
    return:
      type: System.Delegate
      description: A new multicast (combinable) delegate with an invocation list that concatenates the invocation list of the current multicast (combinable) delegate and the invocation list of *d*, or the current multicast (combinable) delegate if *d* is null.
  exceptions:
  - type: System.MulticastNotSupportedException
    description: Always thrown.
- uid: System.Delegate.RemoveImpl(System.Delegate)
  id: RemoveImpl(System.Delegate)
  parent: System.Delegate
  href: System.Delegate.yml
  name: RemoveImpl(Delegate)
  fullName: System.Delegate.RemoveImpl(System.Delegate)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 327
  assemblies:
  - mscorlib
  namespace: System
  summary: Removes the invocation list of a delegate from the invocation list of another delegate.
  syntax:
    content: protected virtual Delegate RemoveImpl(Delegate d)
    content.vb: Protected Overridable Function RemoveImpl(d As Delegate) As
    parameters:
    - id: d
      type: System.Delegate
      description: The delegate that supplies the invocation list to remove from the invocation list of the current delegate.
    return:
      type: System.Delegate
      description: A new delegate with an invocation list formed by taking the invocation list of the current delegate and removing the invocation list of *value*, if the invocation list of *value* is found within the current delegate's invocation list. Returns the current delegate if *value* is null or if the invocation list of *value* is not found within the current delegate's invocation list. Returns null if the invocation list of *value* is equal to the current delegate's invocation list.
  exceptions:
  - type: System.MemberAccessException
    description: The caller does not have access to the method represented by the delegate (for example, if the method is private).
- uid: System.Delegate.Clone
  id: Clone
  parent: System.Delegate
  href: System.Delegate.yml
  name: Clone()
  fullName: System.Delegate.Clone()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 333
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a shallow copy of the delegate.
  syntax:
    content: public virtual object Clone()
    content.vb: Public Overridable Function Clone As Object
    return:
      type: System.Object
      description: A shallow copy of the delegate.
- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String)
  id: CreateDelegate(System.Type,System.Object,System.String)
  parent: System.Delegate
  href: System.Delegate.yml
  name: CreateDelegate(Type, Object, String)
  fullName: System.Delegate.CreateDelegate(System.Type, System.Object, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 339
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a delegate of the specified type that represents the specified instance method to invoke on the specified class instance.
  syntax:
    content: public static Delegate CreateDelegate(Type type, object target, string method)
    content.vb: Public Shared Function CreateDelegate(type As Type, target As Object, method As String) As
    parameters:
    - id: type
      type: System.Type
      description: The @'System.Type' of delegate to create.
    - id: target
      type: System.Object
      description: The class instance on which *method* is invoked.
    - id: method
      type: System.String
      description: The name of the instance method that the delegate is to represent.
    return:
      type: System.Delegate
      description: A delegate of the specified type that represents the specified instance method to invoke on the specified class instance.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or- *target* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: '*type* does not inherit @''System.MulticastDelegate''. -or-*type* is not a RuntimeType. See Runtime Types in Reflection.-or- *method* is not an instance method. -or-*method* cannot be bound, for example because it cannot be found.'
  - type: System.MissingMethodException
    description: The Invoke method of *type* is not found.
  - type: System.MethodAccessException
    description: The caller does not have the permissions necessary to access *method*.
- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean)
  id: CreateDelegate(System.Type,System.Object,System.String,System.Boolean)
  parent: System.Delegate
  href: System.Delegate.yml
  name: CreateDelegate(Type, Object, String, Boolean)
  fullName: System.Delegate.CreateDelegate(System.Type, System.Object, System.String, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 345
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a delegate of the specified type that represents the specified instance method to invoke on the specified class instance with the specified case-sensitivity.
  syntax:
    content: public static Delegate CreateDelegate(Type type, object target, string method, bool ignoreCase)
    content.vb: Public Shared Function CreateDelegate(type As Type, target As Object, method As String, ignoreCase As Boolean) As
    parameters:
    - id: type
      type: System.Type
      description: The @'System.Type' of delegate to create.
    - id: target
      type: System.Object
      description: The class instance on which *method* is invoked.
    - id: method
      type: System.String
      description: The name of the instance method that the delegate is to represent.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean indicating whether to ignore the case when comparing the name of the method.
    return:
      type: System.Delegate
      description: A delegate of the specified type that represents the specified instance method to invoke on the specified class instance.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or- *target* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: '*type* does not inherit @''System.MulticastDelegate''.-or-*type* is not a RuntimeType. See Runtime Types in Reflection.-or- *method* is not an instance method. -or-*method* cannot be bound, for example because it cannot be found.'
  - type: System.MissingMethodException
    description: The Invoke method of *type* is not found.
  - type: System.MethodAccessException
    description: The caller does not have the permissions necessary to access *method*.
- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)
  id: CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)
  parent: System.Delegate
  href: System.Delegate.yml
  name: CreateDelegate(Type, Object, String, Boolean, Boolean)
  fullName: System.Delegate.CreateDelegate(System.Type, System.Object, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 368
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a delegate of the specified type that represents the specified instance method to invoke on the specified class instance, with the specified case-sensitivity and the specified behavior on failure to bind.
  syntax:
    content: public static Delegate CreateDelegate(Type type, object target, string method, bool ignoreCase, bool throwOnBindFailure)
    content.vb: Public Shared Function CreateDelegate(type As Type, target As Object, method As String, ignoreCase As Boolean, throwOnBindFailure As Boolean) As
    parameters:
    - id: type
      type: System.Type
      description: The @'System.Type' of delegate to create.
    - id: target
      type: System.Object
      description: The class instance on which *method* is invoked.
    - id: method
      type: System.String
      description: The name of the instance method that the delegate is to represent.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean indicating whether to ignore the case when comparing the name of the method.
    - id: throwOnBindFailure
      type: System.Boolean
      description: true to throw an exception if *method* cannot be bound; otherwise, false.
    return:
      type: System.Delegate
      description: A delegate of the specified type that represents the specified instance method to invoke on the specified class instance.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or- *target* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: '*type* does not inherit @''System.MulticastDelegate''.-or-*type* is not a RuntimeType. See Runtime Types in Reflection. -or-  *method* is not an instance method. -or-*method* cannot be bound, for example because it cannot be found, and *throwOnBindFailure* is true.'
  - type: System.MissingMethodException
    description: The Invoke method of *type* is not found.
  - type: System.MethodAccessException
    description: The caller does not have the permissions necessary to access *method*.
- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String)
  id: CreateDelegate(System.Type,System.Type,System.String)
  parent: System.Delegate
  href: System.Delegate.yml
  name: CreateDelegate(Type, Type, String)
  fullName: System.Delegate.CreateDelegate(System.Type, System.Type, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 417
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a delegate of the specified type that represents the specified static method of the specified class.
  syntax:
    content: public static Delegate CreateDelegate(Type type, Type target, string method)
    content.vb: Public Shared Function CreateDelegate(type As Type, target As Type, method As String) As
    parameters:
    - id: type
      type: System.Type
      description: The @'System.Type' of delegate to create.
    - id: target
      type: System.Type
      description: The @'System.Type' representing the class that implements *method*.
    - id: method
      type: System.String
      description: The name of the static method that the delegate is to represent.
    return:
      type: System.Delegate
      description: A delegate of the specified type that represents the specified static method of the specified class.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or- *target* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: '*type* does not inherit @''System.MulticastDelegate''.-or- *type* is not a RuntimeType. See Runtime Types in Reflection. -or-*target* is not a RuntimeType.-or-*target* is an open generic type. That is, its @''System.Type.ContainsGenericParameters'' property is true.-or-*method* is not a static method (Shared method in Visual Basic). -or-*method* cannot be bound, for example because it cannot be found, and *throwOnBindFailure* is true.'
  - type: System.MissingMethodException
    description: The Invoke method of *type* is not found.
  - type: System.MethodAccessException
    description: The caller does not have the permissions necessary to access *method*.
- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean)
  id: CreateDelegate(System.Type,System.Type,System.String,System.Boolean)
  parent: System.Delegate
  href: System.Delegate.yml
  name: CreateDelegate(Type, Type, String, Boolean)
  fullName: System.Delegate.CreateDelegate(System.Type, System.Type, System.String, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 423
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a delegate of the specified type that represents the specified static method of the specified class, with the specified case-sensitivity.
  syntax:
    content: public static Delegate CreateDelegate(Type type, Type target, string method, bool ignoreCase)
    content.vb: Public Shared Function CreateDelegate(type As Type, target As Type, method As String, ignoreCase As Boolean) As
    parameters:
    - id: type
      type: System.Type
      description: The @'System.Type' of delegate to create.
    - id: target
      type: System.Type
      description: The @'System.Type' representing the class that implements *method*.
    - id: method
      type: System.String
      description: The name of the static method that the delegate is to represent.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean indicating whether to ignore the case when comparing the name of the method.
    return:
      type: System.Delegate
      description: A delegate of the specified type that represents the specified static method of the specified class.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or- *target* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: '*type* does not inherit @''System.MulticastDelegate''.-or- *type* is not a RuntimeType. See Runtime Types in Reflection. -or-*target* is not a RuntimeType.-or-*target* is an open generic type. That is, its @''System.Type.ContainsGenericParameters'' property is true.-or-*method* is not a static method (Shared method in Visual Basic). -or-*method* cannot be bound, for example because it cannot be found.'
  - type: System.MissingMethodException
    description: The Invoke method of *type* is not found.
  - type: System.MethodAccessException
    description: The caller does not have the permissions necessary to access *method*.
- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)
  id: CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)
  parent: System.Delegate
  href: System.Delegate.yml
  name: CreateDelegate(Type, Type, String, Boolean, Boolean)
  fullName: System.Delegate.CreateDelegate(System.Type, System.Type, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 429
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a delegate of the specified type that represents the specified static method of the specified class, with the specified case-sensitivity and the specified behavior on failure to bind.
  syntax:
    content: public static Delegate CreateDelegate(Type type, Type target, string method, bool ignoreCase, bool throwOnBindFailure)
    content.vb: Public Shared Function CreateDelegate(type As Type, target As Type, method As String, ignoreCase As Boolean, throwOnBindFailure As Boolean) As
    parameters:
    - id: type
      type: System.Type
      description: The @'System.Type' of delegate to create.
    - id: target
      type: System.Type
      description: The @'System.Type' representing the class that implements *method*.
    - id: method
      type: System.String
      description: The name of the static method that the delegate is to represent.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean indicating whether to ignore the case when comparing the name of the method.
    - id: throwOnBindFailure
      type: System.Boolean
      description: true to throw an exception if *method* cannot be bound; otherwise, false.
    return:
      type: System.Delegate
      description: A delegate of the specified type that represents the specified static method of the specified class.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or- *target* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: '*type* does not inherit @''System.MulticastDelegate''.-or- *type* is not a RuntimeType. See Runtime Types in Reflection. -or-*target* is not a RuntimeType.-or-*target* is an open generic type. That is, its @''System.Type.ContainsGenericParameters'' property is true.-or-*method* is not a static method (Shared method in Visual Basic). -or-*method* cannot be bound, for example because it cannot be found, and *throwOnBindFailure* is true.'
  - type: System.MissingMethodException
    description: The Invoke method of *type* is not found.
  - type: System.MethodAccessException
    description: The caller does not have the permissions necessary to access *method*.
- uid: System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)
  id: CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)
  parent: System.Delegate
  href: System.Delegate.yml
  name: CreateDelegate(Type, MethodInfo, Boolean)
  fullName: System.Delegate.CreateDelegate(System.Type, System.Reflection.MethodInfo, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 479
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a delegate of the specified type to represent the specified static method, with the specified behavior on failure to bind.
  syntax:
    content: public static Delegate CreateDelegate(Type type, MethodInfo method, bool throwOnBindFailure)
    content.vb: Public Shared Function CreateDelegate(type As Type, method As MethodInfo, throwOnBindFailure As Boolean) As
    parameters:
    - id: type
      type: System.Type
      description: The @'System.Type' of delegate to create.
    - id: method
      type: System.Reflection.MethodInfo
      description: The @'System.Reflection.MethodInfo' describing the static or instance method the delegate is to represent.
    - id: throwOnBindFailure
      type: System.Boolean
      description: true to throw an exception if *method* cannot be bound; otherwise, false.
    return:
      type: System.Delegate
      description: A delegate of the specified type to represent the specified static method.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: '*type* does not inherit @''System.MulticastDelegate''.-or-*type* is not a RuntimeType. See Runtime Types in Reflection. -or-*method* cannot be bound, and *throwOnBindFailure* is true.-or-*method* is not a RuntimeMethodInfo. See Runtime Types in Reflection.'
  - type: System.MissingMethodException
    description: The Invoke method of *type* is not found.
  - type: System.MethodAccessException
    description: The caller does not have the permissions necessary to access *method*.
- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)
  id: CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)
  parent: System.Delegate
  href: System.Delegate.yml
  name: CreateDelegate(Type, Object, MethodInfo)
  fullName: System.Delegate.CreateDelegate(System.Type, System.Object, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 524
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a delegate of the specified type that represents the specified static or instance method, with the specified first argument.
  syntax:
    content: public static Delegate CreateDelegate(Type type, object firstArgument, MethodInfo method)
    content.vb: Public Shared Function CreateDelegate(type As Type, firstArgument As Object, method As MethodInfo) As
    parameters:
    - id: type
      type: System.Type
      description: The @'System.Type' of delegate to create.
    - id: firstArgument
      type: System.Object
      description: The object to which the delegate is bound, or null to treat *method* as static (Shared in Visual Basic).
    - id: method
      type: System.Reflection.MethodInfo
      description: The @'System.Reflection.MethodInfo' describing the static or instance method the delegate is to represent.
    return:
      type: System.Delegate
      description: A delegate of the specified type that represents the specified static or instance method.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: '*type* does not inherit @''System.MulticastDelegate''.-or-*type* is not a RuntimeType. See Runtime Types in Reflection. -or-*method* cannot be bound.-or-*method* is not a RuntimeMethodInfo. See Runtime Types in Reflection.'
  - type: System.MissingMethodException
    description: The Invoke method of *type* is not found.
  - type: System.MethodAccessException
    description: The caller does not have the permissions necessary to access *method*.
- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)
  id: CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)
  parent: System.Delegate
  href: System.Delegate.yml
  name: CreateDelegate(Type, Object, MethodInfo, Boolean)
  fullName: System.Delegate.CreateDelegate(System.Type, System.Object, System.Reflection.MethodInfo, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 530
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a delegate of the specified type that represents the specified static or instance method, with the specified first argument and the specified behavior on failure to bind.
  syntax:
    content: public static Delegate CreateDelegate(Type type, object firstArgument, MethodInfo method, bool throwOnBindFailure)
    content.vb: Public Shared Function CreateDelegate(type As Type, firstArgument As Object, method As MethodInfo, throwOnBindFailure As Boolean) As
    parameters:
    - id: type
      type: System.Type
      description: A @'System.Type' representing the type of delegate to create.
    - id: firstArgument
      type: System.Object
      description: An @'System.Object' that is the first argument of the method the delegate represents. For instance methods, it must be compatible with the instance type.
    - id: method
      type: System.Reflection.MethodInfo
      description: The @'System.Reflection.MethodInfo' describing the static or instance method the delegate is to represent.
    - id: throwOnBindFailure
      type: System.Boolean
      description: true to throw an exception if *method* cannot be bound; otherwise, false.
    return:
      type: System.Delegate
      description: A delegate of the specified type that represents the specified static or instance method, or null if *throwOnBindFailure* is false and the delegate cannot be bound to *method*.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: '*type* does not inherit @''System.MulticastDelegate''.-or-*type* is not a RuntimeType. See Runtime Types in Reflection. -or-*method* cannot be bound, and *throwOnBindFailure* is true.-or-*method* is not a RuntimeMethodInfo. See Runtime Types in Reflection.'
  - type: System.MissingMethodException
    description: The Invoke method of *type* is not found.
  - type: System.MethodAccessException
    description: The caller does not have the permissions necessary to access *method*.
- uid: System.Delegate.op_Equality(System.Delegate,System.Delegate)
  id: op_Equality(System.Delegate,System.Delegate)
  parent: System.Delegate
  href: System.Delegate.yml
  name: Equality(Delegate, Delegate)
  fullName: System.Delegate.Equality(System.Delegate, System.Delegate)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 571
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether the specified delegates are equal.
  syntax:
    content: public static bool operator ==(Delegate d1, Delegate d2)
    content.vb: Public Shared Operator =(d1 As Delegate, d2 As Delegate) As Boolean
    parameters:
    - id: d1
      type: System.Delegate
      description: The first delegate to compare.
    - id: d2
      type: System.Delegate
      description: The second delegate to compare.
    return:
      type: System.Boolean
      description: true if *d1* is equal to *d2*; otherwise, false.
- uid: System.Delegate.op_Inequality(System.Delegate,System.Delegate)
  id: op_Inequality(System.Delegate,System.Delegate)
  parent: System.Delegate
  href: System.Delegate.yml
  name: Inequality(Delegate, Delegate)
  fullName: System.Delegate.Inequality(System.Delegate, System.Delegate)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 579
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether the specified delegates are not equal.
  syntax:
    content: public static bool operator !=(Delegate d1, Delegate d2)
    content.vb: Public Shared Operator <>(d1 As Delegate, d2 As Delegate) As Boolean
    parameters:
    - id: d1
      type: System.Delegate
      description: The first delegate to compare.
    - id: d2
      type: System.Delegate
      description: The second delegate to compare.
    return:
      type: System.Boolean
      description: true if *d1* is not equal to *d2*; otherwise, false.
- uid: System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Delegate
  href: System.Delegate.yml
  name: GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 591
  assemblies:
  - mscorlib
  namespace: System
  summary: Not supported.
  syntax:
    content: public virtual void GetObjectData(SerializationInfo info, StreamingContext context)
    content.vb: Public Overridable Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Not supported.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Not supported.
  exceptions:
  - type: System.NotSupportedException
    description: This method is not supported.
- uid: System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo)
  id: CreateDelegate(System.Type,System.Reflection.MethodInfo)
  parent: System.Delegate
  href: System.Delegate.yml
  name: CreateDelegate(Type, MethodInfo)
  fullName: System.Delegate.CreateDelegate(System.Type, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Delegate.cs
    startLine: 673
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a delegate of the specified type to represent the specified static method.
  syntax:
    content: public static Delegate CreateDelegate(Type type, MethodInfo method)
    content.vb: Public Shared Function CreateDelegate(type As Type, method As MethodInfo) As
    parameters:
    - id: type
      type: System.Type
      description: The @'System.Type' of delegate to create.
    - id: method
      type: System.Reflection.MethodInfo
      description: The @'System.Reflection.MethodInfo' describing the static or instance method the delegate is to represent. Only static methods are supported in the .NET Framework version 1.0 and 1.1.
    return:
      type: System.Delegate
      description: A delegate of the specified type to represent the specified static method.
  exceptions:
  - type: System.ArgumentNullException
    description: '*type* is null.-or- *method* is null.'
  - type: System.ArgumentException
    description: '*type* does not inherit @''System.MulticastDelegate''.-or-*type* is not a RuntimeType. See Runtime Types in Reflection. -or- *method* is not a static method, and the .NET Framework version is 1.0 or 1.1. -or-*method* cannot be bound.-or-*method* is not a RuntimeMethodInfo. See Runtime Types in Reflection.'
  - type: System.MissingMethodException
    description: The Invoke method of *type* is not found.
  - type: System.MethodAccessException
    description: The caller does not have the permissions necessary to access *method*.
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System.Object[]
  isExternal: true
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Delegate
  parent: System
  isExternal: false
  href: System.Delegate.yml
  name: Delegate
  fullName: System.Delegate
  type: Class
- uid: System.Delegate[]
  isExternal: false
  href: System.Delegate.yml
  name: Delegate[]
  name.vb: Delegate()
  fullName: System.Delegate[]
  fullName.vb: System.Delegate()
  spec.csharp:
  - uid: System.Delegate
    name: Delegate
    fullName: System.Delegate
    href: System.Delegate.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Delegate
    name: Delegate
    fullName: System.Delegate
    href: System.Delegate.yml
  - name: ()
    fullName: ()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  type: Namespace
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  href: System.Runtime.Serialization.SerializationInfo.yml
  name: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
  type: Class
- uid: System.Runtime.Serialization.StreamingContext
  isExternal: false
  href: System.Runtime.Serialization.StreamingContext.yml
  name: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
  type: Struct
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  type: Namespace
