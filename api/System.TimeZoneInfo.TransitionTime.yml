items:
- uid: System.TimeZoneInfo.TransitionTime
  id: TimeZoneInfo.TransitionTime
  parent: System
  children:
  - System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)
  - System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)
  - System.TimeZoneInfo.TransitionTime.Day
  - System.TimeZoneInfo.TransitionTime.DayOfWeek
  - System.TimeZoneInfo.TransitionTime.Equals(System.Object)
  - System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)
  - System.TimeZoneInfo.TransitionTime.GetHashCode
  - System.TimeZoneInfo.TransitionTime.IsFixedDateRule
  - System.TimeZoneInfo.TransitionTime.Month
  - System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)
  - System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)
  - System.TimeZoneInfo.TransitionTime.TimeOfDay
  - System.TimeZoneInfo.TransitionTime.Week
  href: System.TimeZoneInfo.TransitionTime.yml
  name: TimeZoneInfo.TransitionTime
  fullName: System.TimeZoneInfo.TransitionTime
  type: Struct
  source:
    remote: &o0
      path: src/mscorlib/src/System/TimeZoneInfo.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4704
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides information about a specific time change, such as the change from daylight saving time to standard time or vice versa, in a particular time zone.
  syntax:
    content: 'public struct TransitionTime : IEquatable<TimeZoneInfo.TransitionTime>, ISerializable, IDeserializationCallback'
    content.vb: Public Structure TransitionTime Implements IEquatable(Of TimeZoneInfo.TransitionTime), ISerializable, IDeserializationCallback
  implements:
  - System.IEquatable{System.TimeZoneInfo.TransitionTime}
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.Serialization.IDeserializationCallback
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.TimeZoneInfo.TransitionTime.TimeOfDay
  id: TimeOfDay
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: TimeOfDay
  fullName: System.TimeZoneInfo.TransitionTime.TimeOfDay
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4719
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the hour, minute, and second at which the time change occurs.
  syntax:
    content: public DateTime TimeOfDay { get; }
    content.vb: Public ReadOnly Property TimeOfDay As Date
    parameters: []
    return:
      type: System.DateTime
      description: The time of day at which the time change occurs.
- uid: System.TimeZoneInfo.TransitionTime.Month
  id: Month
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: Month
  fullName: System.TimeZoneInfo.TransitionTime.Month
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4725
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the month in which the time change occurs.
  syntax:
    content: public int Month { get; }
    content.vb: Public ReadOnly Property Month As Integer
    parameters: []
    return:
      type: System.Int32
      description: The month in which the time change occurs.
- uid: System.TimeZoneInfo.TransitionTime.Week
  id: Week
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: Week
  fullName: System.TimeZoneInfo.TransitionTime.Week
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4732
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the week of the month in which a time change occurs.
  syntax:
    content: public int Week { get; }
    content.vb: Public ReadOnly Property Week As Integer
    parameters: []
    return:
      type: System.Int32
      description: The week of the month in which the time change occurs.
- uid: System.TimeZoneInfo.TransitionTime.Day
  id: Day
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: Day
  fullName: System.TimeZoneInfo.TransitionTime.Day
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4738
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the day on which the time change occurs.
  syntax:
    content: public int Day { get; }
    content.vb: Public ReadOnly Property Day As Integer
    parameters: []
    return:
      type: System.Int32
      description: The day on which the time change occurs.
- uid: System.TimeZoneInfo.TransitionTime.DayOfWeek
  id: DayOfWeek
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: DayOfWeek
  fullName: System.TimeZoneInfo.TransitionTime.DayOfWeek
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4744
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the day of the week on which the time change occurs.
  syntax:
    content: public DayOfWeek DayOfWeek { get; }
    content.vb: Public ReadOnly Property DayOfWeek As DayOfWeek
    parameters: []
    return:
      type: System.DayOfWeek
      description: The day of the week on which the time change occurs.
- uid: System.TimeZoneInfo.TransitionTime.IsFixedDateRule
  id: IsFixedDateRule
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: IsFixedDateRule
  fullName: System.TimeZoneInfo.TransitionTime.IsFixedDateRule
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4750
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a value indicating whether the time change occurs at a fixed date and time (such as November 1) or a floating date and time (such as the last Sunday of October).
  syntax:
    content: public bool IsFixedDateRule { get; }
    content.vb: Public ReadOnly Property IsFixedDateRule As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the time change rule is fixed-date; false if the time change rule is floating-date.
- uid: System.TimeZoneInfo.TransitionTime.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: Equals(Object)
  fullName: System.TimeZoneInfo.TransitionTime.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4757
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether an object has identical values to the current @'System.TimeZoneInfo.TransitionTime' object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with the current @'System.TimeZoneInfo.TransitionTime' object.
    return:
      type: System.Boolean
      description: true if the two objects are equal; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
- uid: System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)
  id: op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: Equality(TimeZoneInfo.TransitionTime, TimeZoneInfo.TransitionTime)
  fullName: System.TimeZoneInfo.TransitionTime.Equality(System.TimeZoneInfo.TransitionTime, System.TimeZoneInfo.TransitionTime)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4765
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether two specified @'System.TimeZoneInfo.TransitionTime' objects are equal.
  syntax:
    content: public static bool operator ==(TimeZoneInfo.TransitionTime t1, TimeZoneInfo.TransitionTime t2)
    content.vb: Public Shared Operator =(t1 As TimeZoneInfo.TransitionTime, t2 As TimeZoneInfo.TransitionTime) As Boolean
    parameters:
    - id: t1
      type: System.TimeZoneInfo.TransitionTime
      description: The first object to compare.
    - id: t2
      type: System.TimeZoneInfo.TransitionTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if *t1* and *t2* have identical values; otherwise, false.
- uid: System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)
  id: op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: Inequality(TimeZoneInfo.TransitionTime, TimeZoneInfo.TransitionTime)
  fullName: System.TimeZoneInfo.TransitionTime.Inequality(System.TimeZoneInfo.TransitionTime, System.TimeZoneInfo.TransitionTime)
  type: Operator
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4769
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether two specified @'System.TimeZoneInfo.TransitionTime' objects are not equal.
  syntax:
    content: public static bool operator !=(TimeZoneInfo.TransitionTime t1, TimeZoneInfo.TransitionTime t2)
    content.vb: Public Shared Operator <>(t1 As TimeZoneInfo.TransitionTime, t2 As TimeZoneInfo.TransitionTime) As Boolean
    parameters:
    - id: t1
      type: System.TimeZoneInfo.TransitionTime
      description: The first object to compare.
    - id: t2
      type: System.TimeZoneInfo.TransitionTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if *t1* and *t2* have any different member values; otherwise, false.
- uid: System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)
  id: Equals(System.TimeZoneInfo.TransitionTime)
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: Equals(TimeZoneInfo.TransitionTime)
  fullName: System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4773
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether the current @'System.TimeZoneInfo.TransitionTime' object has identical values to a second @'System.TimeZoneInfo.TransitionTime' object.
  syntax:
    content: public bool Equals(TimeZoneInfo.TransitionTime other)
    content.vb: Public Function Equals(other As TimeZoneInfo.TransitionTime) As Boolean
    parameters:
    - id: other
      type: System.TimeZoneInfo.TransitionTime
      description: An object to compare to the current instance.
    return:
      type: System.Boolean
      description: true if the two objects have identical property values; otherwise, false.
- uid: System.TimeZoneInfo.TransitionTime.GetHashCode
  id: GetHashCode
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: GetHashCode()
  fullName: System.TimeZoneInfo.TransitionTime.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4793
  assemblies:
  - mscorlib
  namespace: System
  summary: Serves as a hash function for hashing algorithms and data structures such as hash tables.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer that serves as the hash code for this @'System.TimeZoneInfo.TransitionTime' object.
  overridden: System.ValueType.GetHashCode
- uid: System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)
  id: CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: CreateFixedDateRule(DateTime, Int32, Int32)
  fullName: System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime, System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4814
  assemblies:
  - mscorlib
  namespace: System
  summary: Defines a time change that uses a fixed-date rule (that is, a time change that occurs on a specific day of a specific month).
  syntax:
    content: public static TimeZoneInfo.TransitionTime CreateFixedDateRule(DateTime timeOfDay, int month, int day)
    content.vb: Public Shared Function CreateFixedDateRule(timeOfDay As Date, month As Integer, day As Integer) As TimeZoneInfo.TransitionTime
    parameters:
    - id: timeOfDay
      type: System.DateTime
      description: The time at which the time change occurs. This parameter corresponds to the @'System.TimeZoneInfo.TransitionTime.TimeOfDay' property. For details, see Remarks.
    - id: month
      type: System.Int32
      description: The month in which the time change occurs. This parameter corresponds to the @'System.TimeZoneInfo.TransitionTime.Month' property.
    - id: day
      type: System.Int32
      description: The day of the month on which the time change occurs. This parameter corresponds to the @'System.TimeZoneInfo.TransitionTime.Day' property.
    return:
      type: System.TimeZoneInfo.TransitionTime
      description: Data about the time change.
  exceptions:
  - type: System.ArgumentException
    description: The *timeOfDay* parameter has a non-default date component.-or-The *timeOfDay* parameter's @'System.DateTime.Kind' property is not @'System.DateTimeKind.Unspecified'.-or-The *timeOfDay* parameter does not represent a whole number of milliseconds.
  - type: System.ArgumentOutOfRangeException
    description: The *month* parameter is less than 1 or greater than 12.-or-The *day* parameter is less than 1 or greater than 31.
- uid: System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)
  id: CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)
  parent: System.TimeZoneInfo.TransitionTime
  href: System.TimeZoneInfo.TransitionTime.yml
  name: CreateFloatingDateRule(DateTime, Int32, Int32, DayOfWeek)
  fullName: System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime, System.Int32, System.Int32, System.DayOfWeek)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/TimeZoneInfo.cs
    startLine: 4823
  assemblies:
  - mscorlib
  namespace: System
  summary: Defines a time change that uses a floating-date rule (that is, a time change that occurs on a specific day of a specific week of a specific month).
  syntax:
    content: public static TimeZoneInfo.TransitionTime CreateFloatingDateRule(DateTime timeOfDay, int month, int week, DayOfWeek dayOfWeek)
    content.vb: Public Shared Function CreateFloatingDateRule(timeOfDay As Date, month As Integer, week As Integer, dayOfWeek As DayOfWeek) As TimeZoneInfo.TransitionTime
    parameters:
    - id: timeOfDay
      type: System.DateTime
      description: The time at which the time change occurs. This parameter corresponds to the @'System.TimeZoneInfo.TransitionTime.TimeOfDay' property. For details, see Remarks.
    - id: month
      type: System.Int32
      description: The month in which the time change occurs. This parameter corresponds to the @'System.TimeZoneInfo.TransitionTime.Month' property.
    - id: week
      type: System.Int32
      description: The week of the month in which the time change occurs. Its value can range from 1 to 5, with 5 representing the last week of the month. This parameter corresponds to the @'System.TimeZoneInfo.TransitionTime.Week' property.
    - id: dayOfWeek
      type: System.DayOfWeek
      description: The day of the week on which the time change occurs. This parameter corresponds to the @'System.TimeZoneInfo.TransitionTime.DayOfWeek' property.
    return:
      type: System.TimeZoneInfo.TransitionTime
      description: Data about the time change.
  exceptions:
  - type: System.ArgumentException
    description: The *timeOfDay* parameter has a non-default date component.-or-The *timeOfDay* parameter does not represent a whole number of milliseconds.-or-The *timeOfDay* parameter's @'System.DateTime.Kind' property is not @'System.DateTimeKind.Unspecified'.
  - type: System.ArgumentOutOfRangeException
    description: '*month* is less than 1 or greater than 12.-or-*week* is less than 1 or greater than 5.-or-The *dayOfWeek* parameter is not a member of the @''System.DayOfWeek'' enumeration.'
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  href: System.DayOfWeek.yml
  name: DayOfWeek
  fullName: System.DayOfWeek
  type: Enum
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.TimeZoneInfo.TransitionTime
  parent: System
  isExternal: false
  href: System.TimeZoneInfo.TransitionTime.yml
  name: TimeZoneInfo.TransitionTime
  fullName: System.TimeZoneInfo.TransitionTime
  type: Struct
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
